Maude> ==========================================
reduce in META-LEVEL : upSorts('META-LEVEL, true) .
rewrites: 1
result SortSet: 'Assignment ; 'Attr ; 'AttrSet ; 'Bool ; 'Bound ; 'CTermList ;
    'Char ; 'Condition ; 'Constant ; 'Context ; 'EqCondition ; 'Equation ;
    'EquationSet ; 'FModule ; 'FindResult ; 'GTermList ; 'GroundTerm ;
    'GroundTermList ; 'Hook ; 'HookList ; 'Import ; 'ImportList ; 'Kind ;
    'KindSet ; 'MatchPair ; 'MatchPair? ; 'MembAx ; 'MembAxSet ; 'Module ;
    'ModuleExpression ; 'Nat ; 'NatList ; 'NzNat ; 'OpDecl ; 'OpDeclSet ; 'Qid
    ; 'QidList ; 'Renaming ; 'RenamingSet ; 'Result4Tuple ; 'Result4Tuple? ;
    'ResultPair ; 'ResultPair? ; 'ResultTriple ; 'ResultTriple? ; 'Rule ;
    'RuleSet ; 'Sort ; 'SortSet ; 'String ; 'SubsortDecl ; 'SubsortDeclSet ;
    'Substitution ; 'Substitution? ; 'Term ; 'TermList ; 'Type ; 'Type? ;
    'TypeList ; 'Variable ; 'Zero
==========================================
reduce in META-LEVEL : upSorts('META-LEVEL, false) .
rewrites: 1
result SortSet: 'Bound ; 'KindSet ; 'MatchPair ; 'MatchPair? ; 'Result4Tuple ;
    'Result4Tuple? ; 'ResultPair ; 'ResultPair? ; 'ResultTriple ;
    'ResultTriple? ; 'Substitution? ; 'Type?
==========================================
reduce in META-LEVEL : upSubsortDecls('META-LEVEL, true) .
rewrites: 1
result SubsortDeclSet: subsort 'Assignment < 'Substitution .
subsort 'Attr < 'AttrSet .
subsort 'CTermList < 'GTermList .
subsort 'Char < 'String .
subsort 'Constant < 'GroundTerm .
subsort 'Constant < 'Qid .
subsort 'Constant < 'Term .
subsort 'Context < 'CTermList .
subsort 'EqCondition < 'Condition .
subsort 'Equation < 'EquationSet .
subsort 'FModule < 'Module .
subsort 'GroundTerm < 'GroundTermList .
subsort 'GroundTerm < 'Term .
subsort 'GroundTermList < 'TermList .
subsort 'Hook < 'HookList .
subsort 'Import < 'ImportList .
subsort 'Kind < 'KindSet .
subsort 'Kind < 'Type .
subsort 'MatchPair < 'MatchPair? .
subsort 'MembAx < 'MembAxSet .
subsort 'Nat < 'Bound .
subsort 'Nat < 'FindResult .
subsort 'Nat < 'NatList .
subsort 'NzNat < 'Nat .
subsort 'OpDecl < 'OpDeclSet .
subsort 'Qid < 'ModuleExpression .
subsort 'Qid < 'QidList .
subsort 'Renaming < 'RenamingSet .
subsort 'Result4Tuple < 'Result4Tuple? .
subsort 'ResultPair < 'ResultPair? .
subsort 'ResultTriple < 'ResultTriple? .
subsort 'Rule < 'RuleSet .
subsort 'Sort < 'SortSet .
subsort 'Sort < 'Type .
subsort 'SubsortDecl < 'SubsortDeclSet .
subsort 'Substitution < 'Substitution? .
subsort 'Term < 'TermList .
subsort 'TermList < 'GTermList .
subsort 'Type < 'Qid .
subsort 'Type < 'Type? .
subsort 'Type < 'TypeList .
subsort 'TypeList < 'QidList .
subsort 'Variable < 'Qid .
subsort 'Variable < 'Term .
subsort 'Zero < 'Nat .
==========================================
reduce in META-LEVEL : upSubsortDecls('META-LEVEL, false) .
rewrites: 1
result SubsortDeclSet: subsort 'Kind < 'KindSet .
subsort 'MatchPair < 'MatchPair? .
subsort 'Nat < 'Bound .
subsort 'Result4Tuple < 'Result4Tuple? .
subsort 'ResultPair < 'ResultPair? .
subsort 'ResultTriple < 'ResultTriple? .
subsort 'Substitution < 'Substitution? .
subsort 'Type < 'Type? .
==========================================
reduce in META-LEVEL : upImports('META-LEVEL) .
rewrites: 1
result ImportList: including 'BOOL .
protecting 'META-MODULE .
==========================================
reduce in META-LEVEL : upImports('NAT) .
rewrites: 1
result Import: including 'BOOL .
==========================================
reduce in META-LEVEL : upImports('TRUTH-VALUE) .
rewrites: 1
result ImportList: (nil).ImportList
==========================================
reduce in META-LEVEL : upOpDecls('TRUTH-VALUE, true) .
*********** equation
(built-in equation for symbol upOpDecls)
upOpDecls('TRUTH-VALUE, true)
--->
op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
rewrites: 1
result OpDeclSet: op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
==========================================
reduce in META-LEVEL : upOpDecls('META-LEVEL, true) .
rewrites: 1
result OpDeclSet: op '0 : nil -> 'Zero [ctor] .
op '<Qids> : nil -> 'Constant [special(
    id-hook('QuotedIdentifierSymbol, 'constantQid))] .
op '<Qids> : nil -> 'Kind [special(
    id-hook('QuotedIdentifierSymbol, 'kindQid))] .
op '<Qids> : nil -> 'Qid [special(
    id-hook('QuotedIdentifierSymbol, nil))] .
op '<Qids> : nil -> 'Sort [special(
    id-hook('QuotedIdentifierSymbol, 'sortQid))] .
op '<Qids> : nil -> 'Variable [special(
    id-hook('QuotedIdentifierSymbol, 'variableQid))] .
op '<Strings> : nil -> 'Char [special(
    id-hook('StringSymbol, nil))] .
op '<Strings> : nil -> 'String [special(
    id-hook('StringSymbol, nil))] .
op '_&_ : 'KindSet 'KindSet -> 'KindSet [assoc comm ctor id('empty.KindSet)] .
op '_&_ : 'Nat 'Nat -> 'Nat [assoc comm prec(53) special(
    id-hook('NumberOpSymbol, '&) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_*_ : 'Nat 'Nat -> 'Nat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_*_ : 'NzNat 'NzNat -> 'NzNat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_*`(_`) : 'ModuleExpression 'RenamingSet -> 'ModuleExpression [ctor prec(
    39) format('d 'd 's 'n++i 'n--i 'd)] .
op '_+_ : 'ModuleExpression 'ModuleExpression -> 'ModuleExpression [assoc comm
    ctor] .
op '_+_ : 'Nat 'Nat -> 'Nat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_+_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_+_ : 'String 'String -> 'String [prec(33) gather('E 'e) special(
    id-hook('StringOpSymbol, '+) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char))] .
op '_/\_ : 'Condition 'Condition -> 'Condition [assoc ctor id('nil.EqCondition)
    prec(73)] .
op '_/\_ : 'EqCondition 'EqCondition -> 'EqCondition [assoc ctor id(
    'nil.EqCondition) prec(73)] .
op '_:=_ : 'Term 'Term -> 'EqCondition [ctor prec(71)] .
op '_:_ : 'Term 'Sort -> 'EqCondition [ctor prec(71)] .
op '_;_ : 'SortSet 'SortSet -> 'SortSet [assoc comm ctor id('none.SortSet)] .
op '_;_ : 'Substitution 'Substitution -> 'Substitution [assoc comm ctor id(
    'none.Substitution) prec(65)] .
op '_<-_ : 'Variable 'Term -> 'Assignment [ctor prec(63) format('nt 'd 'd 'd)]
    .
op '_<<_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '<<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_<=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op '_<=_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '<=) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op '_<_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op '_<_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '<) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op '_=/=_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'false.Bool) 
    term-hook('notEqualTerm, 'true.Bool))] .
op '_==_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'true.Bool) 
    term-hook('notEqualTerm, 'false.Bool))] .
op '_=>_ : 'Term 'Term -> 'Condition [ctor prec(71)] .
op '_=_ : 'Term 'Term -> 'EqCondition [ctor prec(71)] .
op '_>=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op '_>=_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '>=) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op '_>>_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '>>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_>_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op '_>_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '>) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op '_^_ : 'Nat 'Nat -> 'Nat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_^_ : 'NzNat 'Nat -> 'NzNat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '__ : 'AttrSet 'AttrSet -> 'AttrSet [assoc comm ctor id('none.AttrSet)] .
op '__ : 'EquationSet 'EquationSet -> 'EquationSet [assoc comm ctor id(
    'none.EquationSet) format('d 'ni 'd)] .
op '__ : 'HookList 'HookList -> 'HookList [assoc ctor] .
op '__ : 'ImportList 'ImportList -> 'ImportList [assoc ctor id('nil.ImportList)
    format('d 'ni 'd)] .
op '__ : 'MembAxSet 'MembAxSet -> 'MembAxSet [assoc comm ctor id(
    'none.MembAxSet) format('d 'ni 'd)] .
op '__ : 'NatList 'NatList -> 'NatList [assoc ctor] .
op '__ : 'OpDeclSet 'OpDeclSet -> 'OpDeclSet [assoc comm ctor id(
    'none.OpDeclSet) format('d 'ni 'd)] .
op '__ : 'QidList 'QidList -> 'QidList [assoc ctor id('nil.TypeList)] .
op '__ : 'RuleSet 'RuleSet -> 'RuleSet [assoc comm ctor id('none.RuleSet)
    format('d 'ni 'd)] .
op '__ : 'SubsortDeclSet 'SubsortDeclSet -> 'SubsortDeclSet [assoc comm ctor
    id('none.SubsortDeclSet) format('d 'ni 'd)] .
op '__ : 'TypeList 'TypeList -> 'TypeList [assoc id('nil.TypeList)] .
op '_`,_ : 'CTermList 'TermList -> 'CTermList [assoc ctor prec(120) gather('e
    'E)] .
op '_`,_ : 'GroundTermList 'GroundTermList -> 'GroundTermList [assoc ctor prec(
    120) gather('e 'E)] .
op '_`,_ : 'RenamingSet 'RenamingSet -> 'RenamingSet [assoc comm ctor prec(43)
    format('d 'd 'ni 'd)] .
op '_`,_ : 'TermList 'CTermList -> 'CTermList [assoc ctor prec(120) gather('e
    'E)] .
op '_`,_ : 'TermList 'TermList -> 'TermList [assoc ctor prec(120) gather('e
    'E)] .
op '_`[_`] : 'Qid 'CTermList -> 'Context [ctor] .
op '_`[_`] : 'Qid 'GroundTermList -> 'GroundTerm [ctor] .
op '_`[_`] : 'Qid 'TermList -> 'Term [ctor] .
op '_and_ : 'Bool 'Bool -> 'Bool [assoc comm prec(55)] .
op '_divides_ : 'NzNat 'Nat -> 'Bool [prec(51) special(
    id-hook('NumberOpSymbol, 'divides) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op '_implies_ : 'Bool 'Bool -> 'Bool [prec(61) gather('e 'E)] .
op '_or_ : 'Bool 'Bool -> 'Bool [assoc comm prec(59)] .
op '_quo_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'quo) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_rem_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'rem) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_xor_ : 'Bool 'Bool -> 'Bool [assoc comm prec(57)] .
op '_xor_ : 'Nat 'Nat -> 'Nat [assoc comm prec(55) special(
    id-hook('NumberOpSymbol, 'xor) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_|_ : 'Nat 'Nat -> 'Nat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '_|_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op '`[_`] : 'Qid -> 'Module [none] .
op '`[`] : nil -> 'Context [ctor] .
op '`{_`,_`,_`,_`} : 'Term 'Type 'Substitution 'Context -> 'Result4Tuple [ctor]
    .
op '`{_`,_`,_`} : 'Term 'Type 'Substitution -> 'ResultTriple [ctor] .
op '`{_`,_`} : 'Substitution 'Context -> 'MatchPair [ctor] .
op '`{_`,_`} : 'Term 'Type -> 'ResultPair [ctor] .
op 'ambiguity : 'ResultPair 'ResultPair -> 'ResultPair? [ctor] .
op 'anyType : nil -> 'Type? [ctor] .
op 'ascii : 'Char -> 'Nat [special(
    id-hook('StringOpSymbol, 'ascii) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op 'assoc : nil -> 'Attr [ctor] .
op 'ceq_=_if_`[_`]. : 'Term 'Term 'EqCondition 'AttrSet -> 'Equation [ctor
    format('d 'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
op 'char : '`[FindResult`,NatList`,Bound`] -> '`[String`] [special(
    id-hook('StringOpSymbol, 'char) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op 'cmb_:_if_`[_`]. : 'Term 'Sort 'EqCondition 'AttrSet -> 'MembAx [ctor
    format('d 'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
op 'comm : nil -> 'Attr [ctor] .
op 'completeName : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaCompleteName) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'config : nil -> 'Attr [ctor] .
op 'crl_=>_if_`[_`]. : 'Term 'Term 'Condition 'AttrSet -> 'Rule [ctor format('d
    'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
op 'ctor : nil -> 'Attr [ctor] .
op 'downTerm : 'Term 'Universal -> 'Universal [poly(2 0) special(
    id-hook('MetaLevelOpSymbol, 'metaDownTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'empty : nil -> 'KindSet [ctor] .
op 'eq_=_`[_`]. : 'Term 'Term 'AttrSet -> 'Equation [ctor format('d 'd 'd 'd 's
    'd 'd 's 'd)] .
op 'extending_. : 'ModuleExpression -> 'Import [ctor] .
op 'failure : nil -> 'Result4Tuple? [ctor] .
op 'failure : nil -> 'ResultTriple? [ctor] .
op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
op 'find : 'String 'String 'Nat -> 'FindResult [special(
    id-hook('StringOpSymbol, 'find) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('notFoundTerm, 'notFound.FindResult))] .
op 'fmod_is_sorts_.____endfm : 'Qid 'ImportList 'SortSet 'SubsortDeclSet
    'OpDeclSet 'MembAxSet 'EquationSet -> 'FModule [ctor gather('& '& '& '& '&
    '& '&) format('d 'd 'd 'n++i 'ni 'd 'd 'ni 'ni 'ni 'ni 'n--i 'd)] .
op 'format : 'QidList -> 'Attr [ctor] .
op 'frozen : 'NatList -> 'Attr [ctor] .
op 'gather : 'QidList -> 'Attr [ctor] .
op 'gcd : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op 'gcd : 'NzNat 'Nat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op 'getContext : 'MatchPair -> 'Context [none] .
op 'getContext : 'Result4Tuple -> 'Context [none] .
op 'getEqs : 'Module -> 'EquationSet [none] .
op 'getImports : 'Module -> 'ImportList [none] .
op 'getKind : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGetKind) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'getKinds : '`[Module`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGetKinds) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'getMbs : 'Module -> 'MembAxSet [none] .
op 'getName : 'Constant -> 'Qid [none] .
op 'getName : 'Module -> 'Qid [none] .
op 'getName : 'Variable -> 'Qid [none] .
op 'getOps : 'Module -> 'OpDeclSet [none] .
op 'getRls : 'Module -> 'RuleSet [none] .
op 'getSorts : 'Module -> 'SortSet [none] .
op 'getSubsorts : 'Module -> 'SubsortDeclSet [none] .
op 'getSubstitution : 'MatchPair -> 'Substitution [none] .
op 'getSubstitution : 'Result4Tuple -> 'Substitution [none] .
op 'getSubstitution : 'ResultTriple -> 'Substitution [none] .
op 'getTerm : 'Result4Tuple -> 'Term [none] .
op 'getTerm : 'ResultPair -> 'Term [none] .
op 'getTerm : 'ResultTriple -> 'Term [none] .
op 'getType : 'Constant -> 'Type [none] .
op 'getType : 'Result4Tuple -> 'Type [none] .
op 'getType : 'ResultPair -> 'Type [none] .
op 'getType : 'ResultTriple -> 'Type [none] .
op 'getType : 'Variable -> 'Type [none] .
op 'glbSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGlbSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'id : 'Term -> 'Attr [ctor] .
op 'id-hook : 'Qid 'QidList -> 'Hook [ctor format('nssss 'd)] .
op 'idem : nil -> 'Attr [ctor] .
op 'if_then_else_fi : 'Bool 'Universal 'Universal -> 'Universal [poly(2 3 0)
    special(
    id-hook('BranchSymbol, nil) 
    term-hook('1, 'true.Bool) 
    term-hook('2, 'false.Bool))] .
op 'including_. : 'ModuleExpression -> 'Import [ctor] .
op 'iter : nil -> 'Attr [ctor] .
op 'label : 'Qid -> 'Attr [ctor] .
op 'label_to_ : 'Qid 'Qid -> 'Renaming [ctor] .
op 'lcm : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op 'lcm : 'NzNat 'NzNat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op 'leastSort : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaLeastSort) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'left-id : 'Term -> 'Attr [ctor] .
op 'length : 'String -> 'Nat [special(
    id-hook('StringOpSymbol, 'length) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op 'lesserSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaLesserSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'maximalSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMaximalSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'mb_:_`[_`]. : 'Term 'Sort 'AttrSet -> 'MembAx [ctor format('d 'd 'd 'd 's
    'd 'd 's 'd)] .
op 'memo : nil -> 'Attr [ctor] .
op 'metaApply : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Substitution?`] '`[FindResult`,NatList`,Bound`] -> '`[ResultTriple?`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaApply) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaFrewrite : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaFrewrite) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaMatch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`] '`[FindResult`,NatList`,Bound`] -> '`[Substitution?`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMatch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaParse : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaParse) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaPrettyPrint : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaPrettyPrint) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaReduce : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaReduce) 
    op-hook('qidSymbol, '<Qids>, nil, 'Qid) 
    op-hook('metaTermSymbol, '_`[_`], 'Qid 'GroundTermList, 'GroundTerm) 
    op-hook('metaArgSymbol, '_`,_, 'GroundTermList 'GroundTermList,
    'GroundTermList) 
    op-hook('assignmentSymbol, '_<-_, 'Variable 'Term, 'Assignment) 
    op-hook('emptySubstitutionSymbol, 'none, nil, 'Substitution) 
    op-hook('substitutionSymbol, '_;_, 'Substitution 'Substitution,
    'Substitution) 
    op-hook('holeSymbol, '`[`], nil, 'Context) 
    op-hook('protectingSymbol, 'protecting_., 'ModuleExpression, 'Import) 
    op-hook('extendingSymbol, 'extending_., 'ModuleExpression, 'Import) 
    op-hook('includingSymbol, 'including_., 'ModuleExpression, 'Import) 
    op-hook('nilImportListSymbol, 'nil, nil, 'ImportList) 
    op-hook('importListSymbol, '__, 'ImportList 'ImportList, 'ImportList) 
    op-hook('emptySortSetSymbol, 'none, nil, 'SortSet) 
    op-hook('sortSetSymbol, '_;_, 'SortSet 'SortSet, 'SortSet) 
    op-hook('subsortSymbol, 'subsort_<_., 'Sort 'Sort, 'SubsortDecl) 
    op-hook('emptySubsortDeclSetSymbol, 'none, nil, 'SubsortDeclSet) 
    op-hook('subsortDeclSetSymbol, '__, 'SubsortDeclSet 'SubsortDeclSet,
    'SubsortDeclSet) 
    op-hook('nilQidListSymbol, 'nil, nil, 'QidList) 
    op-hook('qidListSymbol, '__, 'QidList 'QidList, 'QidList) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    op-hook('natListSymbol, '__, 'NatList 'NatList, 'NatList) 
    op-hook('unboundedSymbol, 'unbounded, nil, 'Bound) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('sortRenamingSymbol, 'sort_to_, 'Qid 'Qid, 'Renaming) 
    op-hook('opRenamingSymbol, 'op_to_`[_`], 'Qid 'Qid 'AttrSet, 'Renaming) 
    op-hook('opRenamingSymbol2, 'op_:_->_to_`[_`], 'Qid 'TypeList 'Type 'Qid
    'AttrSet, 'Renaming) 
    op-hook('labelRenamingSymbol, 'label_to_, 'Qid 'Qid, 'Renaming) 
    op-hook('renamingSetSymbol, '_`,_, 'RenamingSet 'RenamingSet, 'RenamingSet)
    
    op-hook('sumSymbol, '_+_, 'ModuleExpression 'ModuleExpression,
    'ModuleExpression) 
    op-hook('renamingSymbol, '_*`(_`), 'ModuleExpression 'RenamingSet,
    'ModuleExpression) 
    op-hook('termHookSymbol, 'term-hook, 'Qid 'Term, 'Hook) 
    op-hook('hookListSymbol, '__, 'HookList 'HookList, 'HookList) 
    op-hook('idHookSymbol, 'id-hook, 'Qid 'QidList, 'Hook) 
    op-hook('opHookSymbol, 'op-hook, 'Qid 'Qid 'QidList 'Qid, 'Hook) 
    op-hook('assocSymbol, 'assoc, nil, 'Attr) 
    op-hook('commSymbol, 'comm, nil, 'Attr) 
    op-hook('idemSymbol, 'idem, nil, 'Attr) 
    op-hook('iterSymbol, 'iter, nil, 'Attr) 
    op-hook('idSymbol, 'id, 'Term, 'Attr) 
    op-hook('leftIdSymbol, 'left-id, 'Term, 'Attr) 
    op-hook('rightIdSymbol, 'right-id, 'Term, 'Attr) 
    op-hook('stratSymbol, 'strat, 'NatList, 'Attr) 
    op-hook('memoSymbol, 'memo, nil, 'Attr) 
    op-hook('precSymbol, 'prec, 'Nat, 'Attr) 
    op-hook('gatherSymbol, 'gather, 'QidList, 'Attr) 
    op-hook('formatSymbol, 'format, 'QidList, 'Attr) 
    op-hook('ctorSymbol, 'ctor, nil, 'Attr) 
    op-hook('frozenSymbol, 'frozen, 'NatList, 'Attr) 
    op-hook('polySymbol, 'poly, 'NatList, 'Attr) 
    op-hook('configSymbol, 'config, nil, 'Attr) 
    op-hook('objectSymbol, 'object, nil, 'Attr) 
    op-hook('msgSymbol, 'msg, nil, 'Attr) 
    op-hook('specialSymbol, 'special, 'HookList, 'Attr) 
    op-hook('labelSymbol, 'label, 'Qid, 'Attr) 
    op-hook('metadataSymbol, 'metadata, 'String, 'Attr) 
    op-hook('owiseSymbol, 'owise, nil, 'Attr) 
    op-hook('nonexecSymbol, 'nonexec, nil, 'Attr) 
    op-hook('emptyAttrSetSymbol, 'none, nil, 'AttrSet) 
    op-hook('attrSetSymbol, '__, 'AttrSet 'AttrSet, 'AttrSet) 
    op-hook('opDeclSymbol, 'op_:_->_`[_`]., 'Qid 'TypeList 'Type 'AttrSet,
    'OpDecl) 
    op-hook('opDeclSetSymbol, '__, 'OpDeclSet 'OpDeclSet, 'OpDeclSet) 
    op-hook('emptyOpDeclSetSymbol, 'none, nil, 'OpDeclSet) 
    op-hook('noConditionSymbol, 'nil, nil, 'EqCondition) 
    op-hook('equalityConditionSymbol, '_=_, 'Term 'Term, 'EqCondition) 
    op-hook('sortTestConditionSymbol, '_:_, 'Term 'Sort, 'EqCondition) 
    op-hook('matchConditionSymbol, '_:=_, 'Term 'Term, 'EqCondition) 
    op-hook('rewriteConditionSymbol, '_=>_, 'Term 'Term, 'Condition) 
    op-hook('conjunctionSymbol, '_/\_, 'EqCondition 'EqCondition, 'EqCondition)
    
    op-hook('mbSymbol, 'mb_:_`[_`]., 'Term 'Sort 'AttrSet, 'MembAx) 
    op-hook('cmbSymbol, 'cmb_:_if_`[_`]., 'Term 'Sort 'EqCondition 'AttrSet,
    'MembAx) 
    op-hook('emptyMembAxSetSymbol, 'none, nil, 'MembAxSet) 
    op-hook('membAxSetSymbol, '__, 'MembAxSet 'MembAxSet, 'MembAxSet) 
    op-hook('eqSymbol, 'eq_=_`[_`]., 'Term 'Term 'AttrSet, 'Equation) 
    op-hook('ceqSymbol, 'ceq_=_if_`[_`]., 'Term 'Term 'EqCondition 'AttrSet,
    'Equation) 
    op-hook('emptyEquationSetSymbol, 'none, nil, 'EquationSet) 
    op-hook('equationSetSymbol, '__, 'EquationSet 'EquationSet, 'EquationSet) 
    op-hook('rlSymbol, 'rl_=>_`[_`]., 'Term 'Term 'AttrSet, 'Rule) 
    op-hook('crlSymbol, 'crl_=>_if_`[_`]., 'Term 'Term 'Condition 'AttrSet,
    'Rule) 
    op-hook('emptyRuleSetSymbol, 'none, nil, 'RuleSet) 
    op-hook('ruleSetSymbol, '__, 'RuleSet 'RuleSet, 'RuleSet) 
    op-hook('fmodSymbol, 'fmod_is_sorts_.____endfm, 'Qid 'ImportList 'SortSet
    'SubsortDeclSet 'OpDeclSet 'MembAxSet 'EquationSet, 'FModule) 
    op-hook('modSymbol, 'mod_is_sorts_._____endm, 'Qid 'ImportList 'SortSet
    'SubsortDeclSet 'OpDeclSet 'MembAxSet 'EquationSet 'RuleSet, 'Module) 
    op-hook('emptyKindSetSymbol, 'empty, nil, 'KindSet) 
    op-hook('kindSetSymbol, '_&_, 'KindSet 'KindSet, 'KindSet) 
    op-hook('anyTypeSymbol, 'anyType, nil, 'Type?) 
    op-hook('resultPairSymbol, '`{_`,_`}, 'Term 'Type, 'ResultPair) 
    op-hook('resultTripleSymbol, '`{_`,_`,_`}, 'Term 'Type 'Substitution,
    'ResultTriple) 
    op-hook('result4TupleSymbol, '`{_`,_`,_`,_`}, 'Term 'Type 'Substitution
    'Context, 'Result4Tuple) 
    op-hook('matchPairSymbol, '`{_`,_`}, 'Substitution 'Context, 'MatchPair) 
    op-hook('noParseSymbol, 'noParse, 'Nat, 'ResultPair?) 
    op-hook('ambiguitySymbol, 'ambiguity, 'ResultPair 'ResultPair,
    'ResultPair?) 
    op-hook('failure3Symbol, 'failure, nil, 'ResultTriple?) 
    op-hook('failure4Symbol, 'failure, nil, 'Result4Tuple?) 
    op-hook('noMatchSubstSymbol, 'noMatch, nil, 'Substitution?) 
    op-hook('noMatchPairSymbol, 'noMatch, nil, 'MatchPair?) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op 'metaRewrite : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] -> '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaRewrite) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaSearch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[ResultTriple?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSearch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaXapply : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Substitution?`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[Result4Tuple?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaXapply) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaXmatch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[MatchPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaXmatch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metadata : 'String -> 'Attr [ctor] .
op 'minimalSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMinimalSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'modExp : '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] -> '`[FindResult`,NatList`,Bound`] [
    special(
    id-hook('NumberOpSymbol, 'modExp) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op 'mod_is_sorts_._____endm : 'Qid 'ImportList 'SortSet 'SubsortDeclSet
    'OpDeclSet 'MembAxSet 'EquationSet 'RuleSet -> 'Module [ctor gather('& '&
    '& '& '& '& '& '&) format('d 'd 'd 'n++i 'ni 'd 'd 'ni 'ni 'ni 'ni 'ni
    'n--i 'd)] .
op 'msg : nil -> 'Attr [ctor] .
op 'nil : nil -> 'EqCondition [none] .
op 'nil : nil -> 'ImportList [ctor] .
op 'nil : nil -> 'QidList [ctor] .
op 'nil : nil -> 'TypeList [ctor] .
op 'noMatch : nil -> 'MatchPair? [ctor] .
op 'noMatch : nil -> 'Substitution? [ctor] .
op 'noParse : 'Nat -> 'ResultPair? [ctor] .
op 'none : nil -> 'AttrSet [ctor] .
op 'none : nil -> 'EquationSet [ctor] .
op 'none : nil -> 'MembAxSet [ctor] .
op 'none : nil -> 'OpDeclSet [ctor] .
op 'none : nil -> 'RuleSet [ctor] .
op 'none : nil -> 'SortSet [ctor] .
op 'none : nil -> 'SubsortDeclSet [ctor] .
op 'none : nil -> 'Substitution [ctor] .
op 'nonexec : nil -> 'Attr [ctor] .
op 'notFound : nil -> 'FindResult [none] .
op 'not_ : 'Bool -> 'Bool [prec(53)] .
op 'object : nil -> 'Attr [ctor] .
op 'op-hook : 'Qid 'Qid 'QidList 'Qid -> 'Hook [ctor format('nssss 'd)] .
op 'op_:_->_`[_`]. : 'Qid 'TypeList 'Type 'AttrSet -> 'OpDecl [ctor format('d
    'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
op 'op_:_->_to_`[_`] : 'Qid 'TypeList 'Type 'Qid 'AttrSet -> 'Renaming [ctor
    format('d 'd 'd 'd 'd 'd 'd 'd 's 'd 'd 'd)] .
op 'op_to_`[_`] : 'Qid 'Qid 'AttrSet -> 'Renaming [ctor format('d 'd 'd 'd 's
    'd 'd 'd)] .
op 'owise : nil -> 'Attr [ctor] .
op 'poly : 'NatList -> 'Attr [ctor] .
op 'prec : 'Nat -> 'Attr [ctor] .
op 'protecting_. : 'ModuleExpression -> 'Import [ctor] .
op 'qid : '`[String`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('QuotedIdentifierOpSymbol, 'qid) 
    op-hook('quotedIdentifierSymbol, '<Qids>, nil, 'Qid) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char))] .
op 'rfind : 'String 'String 'Nat -> 'FindResult [special(
    id-hook('StringOpSymbol, 'rfind) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('notFoundTerm, 'notFound.FindResult))] .
op 'right-id : 'Term -> 'Attr [ctor] .
op 'rl_=>_`[_`]. : 'Term 'Term 'AttrSet -> 'Rule [ctor format('d 'd 'd 'd 's 'd
    'd 's 'd)] .
op 's_ : 'Nat -> 'NzNat [iter ctor special(
    id-hook('SuccSymbol, nil) 
    term-hook('zeroTerm, '0.Zero))] .
op 'sameKind : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSameKind) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'sd : 'Nat 'Nat -> 'Nat [comm special(
    id-hook('NumberOpSymbol, 'sd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op 'sortLeq : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSortLeq) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'sort_to_ : 'Qid 'Qid -> 'Renaming [ctor] .
op 'special : 'HookList -> 'Attr [ctor] .
op 'strat : 'NatList -> 'Attr [ctor] .
op 'string : 'Qid -> 'String [special(
    id-hook('QuotedIdentifierOpSymbol, 'string) 
    op-hook('quotedIdentifierSymbol, '<Qids>, nil, 'Qid) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char))] .
op 'subsort_<_. : 'Sort 'Sort -> 'SubsortDecl [ctor] .
op 'substr : 'String 'Nat 'Nat -> 'String [special(
    id-hook('StringOpSymbol, 'substr) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
op 'term-hook : 'Qid 'Term -> 'Hook [ctor format('nssss 'd)] .
op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
op 'unbounded : nil -> 'Bound [none] .
op 'upEqs : '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[EquationSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpEqs) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upImports :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ImportList`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpImports) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upMbs : '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[MembAxSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpMbs) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upModule :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[Module`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpModule) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upOpDecls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[OpDeclSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpOpDecls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upRls : '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[RuleSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpRls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upSorts :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaUpSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upSubsortDecls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[SubsortDeclSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpSubsortDecls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upTerm : 'Universal -> 'Term [poly(1) special(
    id-hook('MetaLevelOpSymbol, 'metaUpTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'wellFormed : 'Module -> 'Bool [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedModule) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'wellFormed : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'wellFormed : '`[Module`] '`[Substitution?`] -> '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedSubstitution) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
==========================================
reduce in META-LEVEL : upOpDecls('META-LEVEL, false) .
rewrites: 1
result OpDeclSet: op '_&_ : 'KindSet 'KindSet -> 'KindSet [assoc comm ctor id(
    'empty.KindSet)] .
op '`{_`,_`,_`,_`} : 'Term 'Type 'Substitution 'Context -> 'Result4Tuple [ctor]
    .
op '`{_`,_`,_`} : 'Term 'Type 'Substitution -> 'ResultTriple [ctor] .
op '`{_`,_`} : 'Substitution 'Context -> 'MatchPair [ctor] .
op '`{_`,_`} : 'Term 'Type -> 'ResultPair [ctor] .
op 'ambiguity : 'ResultPair 'ResultPair -> 'ResultPair? [ctor] .
op 'anyType : nil -> 'Type? [ctor] .
op 'completeName : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaCompleteName) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'downTerm : 'Term 'Universal -> 'Universal [poly(2 0) special(
    id-hook('MetaLevelOpSymbol, 'metaDownTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'empty : nil -> 'KindSet [ctor] .
op 'failure : nil -> 'Result4Tuple? [ctor] .
op 'failure : nil -> 'ResultTriple? [ctor] .
op 'getContext : 'MatchPair -> 'Context [none] .
op 'getContext : 'Result4Tuple -> 'Context [none] .
op 'getKind : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGetKind) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'getKinds : '`[Module`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGetKinds) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'getSubstitution : 'MatchPair -> 'Substitution [none] .
op 'getSubstitution : 'Result4Tuple -> 'Substitution [none] .
op 'getSubstitution : 'ResultTriple -> 'Substitution [none] .
op 'getTerm : 'Result4Tuple -> 'Term [none] .
op 'getTerm : 'ResultPair -> 'Term [none] .
op 'getTerm : 'ResultTriple -> 'Term [none] .
op 'getType : 'Result4Tuple -> 'Type [none] .
op 'getType : 'ResultPair -> 'Type [none] .
op 'getType : 'ResultTriple -> 'Type [none] .
op 'glbSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGlbSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'leastSort : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaLeastSort) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'lesserSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaLesserSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'maximalSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMaximalSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaApply : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Substitution?`] '`[FindResult`,NatList`,Bound`] -> '`[ResultTriple?`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaApply) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaFrewrite : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaFrewrite) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaMatch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`] '`[FindResult`,NatList`,Bound`] -> '`[Substitution?`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMatch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaParse : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaParse) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaPrettyPrint : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaPrettyPrint) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaReduce : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaReduce) 
    op-hook('qidSymbol, '<Qids>, nil, 'Qid) 
    op-hook('metaTermSymbol, '_`[_`], 'Qid 'GroundTermList, 'GroundTerm) 
    op-hook('metaArgSymbol, '_`,_, 'GroundTermList 'GroundTermList,
    'GroundTermList) 
    op-hook('assignmentSymbol, '_<-_, 'Variable 'Term, 'Assignment) 
    op-hook('emptySubstitutionSymbol, 'none, nil, 'Substitution) 
    op-hook('substitutionSymbol, '_;_, 'Substitution 'Substitution,
    'Substitution) 
    op-hook('holeSymbol, '`[`], nil, 'Context) 
    op-hook('protectingSymbol, 'protecting_., 'ModuleExpression, 'Import) 
    op-hook('extendingSymbol, 'extending_., 'ModuleExpression, 'Import) 
    op-hook('includingSymbol, 'including_., 'ModuleExpression, 'Import) 
    op-hook('nilImportListSymbol, 'nil, nil, 'ImportList) 
    op-hook('importListSymbol, '__, 'ImportList 'ImportList, 'ImportList) 
    op-hook('emptySortSetSymbol, 'none, nil, 'SortSet) 
    op-hook('sortSetSymbol, '_;_, 'SortSet 'SortSet, 'SortSet) 
    op-hook('subsortSymbol, 'subsort_<_., 'Sort 'Sort, 'SubsortDecl) 
    op-hook('emptySubsortDeclSetSymbol, 'none, nil, 'SubsortDeclSet) 
    op-hook('subsortDeclSetSymbol, '__, 'SubsortDeclSet 'SubsortDeclSet,
    'SubsortDeclSet) 
    op-hook('nilQidListSymbol, 'nil, nil, 'QidList) 
    op-hook('qidListSymbol, '__, 'QidList 'QidList, 'QidList) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    op-hook('natListSymbol, '__, 'NatList 'NatList, 'NatList) 
    op-hook('unboundedSymbol, 'unbounded, nil, 'Bound) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('sortRenamingSymbol, 'sort_to_, 'Qid 'Qid, 'Renaming) 
    op-hook('opRenamingSymbol, 'op_to_`[_`], 'Qid 'Qid 'AttrSet, 'Renaming) 
    op-hook('opRenamingSymbol2, 'op_:_->_to_`[_`], 'Qid 'TypeList 'Type 'Qid
    'AttrSet, 'Renaming) 
    op-hook('labelRenamingSymbol, 'label_to_, 'Qid 'Qid, 'Renaming) 
    op-hook('renamingSetSymbol, '_`,_, 'RenamingSet 'RenamingSet, 'RenamingSet)
    
    op-hook('sumSymbol, '_+_, 'ModuleExpression 'ModuleExpression,
    'ModuleExpression) 
    op-hook('renamingSymbol, '_*`(_`), 'ModuleExpression 'RenamingSet,
    'ModuleExpression) 
    op-hook('termHookSymbol, 'term-hook, 'Qid 'Term, 'Hook) 
    op-hook('hookListSymbol, '__, 'HookList 'HookList, 'HookList) 
    op-hook('idHookSymbol, 'id-hook, 'Qid 'QidList, 'Hook) 
    op-hook('opHookSymbol, 'op-hook, 'Qid 'Qid 'QidList 'Qid, 'Hook) 
    op-hook('assocSymbol, 'assoc, nil, 'Attr) 
    op-hook('commSymbol, 'comm, nil, 'Attr) 
    op-hook('idemSymbol, 'idem, nil, 'Attr) 
    op-hook('iterSymbol, 'iter, nil, 'Attr) 
    op-hook('idSymbol, 'id, 'Term, 'Attr) 
    op-hook('leftIdSymbol, 'left-id, 'Term, 'Attr) 
    op-hook('rightIdSymbol, 'right-id, 'Term, 'Attr) 
    op-hook('stratSymbol, 'strat, 'NatList, 'Attr) 
    op-hook('memoSymbol, 'memo, nil, 'Attr) 
    op-hook('precSymbol, 'prec, 'Nat, 'Attr) 
    op-hook('gatherSymbol, 'gather, 'QidList, 'Attr) 
    op-hook('formatSymbol, 'format, 'QidList, 'Attr) 
    op-hook('ctorSymbol, 'ctor, nil, 'Attr) 
    op-hook('frozenSymbol, 'frozen, 'NatList, 'Attr) 
    op-hook('polySymbol, 'poly, 'NatList, 'Attr) 
    op-hook('configSymbol, 'config, nil, 'Attr) 
    op-hook('objectSymbol, 'object, nil, 'Attr) 
    op-hook('msgSymbol, 'msg, nil, 'Attr) 
    op-hook('specialSymbol, 'special, 'HookList, 'Attr) 
    op-hook('labelSymbol, 'label, 'Qid, 'Attr) 
    op-hook('metadataSymbol, 'metadata, 'String, 'Attr) 
    op-hook('owiseSymbol, 'owise, nil, 'Attr) 
    op-hook('nonexecSymbol, 'nonexec, nil, 'Attr) 
    op-hook('emptyAttrSetSymbol, 'none, nil, 'AttrSet) 
    op-hook('attrSetSymbol, '__, 'AttrSet 'AttrSet, 'AttrSet) 
    op-hook('opDeclSymbol, 'op_:_->_`[_`]., 'Qid 'TypeList 'Type 'AttrSet,
    'OpDecl) 
    op-hook('opDeclSetSymbol, '__, 'OpDeclSet 'OpDeclSet, 'OpDeclSet) 
    op-hook('emptyOpDeclSetSymbol, 'none, nil, 'OpDeclSet) 
    op-hook('noConditionSymbol, 'nil, nil, 'EqCondition) 
    op-hook('equalityConditionSymbol, '_=_, 'Term 'Term, 'EqCondition) 
    op-hook('sortTestConditionSymbol, '_:_, 'Term 'Sort, 'EqCondition) 
    op-hook('matchConditionSymbol, '_:=_, 'Term 'Term, 'EqCondition) 
    op-hook('rewriteConditionSymbol, '_=>_, 'Term 'Term, 'Condition) 
    op-hook('conjunctionSymbol, '_/\_, 'EqCondition 'EqCondition, 'EqCondition)
    
    op-hook('mbSymbol, 'mb_:_`[_`]., 'Term 'Sort 'AttrSet, 'MembAx) 
    op-hook('cmbSymbol, 'cmb_:_if_`[_`]., 'Term 'Sort 'EqCondition 'AttrSet,
    'MembAx) 
    op-hook('emptyMembAxSetSymbol, 'none, nil, 'MembAxSet) 
    op-hook('membAxSetSymbol, '__, 'MembAxSet 'MembAxSet, 'MembAxSet) 
    op-hook('eqSymbol, 'eq_=_`[_`]., 'Term 'Term 'AttrSet, 'Equation) 
    op-hook('ceqSymbol, 'ceq_=_if_`[_`]., 'Term 'Term 'EqCondition 'AttrSet,
    'Equation) 
    op-hook('emptyEquationSetSymbol, 'none, nil, 'EquationSet) 
    op-hook('equationSetSymbol, '__, 'EquationSet 'EquationSet, 'EquationSet) 
    op-hook('rlSymbol, 'rl_=>_`[_`]., 'Term 'Term 'AttrSet, 'Rule) 
    op-hook('crlSymbol, 'crl_=>_if_`[_`]., 'Term 'Term 'Condition 'AttrSet,
    'Rule) 
    op-hook('emptyRuleSetSymbol, 'none, nil, 'RuleSet) 
    op-hook('ruleSetSymbol, '__, 'RuleSet 'RuleSet, 'RuleSet) 
    op-hook('fmodSymbol, 'fmod_is_sorts_.____endfm, 'Qid 'ImportList 'SortSet
    'SubsortDeclSet 'OpDeclSet 'MembAxSet 'EquationSet, 'FModule) 
    op-hook('modSymbol, 'mod_is_sorts_._____endm, 'Qid 'ImportList 'SortSet
    'SubsortDeclSet 'OpDeclSet 'MembAxSet 'EquationSet 'RuleSet, 'Module) 
    op-hook('emptyKindSetSymbol, 'empty, nil, 'KindSet) 
    op-hook('kindSetSymbol, '_&_, 'KindSet 'KindSet, 'KindSet) 
    op-hook('anyTypeSymbol, 'anyType, nil, 'Type?) 
    op-hook('resultPairSymbol, '`{_`,_`}, 'Term 'Type, 'ResultPair) 
    op-hook('resultTripleSymbol, '`{_`,_`,_`}, 'Term 'Type 'Substitution,
    'ResultTriple) 
    op-hook('result4TupleSymbol, '`{_`,_`,_`,_`}, 'Term 'Type 'Substitution
    'Context, 'Result4Tuple) 
    op-hook('matchPairSymbol, '`{_`,_`}, 'Substitution 'Context, 'MatchPair) 
    op-hook('noParseSymbol, 'noParse, 'Nat, 'ResultPair?) 
    op-hook('ambiguitySymbol, 'ambiguity, 'ResultPair 'ResultPair,
    'ResultPair?) 
    op-hook('failure3Symbol, 'failure, nil, 'ResultTriple?) 
    op-hook('failure4Symbol, 'failure, nil, 'Result4Tuple?) 
    op-hook('noMatchSubstSymbol, 'noMatch, nil, 'Substitution?) 
    op-hook('noMatchPairSymbol, 'noMatch, nil, 'MatchPair?) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
op 'metaRewrite : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] -> '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaRewrite) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaSearch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[ResultTriple?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSearch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaXapply : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Substitution?`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[Result4Tuple?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaXapply) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'metaXmatch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[MatchPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaXmatch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'minimalSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMinimalSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'noMatch : nil -> 'MatchPair? [ctor] .
op 'noMatch : nil -> 'Substitution? [ctor] .
op 'noParse : 'Nat -> 'ResultPair? [ctor] .
op 'sameKind : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSameKind) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'sortLeq : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSortLeq) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'unbounded : nil -> 'Bound [none] .
op 'upEqs : '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[EquationSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpEqs) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upImports :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ImportList`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpImports) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upMbs : '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[MembAxSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpMbs) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upModule :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[Module`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpModule) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upOpDecls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[OpDeclSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpOpDecls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upRls : '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[RuleSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpRls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upSorts :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaUpSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upSubsortDecls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[SubsortDeclSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpSubsortDecls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'upTerm : 'Universal -> 'Term [poly(1) special(
    id-hook('MetaLevelOpSymbol, 'metaUpTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'wellFormed : 'Module -> 'Bool [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedModule) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'wellFormed : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
op 'wellFormed : '`[Module`] '`[Substitution?`] -> '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedSubstitution) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
==========================================
reduce in META-LEVEL : upOpDecls('IDENTICAL, true) .
rewrites: 1
result OpDeclSet: op '_=/==_ : 'Universal 'Universal -> 'Bool [strat(0) prec(
    51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'false.Bool) 
    term-hook('notEqualTerm, 'true.Bool))] .
op '_=/=_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'false.Bool) 
    term-hook('notEqualTerm, 'true.Bool))] .
op '_===_ : 'Universal 'Universal -> 'Bool [strat(0) prec(51) poly(1 2)
    special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'true.Bool) 
    term-hook('notEqualTerm, 'false.Bool))] .
op '_==_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'true.Bool) 
    term-hook('notEqualTerm, 'false.Bool))] .
op '_and_ : 'Bool 'Bool -> 'Bool [assoc comm prec(55)] .
op '_implies_ : 'Bool 'Bool -> 'Bool [prec(61) gather('e 'E)] .
op '_or_ : 'Bool 'Bool -> 'Bool [assoc comm prec(59)] .
op '_xor_ : 'Bool 'Bool -> 'Bool [assoc comm prec(57)] .
op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
op 'if_then_else_fi : 'Bool 'Universal 'Universal -> 'Universal [poly(2 3 0)
    special(
    id-hook('BranchSymbol, nil) 
    term-hook('1, 'true.Bool) 
    term-hook('2, 'false.Bool))] .
op 'not_ : 'Bool -> 'Bool [prec(53)] .
op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
==========================================
reduce in META-LEVEL : upModule('META-LEVEL, true) .
rewrites: 1
result FModule: fmod 'META-LEVEL is
  nil
  sorts 'Assignment ; 'Attr ; 'AttrSet ; 'Bool ; 'Bound ; 'CTermList ; 'Char ;
    'Condition ; 'Constant ; 'Context ; 'EqCondition ; 'Equation ; 'EquationSet
    ; 'FModule ; 'FindResult ; 'GTermList ; 'GroundTerm ; 'GroundTermList ;
    'Hook ; 'HookList ; 'Import ; 'ImportList ; 'Kind ; 'KindSet ; 'MatchPair ;
    'MatchPair? ; 'MembAx ; 'MembAxSet ; 'Module ; 'ModuleExpression ; 'Nat ;
    'NatList ; 'NzNat ; 'OpDecl ; 'OpDeclSet ; 'Qid ; 'QidList ; 'Renaming ;
    'RenamingSet ; 'Result4Tuple ; 'Result4Tuple? ; 'ResultPair ; 'ResultPair?
    ; 'ResultTriple ; 'ResultTriple? ; 'Rule ; 'RuleSet ; 'Sort ; 'SortSet ;
    'String ; 'SubsortDecl ; 'SubsortDeclSet ; 'Substitution ; 'Substitution? ;
    'Term ; 'TermList ; 'Type ; 'Type? ; 'TypeList ; 'Variable ; 'Zero .
  subsort 'Assignment < 'Substitution .
  subsort 'Attr < 'AttrSet .
  subsort 'CTermList < 'GTermList .
  subsort 'Char < 'String .
  subsort 'Constant < 'GroundTerm .
  subsort 'Constant < 'Qid .
  subsort 'Constant < 'Term .
  subsort 'Context < 'CTermList .
  subsort 'EqCondition < 'Condition .
  subsort 'Equation < 'EquationSet .
  subsort 'FModule < 'Module .
  subsort 'GroundTerm < 'GroundTermList .
  subsort 'GroundTerm < 'Term .
  subsort 'GroundTermList < 'TermList .
  subsort 'Hook < 'HookList .
  subsort 'Import < 'ImportList .
  subsort 'Kind < 'KindSet .
  subsort 'Kind < 'Type .
  subsort 'MatchPair < 'MatchPair? .
  subsort 'MembAx < 'MembAxSet .
  subsort 'Nat < 'Bound .
  subsort 'Nat < 'FindResult .
  subsort 'Nat < 'NatList .
  subsort 'NzNat < 'Nat .
  subsort 'OpDecl < 'OpDeclSet .
  subsort 'Qid < 'ModuleExpression .
  subsort 'Qid < 'QidList .
  subsort 'Renaming < 'RenamingSet .
  subsort 'Result4Tuple < 'Result4Tuple? .
  subsort 'ResultPair < 'ResultPair? .
  subsort 'ResultTriple < 'ResultTriple? .
  subsort 'Rule < 'RuleSet .
  subsort 'Sort < 'SortSet .
  subsort 'Sort < 'Type .
  subsort 'SubsortDecl < 'SubsortDeclSet .
  subsort 'Substitution < 'Substitution? .
  subsort 'Term < 'TermList .
  subsort 'TermList < 'GTermList .
  subsort 'Type < 'Qid .
  subsort 'Type < 'Type? .
  subsort 'Type < 'TypeList .
  subsort 'TypeList < 'QidList .
  subsort 'Variable < 'Qid .
  subsort 'Variable < 'Term .
  subsort 'Zero < 'Nat .
  op '0 : nil -> 'Zero [ctor] .
  op '<Qids> : nil -> 'Constant [special(
    id-hook('QuotedIdentifierSymbol, 'constantQid))] .
  op '<Qids> : nil -> 'Kind [special(
    id-hook('QuotedIdentifierSymbol, 'kindQid))] .
  op '<Qids> : nil -> 'Qid [special(
    id-hook('QuotedIdentifierSymbol, nil))] .
  op '<Qids> : nil -> 'Sort [special(
    id-hook('QuotedIdentifierSymbol, 'sortQid))] .
  op '<Qids> : nil -> 'Variable [special(
    id-hook('QuotedIdentifierSymbol, 'variableQid))] .
  op '<Strings> : nil -> 'Char [special(
    id-hook('StringSymbol, nil))] .
  op '<Strings> : nil -> 'String [special(
    id-hook('StringSymbol, nil))] .
  op '_&_ : 'KindSet 'KindSet -> 'KindSet [assoc comm ctor id('empty.KindSet)]
    .
  op '_&_ : 'Nat 'Nat -> 'Nat [assoc comm prec(53) special(
    id-hook('NumberOpSymbol, '&) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*_ : 'Nat 'Nat -> 'Nat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*_ : 'NzNat 'NzNat -> 'NzNat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*`(_`) : 'ModuleExpression 'RenamingSet -> 'ModuleExpression [ctor prec(
    39) format('d 'd 's 'n++i 'n--i 'd)] .
  op '_+_ : 'ModuleExpression 'ModuleExpression -> 'ModuleExpression [assoc
    comm ctor] .
  op '_+_ : 'Nat 'Nat -> 'Nat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'String 'String -> 'String [prec(33) gather('E 'e) special(
    id-hook('StringOpSymbol, '+) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char))] .
  op '_/\_ : 'Condition 'Condition -> 'Condition [assoc ctor id(
    'nil.EqCondition) prec(73)] .
  op '_/\_ : 'EqCondition 'EqCondition -> 'EqCondition [assoc ctor id(
    'nil.EqCondition) prec(73)] .
  op '_:=_ : 'Term 'Term -> 'EqCondition [ctor prec(71)] .
  op '_:_ : 'Term 'Sort -> 'EqCondition [ctor prec(71)] .
  op '_;_ : 'SortSet 'SortSet -> 'SortSet [assoc comm ctor id('none.SortSet)] .
  op '_;_ : 'Substitution 'Substitution -> 'Substitution [assoc comm ctor id(
    'none.Substitution) prec(65)] .
  op '_<-_ : 'Variable 'Term -> 'Assignment [ctor prec(63) format('nt 'd 'd
    'd)] .
  op '_<<_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '<<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_<=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<=_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '<=) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '<) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_=/=_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'false.Bool) 
    term-hook('notEqualTerm, 'true.Bool))] .
  op '_==_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'true.Bool) 
    term-hook('notEqualTerm, 'false.Bool))] .
  op '_=>_ : 'Term 'Term -> 'Condition [ctor prec(71)] .
  op '_=_ : 'Term 'Term -> 'EqCondition [ctor prec(71)] .
  op '_>=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>=_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '>=) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>>_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '>>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_>_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '>) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_^_ : 'Nat 'Nat -> 'Nat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_^_ : 'NzNat 'Nat -> 'NzNat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '__ : 'AttrSet 'AttrSet -> 'AttrSet [assoc comm ctor id('none.AttrSet)] .
  op '__ : 'EquationSet 'EquationSet -> 'EquationSet [assoc comm ctor id(
    'none.EquationSet) format('d 'ni 'd)] .
  op '__ : 'HookList 'HookList -> 'HookList [assoc ctor] .
  op '__ : 'ImportList 'ImportList -> 'ImportList [assoc ctor id(
    'nil.ImportList) format('d 'ni 'd)] .
  op '__ : 'MembAxSet 'MembAxSet -> 'MembAxSet [assoc comm ctor id(
    'none.MembAxSet) format('d 'ni 'd)] .
  op '__ : 'NatList 'NatList -> 'NatList [assoc ctor] .
  op '__ : 'OpDeclSet 'OpDeclSet -> 'OpDeclSet [assoc comm ctor id(
    'none.OpDeclSet) format('d 'ni 'd)] .
  op '__ : 'QidList 'QidList -> 'QidList [assoc ctor id('nil.TypeList)] .
  op '__ : 'RuleSet 'RuleSet -> 'RuleSet [assoc comm ctor id('none.RuleSet)
    format('d 'ni 'd)] .
  op '__ : 'SubsortDeclSet 'SubsortDeclSet -> 'SubsortDeclSet [assoc comm ctor
    id('none.SubsortDeclSet) format('d 'ni 'd)] .
  op '__ : 'TypeList 'TypeList -> 'TypeList [assoc id('nil.TypeList)] .
  op '_`,_ : 'CTermList 'TermList -> 'CTermList [assoc ctor prec(120) gather('e
    'E)] .
  op '_`,_ : 'GroundTermList 'GroundTermList -> 'GroundTermList [assoc ctor
    prec(120) gather('e 'E)] .
  op '_`,_ : 'RenamingSet 'RenamingSet -> 'RenamingSet [assoc comm ctor prec(
    43) format('d 'd 'ni 'd)] .
  op '_`,_ : 'TermList 'CTermList -> 'CTermList [assoc ctor prec(120) gather('e
    'E)] .
  op '_`,_ : 'TermList 'TermList -> 'TermList [assoc ctor prec(120) gather('e
    'E)] .
  op '_`[_`] : 'Qid 'CTermList -> 'Context [ctor] .
  op '_`[_`] : 'Qid 'GroundTermList -> 'GroundTerm [ctor] .
  op '_`[_`] : 'Qid 'TermList -> 'Term [ctor] .
  op '_and_ : 'Bool 'Bool -> 'Bool [assoc comm prec(55)] .
  op '_divides_ : 'NzNat 'Nat -> 'Bool [prec(51) special(
    id-hook('NumberOpSymbol, 'divides) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_implies_ : 'Bool 'Bool -> 'Bool [prec(61) gather('e 'E)] .
  op '_or_ : 'Bool 'Bool -> 'Bool [assoc comm prec(59)] .
  op '_quo_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'quo) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_rem_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'rem) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_xor_ : 'Bool 'Bool -> 'Bool [assoc comm prec(57)] .
  op '_xor_ : 'Nat 'Nat -> 'Nat [assoc comm prec(55) special(
    id-hook('NumberOpSymbol, 'xor) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_|_ : 'Nat 'Nat -> 'Nat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_|_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '`[_`] : 'Qid -> 'Module [none] .
  op '`[`] : nil -> 'Context [ctor] .
  op '`{_`,_`,_`,_`} : 'Term 'Type 'Substitution 'Context -> 'Result4Tuple [
    ctor] .
  op '`{_`,_`,_`} : 'Term 'Type 'Substitution -> 'ResultTriple [ctor] .
  op '`{_`,_`} : 'Substitution 'Context -> 'MatchPair [ctor] .
  op '`{_`,_`} : 'Term 'Type -> 'ResultPair [ctor] .
  op 'ambiguity : 'ResultPair 'ResultPair -> 'ResultPair? [ctor] .
  op 'anyType : nil -> 'Type? [ctor] .
  op 'ascii : 'Char -> 'Nat [special(
    id-hook('StringOpSymbol, 'ascii) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'assoc : nil -> 'Attr [ctor] .
  op 'ceq_=_if_`[_`]. : 'Term 'Term 'EqCondition 'AttrSet -> 'Equation [ctor
    format('d 'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
  op 'char : '`[FindResult`,NatList`,Bound`] -> '`[String`] [special(
    id-hook('StringOpSymbol, 'char) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'cmb_:_if_`[_`]. : 'Term 'Sort 'EqCondition 'AttrSet -> 'MembAx [ctor
    format('d 'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
  op 'comm : nil -> 'Attr [ctor] .
  op 'completeName : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaCompleteName) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'config : nil -> 'Attr [ctor] .
  op 'crl_=>_if_`[_`]. : 'Term 'Term 'Condition 'AttrSet -> 'Rule [ctor format(
    'd 'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
  op 'ctor : nil -> 'Attr [ctor] .
  op 'downTerm : 'Term 'Universal -> 'Universal [poly(2 0) special(
    id-hook('MetaLevelOpSymbol, 'metaDownTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'empty : nil -> 'KindSet [ctor] .
  op 'eq_=_`[_`]. : 'Term 'Term 'AttrSet -> 'Equation [ctor format('d 'd 'd 'd
    's 'd 'd 's 'd)] .
  op 'extending_. : 'ModuleExpression -> 'Import [ctor] .
  op 'failure : nil -> 'Result4Tuple? [ctor] .
  op 'failure : nil -> 'ResultTriple? [ctor] .
  op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
  op 'find : 'String 'String 'Nat -> 'FindResult [special(
    id-hook('StringOpSymbol, 'find) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('notFoundTerm, 'notFound.FindResult))] .
  op 'fmod_is_sorts_.____endfm : 'Qid 'ImportList 'SortSet 'SubsortDeclSet
    'OpDeclSet 'MembAxSet 'EquationSet -> 'FModule [ctor gather('& '& '& '& '&
    '& '&) format('d 'd 'd 'n++i 'ni 'd 'd 'ni 'ni 'ni 'ni 'n--i 'd)] .
  op 'format : 'QidList -> 'Attr [ctor] .
  op 'frozen : 'NatList -> 'Attr [ctor] .
  op 'gather : 'QidList -> 'Attr [ctor] .
  op 'gcd : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'gcd : 'NzNat 'Nat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'getContext : 'MatchPair -> 'Context [none] .
  op 'getContext : 'Result4Tuple -> 'Context [none] .
  op 'getEqs : 'Module -> 'EquationSet [none] .
  op 'getImports : 'Module -> 'ImportList [none] .
  op 'getKind : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGetKind) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'getKinds : '`[Module`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGetKinds) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'getMbs : 'Module -> 'MembAxSet [none] .
  op 'getName : 'Constant -> 'Qid [none] .
  op 'getName : 'Module -> 'Qid [none] .
  op 'getName : 'Variable -> 'Qid [none] .
  op 'getOps : 'Module -> 'OpDeclSet [none] .
  op 'getRls : 'Module -> 'RuleSet [none] .
  op 'getSorts : 'Module -> 'SortSet [none] .
  op 'getSubsorts : 'Module -> 'SubsortDeclSet [none] .
  op 'getSubstitution : 'MatchPair -> 'Substitution [none] .
  op 'getSubstitution : 'Result4Tuple -> 'Substitution [none] .
  op 'getSubstitution : 'ResultTriple -> 'Substitution [none] .
  op 'getTerm : 'Result4Tuple -> 'Term [none] .
  op 'getTerm : 'ResultPair -> 'Term [none] .
  op 'getTerm : 'ResultTriple -> 'Term [none] .
  op 'getType : 'Constant -> 'Type [none] .
  op 'getType : 'Result4Tuple -> 'Type [none] .
  op 'getType : 'ResultPair -> 'Type [none] .
  op 'getType : 'ResultTriple -> 'Type [none] .
  op 'getType : 'Variable -> 'Type [none] .
  op 'glbSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGlbSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'id : 'Term -> 'Attr [ctor] .
  op 'id-hook : 'Qid 'QidList -> 'Hook [ctor format('nssss 'd)] .
  op 'idem : nil -> 'Attr [ctor] .
  op 'if_then_else_fi : 'Bool 'Universal 'Universal -> 'Universal [poly(2 3 0)
    special(
    id-hook('BranchSymbol, nil) 
    term-hook('1, 'true.Bool) 
    term-hook('2, 'false.Bool))] .
  op 'including_. : 'ModuleExpression -> 'Import [ctor] .
  op 'iter : nil -> 'Attr [ctor] .
  op 'label : 'Qid -> 'Attr [ctor] .
  op 'label_to_ : 'Qid 'Qid -> 'Renaming [ctor] .
  op 'lcm : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'lcm : 'NzNat 'NzNat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'leastSort : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaLeastSort) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'left-id : 'Term -> 'Attr [ctor] .
  op 'length : 'String -> 'Nat [special(
    id-hook('StringOpSymbol, 'length) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'lesserSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaLesserSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'maximalSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMaximalSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'mb_:_`[_`]. : 'Term 'Sort 'AttrSet -> 'MembAx [ctor format('d 'd 'd 'd 's
    'd 'd 's 'd)] .
  op 'memo : nil -> 'Attr [ctor] .
  op 'metaApply : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Substitution?`] '`[FindResult`,NatList`,Bound`] -> '`[ResultTriple?`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaApply) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaFrewrite : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaFrewrite) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaMatch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`] '`[FindResult`,NatList`,Bound`] -> '`[Substitution?`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMatch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaParse : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaParse) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaPrettyPrint : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaPrettyPrint) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaReduce : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaReduce) 
    op-hook('qidSymbol, '<Qids>, nil, 'Qid) 
    op-hook('metaTermSymbol, '_`[_`], 'Qid 'GroundTermList, 'GroundTerm) 
    op-hook('metaArgSymbol, '_`,_, 'GroundTermList 'GroundTermList,
    'GroundTermList) 
    op-hook('assignmentSymbol, '_<-_, 'Variable 'Term, 'Assignment) 
    op-hook('emptySubstitutionSymbol, 'none, nil, 'Substitution) 
    op-hook('substitutionSymbol, '_;_, 'Substitution 'Substitution,
    'Substitution) 
    op-hook('holeSymbol, '`[`], nil, 'Context) 
    op-hook('protectingSymbol, 'protecting_., 'ModuleExpression, 'Import) 
    op-hook('extendingSymbol, 'extending_., 'ModuleExpression, 'Import) 
    op-hook('includingSymbol, 'including_., 'ModuleExpression, 'Import) 
    op-hook('nilImportListSymbol, 'nil, nil, 'ImportList) 
    op-hook('importListSymbol, '__, 'ImportList 'ImportList, 'ImportList) 
    op-hook('emptySortSetSymbol, 'none, nil, 'SortSet) 
    op-hook('sortSetSymbol, '_;_, 'SortSet 'SortSet, 'SortSet) 
    op-hook('subsortSymbol, 'subsort_<_., 'Sort 'Sort, 'SubsortDecl) 
    op-hook('emptySubsortDeclSetSymbol, 'none, nil, 'SubsortDeclSet) 
    op-hook('subsortDeclSetSymbol, '__, 'SubsortDeclSet 'SubsortDeclSet,
    'SubsortDeclSet) 
    op-hook('nilQidListSymbol, 'nil, nil, 'QidList) 
    op-hook('qidListSymbol, '__, 'QidList 'QidList, 'QidList) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    op-hook('natListSymbol, '__, 'NatList 'NatList, 'NatList) 
    op-hook('unboundedSymbol, 'unbounded, nil, 'Bound) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('sortRenamingSymbol, 'sort_to_, 'Qid 'Qid, 'Renaming) 
    op-hook('opRenamingSymbol, 'op_to_`[_`], 'Qid 'Qid 'AttrSet, 'Renaming) 
    op-hook('opRenamingSymbol2, 'op_:_->_to_`[_`], 'Qid 'TypeList 'Type 'Qid
    'AttrSet, 'Renaming) 
    op-hook('labelRenamingSymbol, 'label_to_, 'Qid 'Qid, 'Renaming) 
    op-hook('renamingSetSymbol, '_`,_, 'RenamingSet 'RenamingSet, 'RenamingSet)
    
    op-hook('sumSymbol, '_+_, 'ModuleExpression 'ModuleExpression,
    'ModuleExpression) 
    op-hook('renamingSymbol, '_*`(_`), 'ModuleExpression 'RenamingSet,
    'ModuleExpression) 
    op-hook('termHookSymbol, 'term-hook, 'Qid 'Term, 'Hook) 
    op-hook('hookListSymbol, '__, 'HookList 'HookList, 'HookList) 
    op-hook('idHookSymbol, 'id-hook, 'Qid 'QidList, 'Hook) 
    op-hook('opHookSymbol, 'op-hook, 'Qid 'Qid 'QidList 'Qid, 'Hook) 
    op-hook('assocSymbol, 'assoc, nil, 'Attr) 
    op-hook('commSymbol, 'comm, nil, 'Attr) 
    op-hook('idemSymbol, 'idem, nil, 'Attr) 
    op-hook('iterSymbol, 'iter, nil, 'Attr) 
    op-hook('idSymbol, 'id, 'Term, 'Attr) 
    op-hook('leftIdSymbol, 'left-id, 'Term, 'Attr) 
    op-hook('rightIdSymbol, 'right-id, 'Term, 'Attr) 
    op-hook('stratSymbol, 'strat, 'NatList, 'Attr) 
    op-hook('memoSymbol, 'memo, nil, 'Attr) 
    op-hook('precSymbol, 'prec, 'Nat, 'Attr) 
    op-hook('gatherSymbol, 'gather, 'QidList, 'Attr) 
    op-hook('formatSymbol, 'format, 'QidList, 'Attr) 
    op-hook('ctorSymbol, 'ctor, nil, 'Attr) 
    op-hook('frozenSymbol, 'frozen, 'NatList, 'Attr) 
    op-hook('polySymbol, 'poly, 'NatList, 'Attr) 
    op-hook('configSymbol, 'config, nil, 'Attr) 
    op-hook('objectSymbol, 'object, nil, 'Attr) 
    op-hook('msgSymbol, 'msg, nil, 'Attr) 
    op-hook('specialSymbol, 'special, 'HookList, 'Attr) 
    op-hook('labelSymbol, 'label, 'Qid, 'Attr) 
    op-hook('metadataSymbol, 'metadata, 'String, 'Attr) 
    op-hook('owiseSymbol, 'owise, nil, 'Attr) 
    op-hook('nonexecSymbol, 'nonexec, nil, 'Attr) 
    op-hook('emptyAttrSetSymbol, 'none, nil, 'AttrSet) 
    op-hook('attrSetSymbol, '__, 'AttrSet 'AttrSet, 'AttrSet) 
    op-hook('opDeclSymbol, 'op_:_->_`[_`]., 'Qid 'TypeList 'Type 'AttrSet,
    'OpDecl) 
    op-hook('opDeclSetSymbol, '__, 'OpDeclSet 'OpDeclSet, 'OpDeclSet) 
    op-hook('emptyOpDeclSetSymbol, 'none, nil, 'OpDeclSet) 
    op-hook('noConditionSymbol, 'nil, nil, 'EqCondition) 
    op-hook('equalityConditionSymbol, '_=_, 'Term 'Term, 'EqCondition) 
    op-hook('sortTestConditionSymbol, '_:_, 'Term 'Sort, 'EqCondition) 
    op-hook('matchConditionSymbol, '_:=_, 'Term 'Term, 'EqCondition) 
    op-hook('rewriteConditionSymbol, '_=>_, 'Term 'Term, 'Condition) 
    op-hook('conjunctionSymbol, '_/\_, 'EqCondition 'EqCondition, 'EqCondition)
    
    op-hook('mbSymbol, 'mb_:_`[_`]., 'Term 'Sort 'AttrSet, 'MembAx) 
    op-hook('cmbSymbol, 'cmb_:_if_`[_`]., 'Term 'Sort 'EqCondition 'AttrSet,
    'MembAx) 
    op-hook('emptyMembAxSetSymbol, 'none, nil, 'MembAxSet) 
    op-hook('membAxSetSymbol, '__, 'MembAxSet 'MembAxSet, 'MembAxSet) 
    op-hook('eqSymbol, 'eq_=_`[_`]., 'Term 'Term 'AttrSet, 'Equation) 
    op-hook('ceqSymbol, 'ceq_=_if_`[_`]., 'Term 'Term 'EqCondition 'AttrSet,
    'Equation) 
    op-hook('emptyEquationSetSymbol, 'none, nil, 'EquationSet) 
    op-hook('equationSetSymbol, '__, 'EquationSet 'EquationSet, 'EquationSet) 
    op-hook('rlSymbol, 'rl_=>_`[_`]., 'Term 'Term 'AttrSet, 'Rule) 
    op-hook('crlSymbol, 'crl_=>_if_`[_`]., 'Term 'Term 'Condition 'AttrSet,
    'Rule) 
    op-hook('emptyRuleSetSymbol, 'none, nil, 'RuleSet) 
    op-hook('ruleSetSymbol, '__, 'RuleSet 'RuleSet, 'RuleSet) 
    op-hook('fmodSymbol, 'fmod_is_sorts_.____endfm, 'Qid 'ImportList 'SortSet
    'SubsortDeclSet 'OpDeclSet 'MembAxSet 'EquationSet, 'FModule) 
    op-hook('modSymbol, 'mod_is_sorts_._____endm, 'Qid 'ImportList 'SortSet
    'SubsortDeclSet 'OpDeclSet 'MembAxSet 'EquationSet 'RuleSet, 'Module) 
    op-hook('emptyKindSetSymbol, 'empty, nil, 'KindSet) 
    op-hook('kindSetSymbol, '_&_, 'KindSet 'KindSet, 'KindSet) 
    op-hook('anyTypeSymbol, 'anyType, nil, 'Type?) 
    op-hook('resultPairSymbol, '`{_`,_`}, 'Term 'Type, 'ResultPair) 
    op-hook('resultTripleSymbol, '`{_`,_`,_`}, 'Term 'Type 'Substitution,
    'ResultTriple) 
    op-hook('result4TupleSymbol, '`{_`,_`,_`,_`}, 'Term 'Type 'Substitution
    'Context, 'Result4Tuple) 
    op-hook('matchPairSymbol, '`{_`,_`}, 'Substitution 'Context, 'MatchPair) 
    op-hook('noParseSymbol, 'noParse, 'Nat, 'ResultPair?) 
    op-hook('ambiguitySymbol, 'ambiguity, 'ResultPair 'ResultPair,
    'ResultPair?) 
    op-hook('failure3Symbol, 'failure, nil, 'ResultTriple?) 
    op-hook('failure4Symbol, 'failure, nil, 'Result4Tuple?) 
    op-hook('noMatchSubstSymbol, 'noMatch, nil, 'Substitution?) 
    op-hook('noMatchPairSymbol, 'noMatch, nil, 'MatchPair?) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op 'metaRewrite : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] -> '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaRewrite) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaSearch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[ResultTriple?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSearch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaXapply : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Substitution?`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[Result4Tuple?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaXapply) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaXmatch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[MatchPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaXmatch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metadata : 'String -> 'Attr [ctor] .
  op 'minimalSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMinimalSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'modExp : '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] -> '`[FindResult`,NatList`,Bound`] [
    special(
    id-hook('NumberOpSymbol, 'modExp) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'mod_is_sorts_._____endm : 'Qid 'ImportList 'SortSet 'SubsortDeclSet
    'OpDeclSet 'MembAxSet 'EquationSet 'RuleSet -> 'Module [ctor gather('& '&
    '& '& '& '& '& '&) format('d 'd 'd 'n++i 'ni 'd 'd 'ni 'ni 'ni 'ni 'ni
    'n--i 'd)] .
  op 'msg : nil -> 'Attr [ctor] .
  op 'nil : nil -> 'EqCondition [none] .
  op 'nil : nil -> 'ImportList [ctor] .
  op 'nil : nil -> 'QidList [ctor] .
  op 'nil : nil -> 'TypeList [ctor] .
  op 'noMatch : nil -> 'MatchPair? [ctor] .
  op 'noMatch : nil -> 'Substitution? [ctor] .
  op 'noParse : 'Nat -> 'ResultPair? [ctor] .
  op 'none : nil -> 'AttrSet [ctor] .
  op 'none : nil -> 'EquationSet [ctor] .
  op 'none : nil -> 'MembAxSet [ctor] .
  op 'none : nil -> 'OpDeclSet [ctor] .
  op 'none : nil -> 'RuleSet [ctor] .
  op 'none : nil -> 'SortSet [ctor] .
  op 'none : nil -> 'SubsortDeclSet [ctor] .
  op 'none : nil -> 'Substitution [ctor] .
  op 'nonexec : nil -> 'Attr [ctor] .
  op 'notFound : nil -> 'FindResult [none] .
  op 'not_ : 'Bool -> 'Bool [prec(53)] .
  op 'object : nil -> 'Attr [ctor] .
  op 'op-hook : 'Qid 'Qid 'QidList 'Qid -> 'Hook [ctor format('nssss 'd)] .
  op 'op_:_->_`[_`]. : 'Qid 'TypeList 'Type 'AttrSet -> 'OpDecl [ctor format('d
    'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
  op 'op_:_->_to_`[_`] : 'Qid 'TypeList 'Type 'Qid 'AttrSet -> 'Renaming [ctor
    format('d 'd 'd 'd 'd 'd 'd 'd 's 'd 'd 'd)] .
  op 'op_to_`[_`] : 'Qid 'Qid 'AttrSet -> 'Renaming [ctor format('d 'd 'd 'd 's
    'd 'd 'd)] .
  op 'owise : nil -> 'Attr [ctor] .
  op 'poly : 'NatList -> 'Attr [ctor] .
  op 'prec : 'Nat -> 'Attr [ctor] .
  op 'protecting_. : 'ModuleExpression -> 'Import [ctor] .
  op 'qid : '`[String`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('QuotedIdentifierOpSymbol, 'qid) 
    op-hook('quotedIdentifierSymbol, '<Qids>, nil, 'Qid) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char))] .
  op 'rfind : 'String 'String 'Nat -> 'FindResult [special(
    id-hook('StringOpSymbol, 'rfind) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('notFoundTerm, 'notFound.FindResult))] .
  op 'right-id : 'Term -> 'Attr [ctor] .
  op 'rl_=>_`[_`]. : 'Term 'Term 'AttrSet -> 'Rule [ctor format('d 'd 'd 'd 's
    'd 'd 's 'd)] .
  op 's_ : 'Nat -> 'NzNat [iter ctor special(
    id-hook('SuccSymbol, nil) 
    term-hook('zeroTerm, '0.Zero))] .
  op 'sameKind : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSameKind) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'sd : 'Nat 'Nat -> 'Nat [comm special(
    id-hook('NumberOpSymbol, 'sd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'sortLeq : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSortLeq) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'sort_to_ : 'Qid 'Qid -> 'Renaming [ctor] .
  op 'special : 'HookList -> 'Attr [ctor] .
  op 'strat : 'NatList -> 'Attr [ctor] .
  op 'string : 'Qid -> 'String [special(
    id-hook('QuotedIdentifierOpSymbol, 'string) 
    op-hook('quotedIdentifierSymbol, '<Qids>, nil, 'Qid) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char))] .
  op 'subsort_<_. : 'Sort 'Sort -> 'SubsortDecl [ctor] .
  op 'substr : 'String 'Nat 'Nat -> 'String [special(
    id-hook('StringOpSymbol, 'substr) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'term-hook : 'Qid 'Term -> 'Hook [ctor format('nssss 'd)] .
  op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
  op 'unbounded : nil -> 'Bound [none] .
  op 'upEqs :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[EquationSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpEqs) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upImports :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ImportList`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpImports) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upMbs :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[MembAxSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpMbs) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upModule :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[Module`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpModule) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upOpDecls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[OpDeclSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpOpDecls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upRls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[RuleSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpRls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upSorts :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaUpSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upSubsortDecls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[SubsortDeclSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpSubsortDecls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upTerm : 'Universal -> 'Term [poly(1) special(
    id-hook('MetaLevelOpSymbol, 'metaUpTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'wellFormed : 'Module -> 'Bool [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedModule) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'wellFormed : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'wellFormed : '`[Module`] '`[Substitution?`] -> '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedSubstitution) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  none
  eq '_&_['K:Kind,'K:Kind] = 'K:Kind [none] .
  eq '_;_['A:Assignment,'A:Assignment] = 'A:Assignment [none] .
  eq '_;_['S:Sort,'S:Sort] = 'S:Sort [none] .
  eq '__['A:Attr,'A:Attr] = 'A:Attr [none] .
  eq '__['E:Equation,'E:Equation] = 'E:Equation [none] .
  eq '__['M:MembAx,'M:MembAx] = 'M:MembAx [none] .
  eq '__['O:OpDecl,'O:OpDecl] = 'O:OpDecl [none] .
  eq '__['R:Rule,'R:Rule] = 'R:Rule [none] .
  eq '__['S:SubsortDecl,'S:SubsortDecl] = 'S:SubsortDecl [none] .
  eq '_and_['A:Bool,'A:Bool] = 'A:Bool [none] .
  eq '_and_['A:Bool,'_xor_['B:Bool,'C:Bool]] = '_xor_['_and_['A:Bool,'B:Bool],
    '_and_['A:Bool,'C:Bool]] [none] .
  eq '_and_['false.Bool,'A:Bool] = 'false.Bool [none] .
  eq '_and_['true.Bool,'A:Bool] = 'A:Bool [none] .
  eq '_implies_['A:Bool,'B:Bool] = 'not_['_xor_['A:Bool,'_and_['A:Bool,
    'B:Bool]]] [none] .
  eq '_or_['A:Bool,'B:Bool] = '_xor_['_and_['A:Bool,'B:Bool],'_xor_['A:Bool,
    'B:Bool]] [none] .
  eq '_xor_['A:Bool,'A:Bool] = 'false.Bool [none] .
  eq '_xor_['false.Bool,'A:Bool] = 'A:Bool [none] .
  eq '`[_`]['Q:Qid] = 'mod_is_sorts_._____endm['Q:Qid,'protecting_.['Q:Qid],
    'none.SortSet,'none.SubsortDeclSet,'none.OpDeclSet,'none.MembAxSet,
    'none.EquationSet,'none.RuleSet] [none] .
  eq 'getContext['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,'C:Context]] =
    'C:Context [none] .
  eq 'getContext['`{_`,_`}['S:Substitution,'C:Context]] = 'C:Context [none] .
  eq 'getEqs['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'EQS:EquationSet [none] .
  eq 'getEqs['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'EQS:EquationSet [none] .
  eq 'getImports['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'IL:ImportList [none] .
  eq 'getImports['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'IL:ImportList [none] .
  eq 'getMbs['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'MAS:MembAxSet [none] .
  eq 'getMbs['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'MAS:MembAxSet [none] .
  eq 'getName['C:Constant] = 'qid['substr['string['C:Constant],'0.Zero,'rfind[
    'string['C:Constant],'".".Char,'length['string['C:Constant]]]]] [none] .
  eq 'getName['V:Variable] = 'qid['substr['string['V:Variable],'0.Zero,'rfind[
    'string['V:Variable],'":".Char,'length['string['V:Variable]]]]] [none] .
  eq 'getName['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'Q:Qid [none] .
  eq 'getName['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'Q:Qid [none] .
  eq 'getOps['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'OPDS:OpDeclSet [none] .
  eq 'getOps['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'OPDS:OpDeclSet [none] .
  eq 'getRls['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'none.RuleSet [none] .
  eq 'getRls['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'RLS:RuleSet [none] .
  eq 'getSorts['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'SS:SortSet [none] .
  eq 'getSorts['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'SS:SortSet [none] .
  eq 'getSubsorts['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'SSDS:SubsortDeclSet [none] .
  eq 'getSubsorts['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'SSDS:SubsortDeclSet [none] .
  eq 'getSubstitution['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,
    'C:Context]] = 'S:Substitution [none] .
  eq 'getSubstitution['`{_`,_`,_`}['T:Term,'T:Type,'S:Substitution]] =
    'S:Substitution [none] .
  eq 'getSubstitution['`{_`,_`}['S:Substitution,'C:Context]] = 'S:Substitution
    [none] .
  eq 'getTerm['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,'C:Context]] =
    'T:Term [none] .
  eq 'getTerm['`{_`,_`,_`}['T:Term,'T:Type,'S:Substitution]] = 'T:Term [none] .
  eq 'getTerm['`{_`,_`}['T:Term,'T:Type]] = 'T:Term [none] .
  eq 'getType['C:Constant] = 'qid['substr['string['C:Constant],'_+_['s_[
    '0.Zero],'rfind['string['C:Constant],'".".Char,'length['string[
    'C:Constant]]]],'length['string['C:Constant]]]] [none] .
  eq 'getType['V:Variable] = 'qid['substr['string['V:Variable],'_+_['s_[
    '0.Zero],'rfind['string['V:Variable],'":".Char,'length['string[
    'V:Variable]]]],'length['string['V:Variable]]]] [none] .
  eq 'getType['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,'C:Context]] =
    'T:Type [none] .
  eq 'getType['`{_`,_`,_`}['T:Term,'T:Type,'S:Substitution]] = 'T:Type [none] .
  eq 'getType['`{_`,_`}['T:Term,'T:Type]] = 'T:Type [none] .
  eq 'not_['A:Bool] = '_xor_['true.Bool,'A:Bool] [none] .
endfm
==========================================
reduce in META-LEVEL : upModule('META-LEVEL, false) .
rewrites: 1
result FModule: fmod 'META-LEVEL is
  including 'BOOL .
  protecting 'META-MODULE .
  sorts 'Bound ; 'KindSet ; 'MatchPair ; 'MatchPair? ; 'Result4Tuple ;
    'Result4Tuple? ; 'ResultPair ; 'ResultPair? ; 'ResultTriple ;
    'ResultTriple? ; 'Substitution? ; 'Type? .
  subsort 'Kind < 'KindSet .
  subsort 'MatchPair < 'MatchPair? .
  subsort 'Nat < 'Bound .
  subsort 'Result4Tuple < 'Result4Tuple? .
  subsort 'ResultPair < 'ResultPair? .
  subsort 'ResultTriple < 'ResultTriple? .
  subsort 'Substitution < 'Substitution? .
  subsort 'Type < 'Type? .
  op '_&_ : 'KindSet 'KindSet -> 'KindSet [assoc comm ctor id('empty.KindSet)]
    .
  op '`{_`,_`,_`,_`} : 'Term 'Type 'Substitution 'Context -> 'Result4Tuple [
    ctor] .
  op '`{_`,_`,_`} : 'Term 'Type 'Substitution -> 'ResultTriple [ctor] .
  op '`{_`,_`} : 'Substitution 'Context -> 'MatchPair [ctor] .
  op '`{_`,_`} : 'Term 'Type -> 'ResultPair [ctor] .
  op 'ambiguity : 'ResultPair 'ResultPair -> 'ResultPair? [ctor] .
  op 'anyType : nil -> 'Type? [ctor] .
  op 'completeName : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaCompleteName) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'downTerm : 'Term 'Universal -> 'Universal [poly(2 0) special(
    id-hook('MetaLevelOpSymbol, 'metaDownTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'empty : nil -> 'KindSet [ctor] .
  op 'failure : nil -> 'Result4Tuple? [ctor] .
  op 'failure : nil -> 'ResultTriple? [ctor] .
  op 'getContext : 'MatchPair -> 'Context [none] .
  op 'getContext : 'Result4Tuple -> 'Context [none] .
  op 'getKind : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGetKind) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'getKinds : '`[Module`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGetKinds) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'getSubstitution : 'MatchPair -> 'Substitution [none] .
  op 'getSubstitution : 'Result4Tuple -> 'Substitution [none] .
  op 'getSubstitution : 'ResultTriple -> 'Substitution [none] .
  op 'getTerm : 'Result4Tuple -> 'Term [none] .
  op 'getTerm : 'ResultPair -> 'Term [none] .
  op 'getTerm : 'ResultTriple -> 'Term [none] .
  op 'getType : 'Result4Tuple -> 'Type [none] .
  op 'getType : 'ResultPair -> 'Type [none] .
  op 'getType : 'ResultTriple -> 'Type [none] .
  op 'glbSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGlbSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'leastSort : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaLeastSort) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'lesserSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaLesserSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'maximalSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMaximalSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaApply : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Substitution?`] '`[FindResult`,NatList`,Bound`] -> '`[ResultTriple?`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaApply) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaFrewrite : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaFrewrite) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaMatch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`] '`[FindResult`,NatList`,Bound`] -> '`[Substitution?`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMatch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaParse : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaParse) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaPrettyPrint : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaPrettyPrint) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaReduce : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaReduce) 
    op-hook('qidSymbol, '<Qids>, nil, 'Qid) 
    op-hook('metaTermSymbol, '_`[_`], 'Qid 'GroundTermList, 'GroundTerm) 
    op-hook('metaArgSymbol, '_`,_, 'GroundTermList 'GroundTermList,
    'GroundTermList) 
    op-hook('assignmentSymbol, '_<-_, 'Variable 'Term, 'Assignment) 
    op-hook('emptySubstitutionSymbol, 'none, nil, 'Substitution) 
    op-hook('substitutionSymbol, '_;_, 'Substitution 'Substitution,
    'Substitution) 
    op-hook('holeSymbol, '`[`], nil, 'Context) 
    op-hook('protectingSymbol, 'protecting_., 'ModuleExpression, 'Import) 
    op-hook('extendingSymbol, 'extending_., 'ModuleExpression, 'Import) 
    op-hook('includingSymbol, 'including_., 'ModuleExpression, 'Import) 
    op-hook('nilImportListSymbol, 'nil, nil, 'ImportList) 
    op-hook('importListSymbol, '__, 'ImportList 'ImportList, 'ImportList) 
    op-hook('emptySortSetSymbol, 'none, nil, 'SortSet) 
    op-hook('sortSetSymbol, '_;_, 'SortSet 'SortSet, 'SortSet) 
    op-hook('subsortSymbol, 'subsort_<_., 'Sort 'Sort, 'SubsortDecl) 
    op-hook('emptySubsortDeclSetSymbol, 'none, nil, 'SubsortDeclSet) 
    op-hook('subsortDeclSetSymbol, '__, 'SubsortDeclSet 'SubsortDeclSet,
    'SubsortDeclSet) 
    op-hook('nilQidListSymbol, 'nil, nil, 'QidList) 
    op-hook('qidListSymbol, '__, 'QidList 'QidList, 'QidList) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    op-hook('natListSymbol, '__, 'NatList 'NatList, 'NatList) 
    op-hook('unboundedSymbol, 'unbounded, nil, 'Bound) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('sortRenamingSymbol, 'sort_to_, 'Qid 'Qid, 'Renaming) 
    op-hook('opRenamingSymbol, 'op_to_`[_`], 'Qid 'Qid 'AttrSet, 'Renaming) 
    op-hook('opRenamingSymbol2, 'op_:_->_to_`[_`], 'Qid 'TypeList 'Type 'Qid
    'AttrSet, 'Renaming) 
    op-hook('labelRenamingSymbol, 'label_to_, 'Qid 'Qid, 'Renaming) 
    op-hook('renamingSetSymbol, '_`,_, 'RenamingSet 'RenamingSet, 'RenamingSet)
    
    op-hook('sumSymbol, '_+_, 'ModuleExpression 'ModuleExpression,
    'ModuleExpression) 
    op-hook('renamingSymbol, '_*`(_`), 'ModuleExpression 'RenamingSet,
    'ModuleExpression) 
    op-hook('termHookSymbol, 'term-hook, 'Qid 'Term, 'Hook) 
    op-hook('hookListSymbol, '__, 'HookList 'HookList, 'HookList) 
    op-hook('idHookSymbol, 'id-hook, 'Qid 'QidList, 'Hook) 
    op-hook('opHookSymbol, 'op-hook, 'Qid 'Qid 'QidList 'Qid, 'Hook) 
    op-hook('assocSymbol, 'assoc, nil, 'Attr) 
    op-hook('commSymbol, 'comm, nil, 'Attr) 
    op-hook('idemSymbol, 'idem, nil, 'Attr) 
    op-hook('iterSymbol, 'iter, nil, 'Attr) 
    op-hook('idSymbol, 'id, 'Term, 'Attr) 
    op-hook('leftIdSymbol, 'left-id, 'Term, 'Attr) 
    op-hook('rightIdSymbol, 'right-id, 'Term, 'Attr) 
    op-hook('stratSymbol, 'strat, 'NatList, 'Attr) 
    op-hook('memoSymbol, 'memo, nil, 'Attr) 
    op-hook('precSymbol, 'prec, 'Nat, 'Attr) 
    op-hook('gatherSymbol, 'gather, 'QidList, 'Attr) 
    op-hook('formatSymbol, 'format, 'QidList, 'Attr) 
    op-hook('ctorSymbol, 'ctor, nil, 'Attr) 
    op-hook('frozenSymbol, 'frozen, 'NatList, 'Attr) 
    op-hook('polySymbol, 'poly, 'NatList, 'Attr) 
    op-hook('configSymbol, 'config, nil, 'Attr) 
    op-hook('objectSymbol, 'object, nil, 'Attr) 
    op-hook('msgSymbol, 'msg, nil, 'Attr) 
    op-hook('specialSymbol, 'special, 'HookList, 'Attr) 
    op-hook('labelSymbol, 'label, 'Qid, 'Attr) 
    op-hook('metadataSymbol, 'metadata, 'String, 'Attr) 
    op-hook('owiseSymbol, 'owise, nil, 'Attr) 
    op-hook('nonexecSymbol, 'nonexec, nil, 'Attr) 
    op-hook('emptyAttrSetSymbol, 'none, nil, 'AttrSet) 
    op-hook('attrSetSymbol, '__, 'AttrSet 'AttrSet, 'AttrSet) 
    op-hook('opDeclSymbol, 'op_:_->_`[_`]., 'Qid 'TypeList 'Type 'AttrSet,
    'OpDecl) 
    op-hook('opDeclSetSymbol, '__, 'OpDeclSet 'OpDeclSet, 'OpDeclSet) 
    op-hook('emptyOpDeclSetSymbol, 'none, nil, 'OpDeclSet) 
    op-hook('noConditionSymbol, 'nil, nil, 'EqCondition) 
    op-hook('equalityConditionSymbol, '_=_, 'Term 'Term, 'EqCondition) 
    op-hook('sortTestConditionSymbol, '_:_, 'Term 'Sort, 'EqCondition) 
    op-hook('matchConditionSymbol, '_:=_, 'Term 'Term, 'EqCondition) 
    op-hook('rewriteConditionSymbol, '_=>_, 'Term 'Term, 'Condition) 
    op-hook('conjunctionSymbol, '_/\_, 'EqCondition 'EqCondition, 'EqCondition)
    
    op-hook('mbSymbol, 'mb_:_`[_`]., 'Term 'Sort 'AttrSet, 'MembAx) 
    op-hook('cmbSymbol, 'cmb_:_if_`[_`]., 'Term 'Sort 'EqCondition 'AttrSet,
    'MembAx) 
    op-hook('emptyMembAxSetSymbol, 'none, nil, 'MembAxSet) 
    op-hook('membAxSetSymbol, '__, 'MembAxSet 'MembAxSet, 'MembAxSet) 
    op-hook('eqSymbol, 'eq_=_`[_`]., 'Term 'Term 'AttrSet, 'Equation) 
    op-hook('ceqSymbol, 'ceq_=_if_`[_`]., 'Term 'Term 'EqCondition 'AttrSet,
    'Equation) 
    op-hook('emptyEquationSetSymbol, 'none, nil, 'EquationSet) 
    op-hook('equationSetSymbol, '__, 'EquationSet 'EquationSet, 'EquationSet) 
    op-hook('rlSymbol, 'rl_=>_`[_`]., 'Term 'Term 'AttrSet, 'Rule) 
    op-hook('crlSymbol, 'crl_=>_if_`[_`]., 'Term 'Term 'Condition 'AttrSet,
    'Rule) 
    op-hook('emptyRuleSetSymbol, 'none, nil, 'RuleSet) 
    op-hook('ruleSetSymbol, '__, 'RuleSet 'RuleSet, 'RuleSet) 
    op-hook('fmodSymbol, 'fmod_is_sorts_.____endfm, 'Qid 'ImportList 'SortSet
    'SubsortDeclSet 'OpDeclSet 'MembAxSet 'EquationSet, 'FModule) 
    op-hook('modSymbol, 'mod_is_sorts_._____endm, 'Qid 'ImportList 'SortSet
    'SubsortDeclSet 'OpDeclSet 'MembAxSet 'EquationSet 'RuleSet, 'Module) 
    op-hook('emptyKindSetSymbol, 'empty, nil, 'KindSet) 
    op-hook('kindSetSymbol, '_&_, 'KindSet 'KindSet, 'KindSet) 
    op-hook('anyTypeSymbol, 'anyType, nil, 'Type?) 
    op-hook('resultPairSymbol, '`{_`,_`}, 'Term 'Type, 'ResultPair) 
    op-hook('resultTripleSymbol, '`{_`,_`,_`}, 'Term 'Type 'Substitution,
    'ResultTriple) 
    op-hook('result4TupleSymbol, '`{_`,_`,_`,_`}, 'Term 'Type 'Substitution
    'Context, 'Result4Tuple) 
    op-hook('matchPairSymbol, '`{_`,_`}, 'Substitution 'Context, 'MatchPair) 
    op-hook('noParseSymbol, 'noParse, 'Nat, 'ResultPair?) 
    op-hook('ambiguitySymbol, 'ambiguity, 'ResultPair 'ResultPair,
    'ResultPair?) 
    op-hook('failure3Symbol, 'failure, nil, 'ResultTriple?) 
    op-hook('failure4Symbol, 'failure, nil, 'Result4Tuple?) 
    op-hook('noMatchSubstSymbol, 'noMatch, nil, 'Substitution?) 
    op-hook('noMatchPairSymbol, 'noMatch, nil, 'MatchPair?) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op 'metaRewrite : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] -> '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaRewrite) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaSearch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[ResultTriple?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSearch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaXapply : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Substitution?`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[Result4Tuple?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaXapply) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaXmatch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[MatchPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaXmatch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'minimalSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMinimalSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'noMatch : nil -> 'MatchPair? [ctor] .
  op 'noMatch : nil -> 'Substitution? [ctor] .
  op 'noParse : 'Nat -> 'ResultPair? [ctor] .
  op 'sameKind : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSameKind) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'sortLeq : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSortLeq) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'unbounded : nil -> 'Bound [none] .
  op 'upEqs :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[EquationSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpEqs) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upImports :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ImportList`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpImports) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upMbs :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[MembAxSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpMbs) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upModule :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[Module`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpModule) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upOpDecls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[OpDeclSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpOpDecls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upRls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[RuleSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpRls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upSorts :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaUpSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upSubsortDecls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[SubsortDeclSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpSubsortDecls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upTerm : 'Universal -> 'Term [poly(1) special(
    id-hook('MetaLevelOpSymbol, 'metaUpTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'wellFormed : 'Module -> 'Bool [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedModule) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'wellFormed : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'wellFormed : '`[Module`] '`[Substitution?`] -> '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedSubstitution) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  none
  eq '_&_['K:Kind,'K:Kind] = 'K:Kind [none] .
  eq 'getContext['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,'C:Context]] =
    'C:Context [none] .
  eq 'getContext['`{_`,_`}['S:Substitution,'C:Context]] = 'C:Context [none] .
  eq 'getSubstitution['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,
    'C:Context]] = 'S:Substitution [none] .
  eq 'getSubstitution['`{_`,_`,_`}['T:Term,'T:Type,'S:Substitution]] =
    'S:Substitution [none] .
  eq 'getSubstitution['`{_`,_`}['S:Substitution,'C:Context]] = 'S:Substitution
    [none] .
  eq 'getTerm['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,'C:Context]] =
    'T:Term [none] .
  eq 'getTerm['`{_`,_`,_`}['T:Term,'T:Type,'S:Substitution]] = 'T:Term [none] .
  eq 'getTerm['`{_`,_`}['T:Term,'T:Type]] = 'T:Term [none] .
  eq 'getType['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,'C:Context]] =
    'T:Type [none] .
  eq 'getType['`{_`,_`,_`}['T:Term,'T:Type,'S:Substitution]] = 'T:Type [none] .
  eq 'getType['`{_`,_`}['T:Term,'T:Type]] = 'T:Type [none] .
endfm
==========================================
reduce in META-LEVEL : upModule('BOOL, true) .
rewrites: 1
result FModule: fmod 'BOOL is
  nil
  sorts 'Bool .
  none
  op '_=/=_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'false.Bool) 
    term-hook('notEqualTerm, 'true.Bool))] .
  op '_==_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'true.Bool) 
    term-hook('notEqualTerm, 'false.Bool))] .
  op '_and_ : 'Bool 'Bool -> 'Bool [assoc comm prec(55)] .
  op '_implies_ : 'Bool 'Bool -> 'Bool [prec(61) gather('e 'E)] .
  op '_or_ : 'Bool 'Bool -> 'Bool [assoc comm prec(59)] .
  op '_xor_ : 'Bool 'Bool -> 'Bool [assoc comm prec(57)] .
  op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
  op 'if_then_else_fi : 'Bool 'Universal 'Universal -> 'Universal [poly(2 3 0)
    special(
    id-hook('BranchSymbol, nil) 
    term-hook('1, 'true.Bool) 
    term-hook('2, 'false.Bool))] .
  op 'not_ : 'Bool -> 'Bool [prec(53)] .
  op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
  none
  eq '_and_['A:Bool,'A:Bool] = 'A:Bool [none] .
  eq '_and_['A:Bool,'_xor_['B:Bool,'C:Bool]] = '_xor_['_and_['A:Bool,'B:Bool],
    '_and_['A:Bool,'C:Bool]] [none] .
  eq '_and_['false.Bool,'A:Bool] = 'false.Bool [none] .
  eq '_and_['true.Bool,'A:Bool] = 'A:Bool [none] .
  eq '_implies_['A:Bool,'B:Bool] = 'not_['_xor_['A:Bool,'_and_['A:Bool,
    'B:Bool]]] [none] .
  eq '_or_['A:Bool,'B:Bool] = '_xor_['_and_['A:Bool,'B:Bool],'_xor_['A:Bool,
    'B:Bool]] [none] .
  eq '_xor_['A:Bool,'A:Bool] = 'false.Bool [none] .
  eq '_xor_['false.Bool,'A:Bool] = 'A:Bool [none] .
  eq 'not_['A:Bool] = '_xor_['true.Bool,'A:Bool] [none] .
endfm
==========================================
reduce in META-LEVEL : metaReduce(upModule('BOOL, true), '_==_['true.Bool,
    'false.Bool]) .
rewrites: 3
result ResultPair: {'false.Bool,'Bool}
==========================================
reduce in META-LEVEL : upModule('BOOL, false) .
rewrites: 1
result FModule: fmod 'BOOL is
  protecting 'TRUTH .
  sorts none .
  none
  op '_and_ : 'Bool 'Bool -> 'Bool [assoc comm prec(55)] .
  op '_implies_ : 'Bool 'Bool -> 'Bool [prec(61) gather('e 'E)] .
  op '_or_ : 'Bool 'Bool -> 'Bool [assoc comm prec(59)] .
  op '_xor_ : 'Bool 'Bool -> 'Bool [assoc comm prec(57)] .
  op 'not_ : 'Bool -> 'Bool [prec(53)] .
  none
  eq '_and_['A:Bool,'A:Bool] = 'A:Bool [none] .
  eq '_and_['A:Bool,'_xor_['B:Bool,'C:Bool]] = '_xor_['_and_['A:Bool,'B:Bool],
    '_and_['A:Bool,'C:Bool]] [none] .
  eq '_and_['false.Bool,'A:Bool] = 'false.Bool [none] .
  eq '_and_['true.Bool,'A:Bool] = 'A:Bool [none] .
  eq '_implies_['A:Bool,'B:Bool] = 'not_['_xor_['A:Bool,'_and_['A:Bool,
    'B:Bool]]] [none] .
  eq '_or_['A:Bool,'B:Bool] = '_xor_['_and_['A:Bool,'B:Bool],'_xor_['A:Bool,
    'B:Bool]] [none] .
  eq '_xor_['A:Bool,'A:Bool] = 'false.Bool [none] .
  eq '_xor_['false.Bool,'A:Bool] = 'A:Bool [none] .
  eq 'not_['A:Bool] = '_xor_['true.Bool,'A:Bool] [none] .
endfm
==========================================
reduce in META-LEVEL : metaReduce(upModule('BOOL, false), '_==_['true.Bool,
    'false.Bool]) .
rewrites: 3
result ResultPair: {'false.Bool,'Bool}
==========================================
reduce in META-LEVEL : upModule('TRUTH, true) .
rewrites: 1
result FModule: fmod 'TRUTH is
  nil
  sorts 'Bool .
  none
  op '_=/=_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'false.Bool) 
    term-hook('notEqualTerm, 'true.Bool))] .
  op '_==_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'true.Bool) 
    term-hook('notEqualTerm, 'false.Bool))] .
  op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
  op 'if_then_else_fi : 'Bool 'Universal 'Universal -> 'Universal [poly(2 3 0)
    special(
    id-hook('BranchSymbol, nil) 
    term-hook('1, 'true.Bool) 
    term-hook('2, 'false.Bool))] .
  op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
  none
  none
endfm
==========================================
reduce in META-LEVEL : upModule('NAT, true) .
rewrites: 1
result FModule: fmod 'NAT is
  nil
  sorts 'Bool ; 'Nat ; 'NzNat ; 'Zero .
  subsort 'NzNat < 'Nat .
  subsort 'Zero < 'Nat .
  op '0 : nil -> 'Zero [ctor] .
  op '_&_ : 'Nat 'Nat -> 'Nat [assoc comm prec(53) special(
    id-hook('NumberOpSymbol, '&) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*_ : 'Nat 'Nat -> 'Nat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*_ : 'NzNat 'NzNat -> 'NzNat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'Nat 'Nat -> 'Nat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_<<_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '<<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_<=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_=/=_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'false.Bool) 
    term-hook('notEqualTerm, 'true.Bool))] .
  op '_==_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'true.Bool) 
    term-hook('notEqualTerm, 'false.Bool))] .
  op '_>=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>>_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '>>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_>_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_^_ : 'Nat 'Nat -> 'Nat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_^_ : 'NzNat 'Nat -> 'NzNat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_and_ : 'Bool 'Bool -> 'Bool [assoc comm prec(55)] .
  op '_divides_ : 'NzNat 'Nat -> 'Bool [prec(51) special(
    id-hook('NumberOpSymbol, 'divides) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_implies_ : 'Bool 'Bool -> 'Bool [prec(61) gather('e 'E)] .
  op '_or_ : 'Bool 'Bool -> 'Bool [assoc comm prec(59)] .
  op '_quo_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'quo) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_rem_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'rem) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_xor_ : 'Bool 'Bool -> 'Bool [assoc comm prec(57)] .
  op '_xor_ : 'Nat 'Nat -> 'Nat [assoc comm prec(55) special(
    id-hook('NumberOpSymbol, 'xor) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_|_ : 'Nat 'Nat -> 'Nat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_|_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
  op 'gcd : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'gcd : 'NzNat 'Nat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'if_then_else_fi : 'Bool 'Universal 'Universal -> 'Universal [poly(2 3 0)
    special(
    id-hook('BranchSymbol, nil) 
    term-hook('1, 'true.Bool) 
    term-hook('2, 'false.Bool))] .
  op 'lcm : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'lcm : 'NzNat 'NzNat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'modExp : '`[Nat`] '`[Nat`] '`[Nat`] -> '`[Nat`] [special(
    id-hook('NumberOpSymbol, 'modExp) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'not_ : 'Bool -> 'Bool [prec(53)] .
  op 's_ : 'Nat -> 'NzNat [iter ctor special(
    id-hook('SuccSymbol, nil) 
    term-hook('zeroTerm, '0.Zero))] .
  op 'sd : 'Nat 'Nat -> 'Nat [comm special(
    id-hook('NumberOpSymbol, 'sd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
  none
  eq '_and_['A:Bool,'A:Bool] = 'A:Bool [none] .
  eq '_and_['A:Bool,'_xor_['B:Bool,'C:Bool]] = '_xor_['_and_['A:Bool,'B:Bool],
    '_and_['A:Bool,'C:Bool]] [none] .
  eq '_and_['false.Bool,'A:Bool] = 'false.Bool [none] .
  eq '_and_['true.Bool,'A:Bool] = 'A:Bool [none] .
  eq '_implies_['A:Bool,'B:Bool] = 'not_['_xor_['A:Bool,'_and_['A:Bool,
    'B:Bool]]] [none] .
  eq '_or_['A:Bool,'B:Bool] = '_xor_['_and_['A:Bool,'B:Bool],'_xor_['A:Bool,
    'B:Bool]] [none] .
  eq '_xor_['A:Bool,'A:Bool] = 'false.Bool [none] .
  eq '_xor_['false.Bool,'A:Bool] = 'A:Bool [none] .
  eq 'not_['A:Bool] = '_xor_['true.Bool,'A:Bool] [none] .
endfm
==========================================
reduce in META-LEVEL : metaReduce(upModule('NAT, true), '_+_[upTerm(100),
    upTerm(66)]) .
rewrites: 5
result ResultPair: {'s_^166['0.Zero],'NzNat}
==========================================
reduce in META-LEVEL : upModule('NAT, false) .
rewrites: 1
result FModule: fmod 'NAT is
  including 'BOOL .
  sorts 'Nat ; 'NzNat ; 'Zero .
  subsort 'NzNat < 'Nat .
  subsort 'Zero < 'Nat .
  op '0 : nil -> 'Zero [ctor] .
  op '_&_ : 'Nat 'Nat -> 'Nat [assoc comm prec(53) special(
    id-hook('NumberOpSymbol, '&) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*_ : 'Nat 'Nat -> 'Nat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*_ : 'NzNat 'NzNat -> 'NzNat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'Nat 'Nat -> 'Nat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_<<_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '<<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_<=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>>_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '>>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_>_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_^_ : 'Nat 'Nat -> 'Nat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_^_ : 'NzNat 'Nat -> 'NzNat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_divides_ : 'NzNat 'Nat -> 'Bool [prec(51) special(
    id-hook('NumberOpSymbol, 'divides) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_quo_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'quo) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_rem_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'rem) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_xor_ : 'Nat 'Nat -> 'Nat [assoc comm prec(55) special(
    id-hook('NumberOpSymbol, 'xor) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_|_ : 'Nat 'Nat -> 'Nat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_|_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'gcd : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'gcd : 'NzNat 'Nat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'lcm : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'lcm : 'NzNat 'NzNat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'modExp : '`[Nat`] '`[Nat`] '`[Nat`] -> '`[Nat`] [special(
    id-hook('NumberOpSymbol, 'modExp) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 's_ : 'Nat -> 'NzNat [iter ctor special(
    id-hook('SuccSymbol, nil) 
    term-hook('zeroTerm, '0.Zero))] .
  op 'sd : 'Nat 'Nat -> 'Nat [comm special(
    id-hook('NumberOpSymbol, 'sd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  none
  none
endfm
==========================================
reduce in META-LEVEL : metaReduce(upModule('NAT, false), '_+_[upTerm(100),
    upTerm(66)]) .
rewrites: 5
result ResultPair: {'s_^166['0.Zero],'NzNat}
==========================================
reduce in META-LEVEL : metaReduce(upModule('NAT, true), 'modExp[upTerm(100),
    upTerm(66),upTerm(17)]) .
rewrites: 6
result ResultPair: {'s_^4['0.Zero],'NzNat}
==========================================
reduce in META-LEVEL : upModule('META-LEVEL, true) .
rewrites: 1
result FModule: fmod 'META-LEVEL is
  nil
  sorts 'Assignment ; 'Attr ; 'AttrSet ; 'Bool ; 'Bound ; 'CTermList ; 'Char ;
    'Condition ; 'Constant ; 'Context ; 'EqCondition ; 'Equation ; 'EquationSet
    ; 'FModule ; 'FindResult ; 'GTermList ; 'GroundTerm ; 'GroundTermList ;
    'Hook ; 'HookList ; 'Import ; 'ImportList ; 'Kind ; 'KindSet ; 'MatchPair ;
    'MatchPair? ; 'MembAx ; 'MembAxSet ; 'Module ; 'ModuleExpression ; 'Nat ;
    'NatList ; 'NzNat ; 'OpDecl ; 'OpDeclSet ; 'Qid ; 'QidList ; 'Renaming ;
    'RenamingSet ; 'Result4Tuple ; 'Result4Tuple? ; 'ResultPair ; 'ResultPair?
    ; 'ResultTriple ; 'ResultTriple? ; 'Rule ; 'RuleSet ; 'Sort ; 'SortSet ;
    'String ; 'SubsortDecl ; 'SubsortDeclSet ; 'Substitution ; 'Substitution? ;
    'Term ; 'TermList ; 'Type ; 'Type? ; 'TypeList ; 'Variable ; 'Zero .
  subsort 'Assignment < 'Substitution .
  subsort 'Attr < 'AttrSet .
  subsort 'CTermList < 'GTermList .
  subsort 'Char < 'String .
  subsort 'Constant < 'GroundTerm .
  subsort 'Constant < 'Qid .
  subsort 'Constant < 'Term .
  subsort 'Context < 'CTermList .
  subsort 'EqCondition < 'Condition .
  subsort 'Equation < 'EquationSet .
  subsort 'FModule < 'Module .
  subsort 'GroundTerm < 'GroundTermList .
  subsort 'GroundTerm < 'Term .
  subsort 'GroundTermList < 'TermList .
  subsort 'Hook < 'HookList .
  subsort 'Import < 'ImportList .
  subsort 'Kind < 'KindSet .
  subsort 'Kind < 'Type .
  subsort 'MatchPair < 'MatchPair? .
  subsort 'MembAx < 'MembAxSet .
  subsort 'Nat < 'Bound .
  subsort 'Nat < 'FindResult .
  subsort 'Nat < 'NatList .
  subsort 'NzNat < 'Nat .
  subsort 'OpDecl < 'OpDeclSet .
  subsort 'Qid < 'ModuleExpression .
  subsort 'Qid < 'QidList .
  subsort 'Renaming < 'RenamingSet .
  subsort 'Result4Tuple < 'Result4Tuple? .
  subsort 'ResultPair < 'ResultPair? .
  subsort 'ResultTriple < 'ResultTriple? .
  subsort 'Rule < 'RuleSet .
  subsort 'Sort < 'SortSet .
  subsort 'Sort < 'Type .
  subsort 'SubsortDecl < 'SubsortDeclSet .
  subsort 'Substitution < 'Substitution? .
  subsort 'Term < 'TermList .
  subsort 'TermList < 'GTermList .
  subsort 'Type < 'Qid .
  subsort 'Type < 'Type? .
  subsort 'Type < 'TypeList .
  subsort 'TypeList < 'QidList .
  subsort 'Variable < 'Qid .
  subsort 'Variable < 'Term .
  subsort 'Zero < 'Nat .
  op '0 : nil -> 'Zero [ctor] .
  op '<Qids> : nil -> 'Constant [special(
    id-hook('QuotedIdentifierSymbol, 'constantQid))] .
  op '<Qids> : nil -> 'Kind [special(
    id-hook('QuotedIdentifierSymbol, 'kindQid))] .
  op '<Qids> : nil -> 'Qid [special(
    id-hook('QuotedIdentifierSymbol, nil))] .
  op '<Qids> : nil -> 'Sort [special(
    id-hook('QuotedIdentifierSymbol, 'sortQid))] .
  op '<Qids> : nil -> 'Variable [special(
    id-hook('QuotedIdentifierSymbol, 'variableQid))] .
  op '<Strings> : nil -> 'Char [special(
    id-hook('StringSymbol, nil))] .
  op '<Strings> : nil -> 'String [special(
    id-hook('StringSymbol, nil))] .
  op '_&_ : 'KindSet 'KindSet -> 'KindSet [assoc comm ctor id('empty.KindSet)]
    .
  op '_&_ : 'Nat 'Nat -> 'Nat [assoc comm prec(53) special(
    id-hook('NumberOpSymbol, '&) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*_ : 'Nat 'Nat -> 'Nat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*_ : 'NzNat 'NzNat -> 'NzNat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*`(_`) : 'ModuleExpression 'RenamingSet -> 'ModuleExpression [ctor prec(
    39) format('d 'd 's 'n++i 'n--i 'd)] .
  op '_+_ : 'ModuleExpression 'ModuleExpression -> 'ModuleExpression [assoc
    comm ctor] .
  op '_+_ : 'Nat 'Nat -> 'Nat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'String 'String -> 'String [prec(33) gather('E 'e) special(
    id-hook('StringOpSymbol, '+) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char))] .
  op '_/\_ : 'Condition 'Condition -> 'Condition [assoc ctor id(
    'nil.EqCondition) prec(73)] .
  op '_/\_ : 'EqCondition 'EqCondition -> 'EqCondition [assoc ctor id(
    'nil.EqCondition) prec(73)] .
  op '_:=_ : 'Term 'Term -> 'EqCondition [ctor prec(71)] .
  op '_:_ : 'Term 'Sort -> 'EqCondition [ctor prec(71)] .
  op '_;_ : 'SortSet 'SortSet -> 'SortSet [assoc comm ctor id('none.SortSet)] .
  op '_;_ : 'Substitution 'Substitution -> 'Substitution [assoc comm ctor id(
    'none.Substitution) prec(65)] .
  op '_<-_ : 'Variable 'Term -> 'Assignment [ctor prec(63) format('nt 'd 'd
    'd)] .
  op '_<<_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '<<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_<=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<=_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '<=) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '<) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_=/=_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'false.Bool) 
    term-hook('notEqualTerm, 'true.Bool))] .
  op '_==_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'true.Bool) 
    term-hook('notEqualTerm, 'false.Bool))] .
  op '_=>_ : 'Term 'Term -> 'Condition [ctor prec(71)] .
  op '_=_ : 'Term 'Term -> 'EqCondition [ctor prec(71)] .
  op '_>=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>=_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '>=) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>>_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '>>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_>_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '>) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_^_ : 'Nat 'Nat -> 'Nat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_^_ : 'NzNat 'Nat -> 'NzNat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '__ : 'AttrSet 'AttrSet -> 'AttrSet [assoc comm ctor id('none.AttrSet)] .
  op '__ : 'EquationSet 'EquationSet -> 'EquationSet [assoc comm ctor id(
    'none.EquationSet) format('d 'ni 'd)] .
  op '__ : 'HookList 'HookList -> 'HookList [assoc ctor] .
  op '__ : 'ImportList 'ImportList -> 'ImportList [assoc ctor id(
    'nil.ImportList) format('d 'ni 'd)] .
  op '__ : 'MembAxSet 'MembAxSet -> 'MembAxSet [assoc comm ctor id(
    'none.MembAxSet) format('d 'ni 'd)] .
  op '__ : 'NatList 'NatList -> 'NatList [assoc ctor] .
  op '__ : 'OpDeclSet 'OpDeclSet -> 'OpDeclSet [assoc comm ctor id(
    'none.OpDeclSet) format('d 'ni 'd)] .
  op '__ : 'QidList 'QidList -> 'QidList [assoc ctor id('nil.TypeList)] .
  op '__ : 'RuleSet 'RuleSet -> 'RuleSet [assoc comm ctor id('none.RuleSet)
    format('d 'ni 'd)] .
  op '__ : 'SubsortDeclSet 'SubsortDeclSet -> 'SubsortDeclSet [assoc comm ctor
    id('none.SubsortDeclSet) format('d 'ni 'd)] .
  op '__ : 'TypeList 'TypeList -> 'TypeList [assoc id('nil.TypeList)] .
  op '_`,_ : 'CTermList 'TermList -> 'CTermList [assoc ctor prec(120) gather('e
    'E)] .
  op '_`,_ : 'GroundTermList 'GroundTermList -> 'GroundTermList [assoc ctor
    prec(120) gather('e 'E)] .
  op '_`,_ : 'RenamingSet 'RenamingSet -> 'RenamingSet [assoc comm ctor prec(
    43) format('d 'd 'ni 'd)] .
  op '_`,_ : 'TermList 'CTermList -> 'CTermList [assoc ctor prec(120) gather('e
    'E)] .
  op '_`,_ : 'TermList 'TermList -> 'TermList [assoc ctor prec(120) gather('e
    'E)] .
  op '_`[_`] : 'Qid 'CTermList -> 'Context [ctor] .
  op '_`[_`] : 'Qid 'GroundTermList -> 'GroundTerm [ctor] .
  op '_`[_`] : 'Qid 'TermList -> 'Term [ctor] .
  op '_and_ : 'Bool 'Bool -> 'Bool [assoc comm prec(55)] .
  op '_divides_ : 'NzNat 'Nat -> 'Bool [prec(51) special(
    id-hook('NumberOpSymbol, 'divides) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_implies_ : 'Bool 'Bool -> 'Bool [prec(61) gather('e 'E)] .
  op '_or_ : 'Bool 'Bool -> 'Bool [assoc comm prec(59)] .
  op '_quo_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'quo) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_rem_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'rem) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_xor_ : 'Bool 'Bool -> 'Bool [assoc comm prec(57)] .
  op '_xor_ : 'Nat 'Nat -> 'Nat [assoc comm prec(55) special(
    id-hook('NumberOpSymbol, 'xor) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_|_ : 'Nat 'Nat -> 'Nat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_|_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '`[_`] : 'Qid -> 'Module [none] .
  op '`[`] : nil -> 'Context [ctor] .
  op '`{_`,_`,_`,_`} : 'Term 'Type 'Substitution 'Context -> 'Result4Tuple [
    ctor] .
  op '`{_`,_`,_`} : 'Term 'Type 'Substitution -> 'ResultTriple [ctor] .
  op '`{_`,_`} : 'Substitution 'Context -> 'MatchPair [ctor] .
  op '`{_`,_`} : 'Term 'Type -> 'ResultPair [ctor] .
  op 'ambiguity : 'ResultPair 'ResultPair -> 'ResultPair? [ctor] .
  op 'anyType : nil -> 'Type? [ctor] .
  op 'ascii : 'Char -> 'Nat [special(
    id-hook('StringOpSymbol, 'ascii) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'assoc : nil -> 'Attr [ctor] .
  op 'ceq_=_if_`[_`]. : 'Term 'Term 'EqCondition 'AttrSet -> 'Equation [ctor
    format('d 'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
  op 'char : '`[FindResult`,NatList`,Bound`] -> '`[String`] [special(
    id-hook('StringOpSymbol, 'char) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'cmb_:_if_`[_`]. : 'Term 'Sort 'EqCondition 'AttrSet -> 'MembAx [ctor
    format('d 'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
  op 'comm : nil -> 'Attr [ctor] .
  op 'completeName : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaCompleteName) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'config : nil -> 'Attr [ctor] .
  op 'crl_=>_if_`[_`]. : 'Term 'Term 'Condition 'AttrSet -> 'Rule [ctor format(
    'd 'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
  op 'ctor : nil -> 'Attr [ctor] .
  op 'downTerm : 'Term 'Universal -> 'Universal [poly(2 0) special(
    id-hook('MetaLevelOpSymbol, 'metaDownTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'empty : nil -> 'KindSet [ctor] .
  op 'eq_=_`[_`]. : 'Term 'Term 'AttrSet -> 'Equation [ctor format('d 'd 'd 'd
    's 'd 'd 's 'd)] .
  op 'extending_. : 'ModuleExpression -> 'Import [ctor] .
  op 'failure : nil -> 'Result4Tuple? [ctor] .
  op 'failure : nil -> 'ResultTriple? [ctor] .
  op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
  op 'find : 'String 'String 'Nat -> 'FindResult [special(
    id-hook('StringOpSymbol, 'find) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('notFoundTerm, 'notFound.FindResult))] .
  op 'fmod_is_sorts_.____endfm : 'Qid 'ImportList 'SortSet 'SubsortDeclSet
    'OpDeclSet 'MembAxSet 'EquationSet -> 'FModule [ctor gather('& '& '& '& '&
    '& '&) format('d 'd 'd 'n++i 'ni 'd 'd 'ni 'ni 'ni 'ni 'n--i 'd)] .
  op 'format : 'QidList -> 'Attr [ctor] .
  op 'frozen : 'NatList -> 'Attr [ctor] .
  op 'gather : 'QidList -> 'Attr [ctor] .
  op 'gcd : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'gcd : 'NzNat 'Nat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'getContext : 'MatchPair -> 'Context [none] .
  op 'getContext : 'Result4Tuple -> 'Context [none] .
  op 'getEqs : 'Module -> 'EquationSet [none] .
  op 'getImports : 'Module -> 'ImportList [none] .
  op 'getKind : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGetKind) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'getKinds : '`[Module`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGetKinds) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'getMbs : 'Module -> 'MembAxSet [none] .
  op 'getName : 'Constant -> 'Qid [none] .
  op 'getName : 'Module -> 'Qid [none] .
  op 'getName : 'Variable -> 'Qid [none] .
  op 'getOps : 'Module -> 'OpDeclSet [none] .
  op 'getRls : 'Module -> 'RuleSet [none] .
  op 'getSorts : 'Module -> 'SortSet [none] .
  op 'getSubsorts : 'Module -> 'SubsortDeclSet [none] .
  op 'getSubstitution : 'MatchPair -> 'Substitution [none] .
  op 'getSubstitution : 'Result4Tuple -> 'Substitution [none] .
  op 'getSubstitution : 'ResultTriple -> 'Substitution [none] .
  op 'getTerm : 'Result4Tuple -> 'Term [none] .
  op 'getTerm : 'ResultPair -> 'Term [none] .
  op 'getTerm : 'ResultTriple -> 'Term [none] .
  op 'getType : 'Constant -> 'Type [none] .
  op 'getType : 'Result4Tuple -> 'Type [none] .
  op 'getType : 'ResultPair -> 'Type [none] .
  op 'getType : 'ResultTriple -> 'Type [none] .
  op 'getType : 'Variable -> 'Type [none] .
  op 'glbSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaGlbSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'id : 'Term -> 'Attr [ctor] .
  op 'id-hook : 'Qid 'QidList -> 'Hook [ctor format('nssss 'd)] .
  op 'idem : nil -> 'Attr [ctor] .
  op 'if_then_else_fi : 'Bool 'Universal 'Universal -> 'Universal [poly(2 3 0)
    special(
    id-hook('BranchSymbol, nil) 
    term-hook('1, 'true.Bool) 
    term-hook('2, 'false.Bool))] .
  op 'including_. : 'ModuleExpression -> 'Import [ctor] .
  op 'iter : nil -> 'Attr [ctor] .
  op 'label : 'Qid -> 'Attr [ctor] .
  op 'label_to_ : 'Qid 'Qid -> 'Renaming [ctor] .
  op 'lcm : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'lcm : 'NzNat 'NzNat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'leastSort : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaLeastSort) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'left-id : 'Term -> 'Attr [ctor] .
  op 'length : 'String -> 'Nat [special(
    id-hook('StringOpSymbol, 'length) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'lesserSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaLesserSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'maximalSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMaximalSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'mb_:_`[_`]. : 'Term 'Sort 'AttrSet -> 'MembAx [ctor format('d 'd 'd 'd 's
    'd 'd 's 'd)] .
  op 'memo : nil -> 'Attr [ctor] .
  op 'metaApply : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Substitution?`] '`[FindResult`,NatList`,Bound`] -> '`[ResultTriple?`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaApply) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaFrewrite : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaFrewrite) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaMatch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`] '`[FindResult`,NatList`,Bound`] -> '`[Substitution?`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMatch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaParse : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaParse) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaPrettyPrint : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaPrettyPrint) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaReduce : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaReduce) 
    op-hook('qidSymbol, '<Qids>, nil, 'Qid) 
    op-hook('metaTermSymbol, '_`[_`], 'Qid 'GroundTermList, 'GroundTerm) 
    op-hook('metaArgSymbol, '_`,_, 'GroundTermList 'GroundTermList,
    'GroundTermList) 
    op-hook('assignmentSymbol, '_<-_, 'Variable 'Term, 'Assignment) 
    op-hook('emptySubstitutionSymbol, 'none, nil, 'Substitution) 
    op-hook('substitutionSymbol, '_;_, 'Substitution 'Substitution,
    'Substitution) 
    op-hook('holeSymbol, '`[`], nil, 'Context) 
    op-hook('protectingSymbol, 'protecting_., 'ModuleExpression, 'Import) 
    op-hook('extendingSymbol, 'extending_., 'ModuleExpression, 'Import) 
    op-hook('includingSymbol, 'including_., 'ModuleExpression, 'Import) 
    op-hook('nilImportListSymbol, 'nil, nil, 'ImportList) 
    op-hook('importListSymbol, '__, 'ImportList 'ImportList, 'ImportList) 
    op-hook('emptySortSetSymbol, 'none, nil, 'SortSet) 
    op-hook('sortSetSymbol, '_;_, 'SortSet 'SortSet, 'SortSet) 
    op-hook('subsortSymbol, 'subsort_<_., 'Sort 'Sort, 'SubsortDecl) 
    op-hook('emptySubsortDeclSetSymbol, 'none, nil, 'SubsortDeclSet) 
    op-hook('subsortDeclSetSymbol, '__, 'SubsortDeclSet 'SubsortDeclSet,
    'SubsortDeclSet) 
    op-hook('nilQidListSymbol, 'nil, nil, 'QidList) 
    op-hook('qidListSymbol, '__, 'QidList 'QidList, 'QidList) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    op-hook('natListSymbol, '__, 'NatList 'NatList, 'NatList) 
    op-hook('unboundedSymbol, 'unbounded, nil, 'Bound) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('sortRenamingSymbol, 'sort_to_, 'Qid 'Qid, 'Renaming) 
    op-hook('opRenamingSymbol, 'op_to_`[_`], 'Qid 'Qid 'AttrSet, 'Renaming) 
    op-hook('opRenamingSymbol2, 'op_:_->_to_`[_`], 'Qid 'TypeList 'Type 'Qid
    'AttrSet, 'Renaming) 
    op-hook('labelRenamingSymbol, 'label_to_, 'Qid 'Qid, 'Renaming) 
    op-hook('renamingSetSymbol, '_`,_, 'RenamingSet 'RenamingSet, 'RenamingSet)
    
    op-hook('sumSymbol, '_+_, 'ModuleExpression 'ModuleExpression,
    'ModuleExpression) 
    op-hook('renamingSymbol, '_*`(_`), 'ModuleExpression 'RenamingSet,
    'ModuleExpression) 
    op-hook('termHookSymbol, 'term-hook, 'Qid 'Term, 'Hook) 
    op-hook('hookListSymbol, '__, 'HookList 'HookList, 'HookList) 
    op-hook('idHookSymbol, 'id-hook, 'Qid 'QidList, 'Hook) 
    op-hook('opHookSymbol, 'op-hook, 'Qid 'Qid 'QidList 'Qid, 'Hook) 
    op-hook('assocSymbol, 'assoc, nil, 'Attr) 
    op-hook('commSymbol, 'comm, nil, 'Attr) 
    op-hook('idemSymbol, 'idem, nil, 'Attr) 
    op-hook('iterSymbol, 'iter, nil, 'Attr) 
    op-hook('idSymbol, 'id, 'Term, 'Attr) 
    op-hook('leftIdSymbol, 'left-id, 'Term, 'Attr) 
    op-hook('rightIdSymbol, 'right-id, 'Term, 'Attr) 
    op-hook('stratSymbol, 'strat, 'NatList, 'Attr) 
    op-hook('memoSymbol, 'memo, nil, 'Attr) 
    op-hook('precSymbol, 'prec, 'Nat, 'Attr) 
    op-hook('gatherSymbol, 'gather, 'QidList, 'Attr) 
    op-hook('formatSymbol, 'format, 'QidList, 'Attr) 
    op-hook('ctorSymbol, 'ctor, nil, 'Attr) 
    op-hook('frozenSymbol, 'frozen, 'NatList, 'Attr) 
    op-hook('polySymbol, 'poly, 'NatList, 'Attr) 
    op-hook('configSymbol, 'config, nil, 'Attr) 
    op-hook('objectSymbol, 'object, nil, 'Attr) 
    op-hook('msgSymbol, 'msg, nil, 'Attr) 
    op-hook('specialSymbol, 'special, 'HookList, 'Attr) 
    op-hook('labelSymbol, 'label, 'Qid, 'Attr) 
    op-hook('metadataSymbol, 'metadata, 'String, 'Attr) 
    op-hook('owiseSymbol, 'owise, nil, 'Attr) 
    op-hook('nonexecSymbol, 'nonexec, nil, 'Attr) 
    op-hook('emptyAttrSetSymbol, 'none, nil, 'AttrSet) 
    op-hook('attrSetSymbol, '__, 'AttrSet 'AttrSet, 'AttrSet) 
    op-hook('opDeclSymbol, 'op_:_->_`[_`]., 'Qid 'TypeList 'Type 'AttrSet,
    'OpDecl) 
    op-hook('opDeclSetSymbol, '__, 'OpDeclSet 'OpDeclSet, 'OpDeclSet) 
    op-hook('emptyOpDeclSetSymbol, 'none, nil, 'OpDeclSet) 
    op-hook('noConditionSymbol, 'nil, nil, 'EqCondition) 
    op-hook('equalityConditionSymbol, '_=_, 'Term 'Term, 'EqCondition) 
    op-hook('sortTestConditionSymbol, '_:_, 'Term 'Sort, 'EqCondition) 
    op-hook('matchConditionSymbol, '_:=_, 'Term 'Term, 'EqCondition) 
    op-hook('rewriteConditionSymbol, '_=>_, 'Term 'Term, 'Condition) 
    op-hook('conjunctionSymbol, '_/\_, 'EqCondition 'EqCondition, 'EqCondition)
    
    op-hook('mbSymbol, 'mb_:_`[_`]., 'Term 'Sort 'AttrSet, 'MembAx) 
    op-hook('cmbSymbol, 'cmb_:_if_`[_`]., 'Term 'Sort 'EqCondition 'AttrSet,
    'MembAx) 
    op-hook('emptyMembAxSetSymbol, 'none, nil, 'MembAxSet) 
    op-hook('membAxSetSymbol, '__, 'MembAxSet 'MembAxSet, 'MembAxSet) 
    op-hook('eqSymbol, 'eq_=_`[_`]., 'Term 'Term 'AttrSet, 'Equation) 
    op-hook('ceqSymbol, 'ceq_=_if_`[_`]., 'Term 'Term 'EqCondition 'AttrSet,
    'Equation) 
    op-hook('emptyEquationSetSymbol, 'none, nil, 'EquationSet) 
    op-hook('equationSetSymbol, '__, 'EquationSet 'EquationSet, 'EquationSet) 
    op-hook('rlSymbol, 'rl_=>_`[_`]., 'Term 'Term 'AttrSet, 'Rule) 
    op-hook('crlSymbol, 'crl_=>_if_`[_`]., 'Term 'Term 'Condition 'AttrSet,
    'Rule) 
    op-hook('emptyRuleSetSymbol, 'none, nil, 'RuleSet) 
    op-hook('ruleSetSymbol, '__, 'RuleSet 'RuleSet, 'RuleSet) 
    op-hook('fmodSymbol, 'fmod_is_sorts_.____endfm, 'Qid 'ImportList 'SortSet
    'SubsortDeclSet 'OpDeclSet 'MembAxSet 'EquationSet, 'FModule) 
    op-hook('modSymbol, 'mod_is_sorts_._____endm, 'Qid 'ImportList 'SortSet
    'SubsortDeclSet 'OpDeclSet 'MembAxSet 'EquationSet 'RuleSet, 'Module) 
    op-hook('emptyKindSetSymbol, 'empty, nil, 'KindSet) 
    op-hook('kindSetSymbol, '_&_, 'KindSet 'KindSet, 'KindSet) 
    op-hook('anyTypeSymbol, 'anyType, nil, 'Type?) 
    op-hook('resultPairSymbol, '`{_`,_`}, 'Term 'Type, 'ResultPair) 
    op-hook('resultTripleSymbol, '`{_`,_`,_`}, 'Term 'Type 'Substitution,
    'ResultTriple) 
    op-hook('result4TupleSymbol, '`{_`,_`,_`,_`}, 'Term 'Type 'Substitution
    'Context, 'Result4Tuple) 
    op-hook('matchPairSymbol, '`{_`,_`}, 'Substitution 'Context, 'MatchPair) 
    op-hook('noParseSymbol, 'noParse, 'Nat, 'ResultPair?) 
    op-hook('ambiguitySymbol, 'ambiguity, 'ResultPair 'ResultPair,
    'ResultPair?) 
    op-hook('failure3Symbol, 'failure, nil, 'ResultTriple?) 
    op-hook('failure4Symbol, 'failure, nil, 'Result4Tuple?) 
    op-hook('noMatchSubstSymbol, 'noMatch, nil, 'Substitution?) 
    op-hook('noMatchPairSymbol, 'noMatch, nil, 'MatchPair?) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op 'metaRewrite : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] -> '`[ResultPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaRewrite) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaSearch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[ResultTriple?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSearch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaXapply : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Substitution?`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[Result4Tuple?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaXapply) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metaXmatch : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Condition`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`] ->
    '`[MatchPair?`] [special(
    id-hook('MetaLevelOpSymbol, 'metaXmatch) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'metadata : 'String -> 'Attr [ctor] .
  op 'minimalSorts : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaMinimalSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'modExp : '`[FindResult`,NatList`,Bound`] '`[FindResult`,NatList`,Bound`]
    '`[FindResult`,NatList`,Bound`] -> '`[FindResult`,NatList`,Bound`] [
    special(
    id-hook('NumberOpSymbol, 'modExp) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'mod_is_sorts_._____endm : 'Qid 'ImportList 'SortSet 'SubsortDeclSet
    'OpDeclSet 'MembAxSet 'EquationSet 'RuleSet -> 'Module [ctor gather('& '&
    '& '& '& '& '& '&) format('d 'd 'd 'n++i 'ni 'd 'd 'ni 'ni 'ni 'ni 'ni
    'n--i 'd)] .
  op 'msg : nil -> 'Attr [ctor] .
  op 'nil : nil -> 'EqCondition [none] .
  op 'nil : nil -> 'ImportList [ctor] .
  op 'nil : nil -> 'QidList [ctor] .
  op 'nil : nil -> 'TypeList [ctor] .
  op 'noMatch : nil -> 'MatchPair? [ctor] .
  op 'noMatch : nil -> 'Substitution? [ctor] .
  op 'noParse : 'Nat -> 'ResultPair? [ctor] .
  op 'none : nil -> 'AttrSet [ctor] .
  op 'none : nil -> 'EquationSet [ctor] .
  op 'none : nil -> 'MembAxSet [ctor] .
  op 'none : nil -> 'OpDeclSet [ctor] .
  op 'none : nil -> 'RuleSet [ctor] .
  op 'none : nil -> 'SortSet [ctor] .
  op 'none : nil -> 'SubsortDeclSet [ctor] .
  op 'none : nil -> 'Substitution [ctor] .
  op 'nonexec : nil -> 'Attr [ctor] .
  op 'notFound : nil -> 'FindResult [none] .
  op 'not_ : 'Bool -> 'Bool [prec(53)] .
  op 'object : nil -> 'Attr [ctor] .
  op 'op-hook : 'Qid 'Qid 'QidList 'Qid -> 'Hook [ctor format('nssss 'd)] .
  op 'op_:_->_`[_`]. : 'Qid 'TypeList 'Type 'AttrSet -> 'OpDecl [ctor format('d
    'd 'd 'd 'd 'd 's 'd 'd 's 'd)] .
  op 'op_:_->_to_`[_`] : 'Qid 'TypeList 'Type 'Qid 'AttrSet -> 'Renaming [ctor
    format('d 'd 'd 'd 'd 'd 'd 'd 's 'd 'd 'd)] .
  op 'op_to_`[_`] : 'Qid 'Qid 'AttrSet -> 'Renaming [ctor format('d 'd 'd 'd 's
    'd 'd 'd)] .
  op 'owise : nil -> 'Attr [ctor] .
  op 'poly : 'NatList -> 'Attr [ctor] .
  op 'prec : 'Nat -> 'Attr [ctor] .
  op 'protecting_. : 'ModuleExpression -> 'Import [ctor] .
  op 'qid : '`[String`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('QuotedIdentifierOpSymbol, 'qid) 
    op-hook('quotedIdentifierSymbol, '<Qids>, nil, 'Qid) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char))] .
  op 'rfind : 'String 'String 'Nat -> 'FindResult [special(
    id-hook('StringOpSymbol, 'rfind) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('notFoundTerm, 'notFound.FindResult))] .
  op 'right-id : 'Term -> 'Attr [ctor] .
  op 'rl_=>_`[_`]. : 'Term 'Term 'AttrSet -> 'Rule [ctor format('d 'd 'd 'd 's
    'd 'd 's 'd)] .
  op 's_ : 'Nat -> 'NzNat [iter ctor special(
    id-hook('SuccSymbol, nil) 
    term-hook('zeroTerm, '0.Zero))] .
  op 'sameKind : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSameKind) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'sd : 'Nat 'Nat -> 'Nat [comm special(
    id-hook('NumberOpSymbol, 'sd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'sortLeq : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaSortLeq) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'sort_to_ : 'Qid 'Qid -> 'Renaming [ctor] .
  op 'special : 'HookList -> 'Attr [ctor] .
  op 'strat : 'NatList -> 'Attr [ctor] .
  op 'string : 'Qid -> 'String [special(
    id-hook('QuotedIdentifierOpSymbol, 'string) 
    op-hook('quotedIdentifierSymbol, '<Qids>, nil, 'Qid) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char))] .
  op 'subsort_<_. : 'Sort 'Sort -> 'SubsortDecl [ctor] .
  op 'substr : 'String 'Nat 'Nat -> 'String [special(
    id-hook('StringOpSymbol, 'substr) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'term-hook : 'Qid 'Term -> 'Hook [ctor format('nssss 'd)] .
  op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
  op 'unbounded : nil -> 'Bound [none] .
  op 'upEqs :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[EquationSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpEqs) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upImports :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[ImportList`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpImports) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upMbs :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[MembAxSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpMbs) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upModule :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[Module`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpModule) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upOpDecls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[OpDeclSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpOpDecls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upRls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[RuleSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpRls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upSorts :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] ->
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] [
    special(
    id-hook('MetaLevelOpSymbol, 'metaUpSorts) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upSubsortDecls :
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`]
    '`[Bool`] -> '`[SubsortDeclSet`] [special(
    id-hook('MetaLevelOpSymbol, 'metaUpSubsortDecls) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'upTerm : 'Universal -> 'Term [poly(1) special(
    id-hook('MetaLevelOpSymbol, 'metaUpTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'wellFormed : 'Module -> 'Bool [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedModule) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'wellFormed : '`[Module`]
    '`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`] ->
    '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedTerm) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  op 'wellFormed : '`[Module`] '`[Substitution?`] -> '`[Bool`] [special(
    id-hook('MetaLevelOpSymbol, 'metaWellFormedSubstitution) 
    op-hook('shareWith, 'metaReduce, 'Module 'SortSet, 'ResultPair?))] .
  none
  eq '_&_['K:Kind,'K:Kind] = 'K:Kind [none] .
  eq '_;_['A:Assignment,'A:Assignment] = 'A:Assignment [none] .
  eq '_;_['S:Sort,'S:Sort] = 'S:Sort [none] .
  eq '__['A:Attr,'A:Attr] = 'A:Attr [none] .
  eq '__['E:Equation,'E:Equation] = 'E:Equation [none] .
  eq '__['M:MembAx,'M:MembAx] = 'M:MembAx [none] .
  eq '__['O:OpDecl,'O:OpDecl] = 'O:OpDecl [none] .
  eq '__['R:Rule,'R:Rule] = 'R:Rule [none] .
  eq '__['S:SubsortDecl,'S:SubsortDecl] = 'S:SubsortDecl [none] .
  eq '_and_['A:Bool,'A:Bool] = 'A:Bool [none] .
  eq '_and_['A:Bool,'_xor_['B:Bool,'C:Bool]] = '_xor_['_and_['A:Bool,'B:Bool],
    '_and_['A:Bool,'C:Bool]] [none] .
  eq '_and_['false.Bool,'A:Bool] = 'false.Bool [none] .
  eq '_and_['true.Bool,'A:Bool] = 'A:Bool [none] .
  eq '_implies_['A:Bool,'B:Bool] = 'not_['_xor_['A:Bool,'_and_['A:Bool,
    'B:Bool]]] [none] .
  eq '_or_['A:Bool,'B:Bool] = '_xor_['_and_['A:Bool,'B:Bool],'_xor_['A:Bool,
    'B:Bool]] [none] .
  eq '_xor_['A:Bool,'A:Bool] = 'false.Bool [none] .
  eq '_xor_['false.Bool,'A:Bool] = 'A:Bool [none] .
  eq '`[_`]['Q:Qid] = 'mod_is_sorts_._____endm['Q:Qid,'protecting_.['Q:Qid],
    'none.SortSet,'none.SubsortDeclSet,'none.OpDeclSet,'none.MembAxSet,
    'none.EquationSet,'none.RuleSet] [none] .
  eq 'getContext['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,'C:Context]] =
    'C:Context [none] .
  eq 'getContext['`{_`,_`}['S:Substitution,'C:Context]] = 'C:Context [none] .
  eq 'getEqs['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'EQS:EquationSet [none] .
  eq 'getEqs['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'EQS:EquationSet [none] .
  eq 'getImports['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'IL:ImportList [none] .
  eq 'getImports['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'IL:ImportList [none] .
  eq 'getMbs['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'MAS:MembAxSet [none] .
  eq 'getMbs['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'MAS:MembAxSet [none] .
  eq 'getName['C:Constant] = 'qid['substr['string['C:Constant],'0.Zero,'rfind[
    'string['C:Constant],'".".Char,'length['string['C:Constant]]]]] [none] .
  eq 'getName['V:Variable] = 'qid['substr['string['V:Variable],'0.Zero,'rfind[
    'string['V:Variable],'":".Char,'length['string['V:Variable]]]]] [none] .
  eq 'getName['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'Q:Qid [none] .
  eq 'getName['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'Q:Qid [none] .
  eq 'getOps['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'OPDS:OpDeclSet [none] .
  eq 'getOps['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'OPDS:OpDeclSet [none] .
  eq 'getRls['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'none.RuleSet [none] .
  eq 'getRls['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'RLS:RuleSet [none] .
  eq 'getSorts['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'SS:SortSet [none] .
  eq 'getSorts['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'SS:SortSet [none] .
  eq 'getSubsorts['fmod_is_sorts_.____endfm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet]] =
    'SSDS:SubsortDeclSet [none] .
  eq 'getSubsorts['mod_is_sorts_._____endm['Q:Qid,'IL:ImportList,'SS:SortSet,
    'SSDS:SubsortDeclSet,'OPDS:OpDeclSet,'MAS:MembAxSet,'EQS:EquationSet,
    'RLS:RuleSet]] = 'SSDS:SubsortDeclSet [none] .
  eq 'getSubstitution['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,
    'C:Context]] = 'S:Substitution [none] .
  eq 'getSubstitution['`{_`,_`,_`}['T:Term,'T:Type,'S:Substitution]] =
    'S:Substitution [none] .
  eq 'getSubstitution['`{_`,_`}['S:Substitution,'C:Context]] = 'S:Substitution
    [none] .
  eq 'getTerm['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,'C:Context]] =
    'T:Term [none] .
  eq 'getTerm['`{_`,_`,_`}['T:Term,'T:Type,'S:Substitution]] = 'T:Term [none] .
  eq 'getTerm['`{_`,_`}['T:Term,'T:Type]] = 'T:Term [none] .
  eq 'getType['C:Constant] = 'qid['substr['string['C:Constant],'_+_['s_[
    '0.Zero],'rfind['string['C:Constant],'".".Char,'length['string[
    'C:Constant]]]],'length['string['C:Constant]]]] [none] .
  eq 'getType['V:Variable] = 'qid['substr['string['V:Variable],'_+_['s_[
    '0.Zero],'rfind['string['V:Variable],'":".Char,'length['string[
    'V:Variable]]]],'length['string['V:Variable]]]] [none] .
  eq 'getType['`{_`,_`,_`,_`}['T:Term,'T:Type,'S:Substitution,'C:Context]] =
    'T:Type [none] .
  eq 'getType['`{_`,_`,_`}['T:Term,'T:Type,'S:Substitution]] = 'T:Type [none] .
  eq 'getType['`{_`,_`}['T:Term,'T:Type]] = 'T:Type [none] .
  eq 'not_['A:Bool] = '_xor_['true.Bool,'A:Bool] [none] .
endfm
==========================================
reduce in META-LEVEL : upModule('STRING, true) .
rewrites: 1
result FModule: fmod 'STRING is
  nil
  sorts 'Bool ; 'Char ; 'FindResult ; 'Nat ; 'NzNat ; 'String ; 'Zero .
  subsort 'Char < 'String .
  subsort 'Nat < 'FindResult .
  subsort 'NzNat < 'Nat .
  subsort 'Zero < 'Nat .
  op '0 : nil -> 'Zero [ctor] .
  op '<Strings> : nil -> 'Char [special(
    id-hook('StringSymbol, nil))] .
  op '<Strings> : nil -> 'String [special(
    id-hook('StringSymbol, nil))] .
  op '_&_ : 'Nat 'Nat -> 'Nat [assoc comm prec(53) special(
    id-hook('NumberOpSymbol, '&) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*_ : 'Nat 'Nat -> 'Nat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_*_ : 'NzNat 'NzNat -> 'NzNat [assoc comm prec(31) special(
    id-hook('NumberOpSymbol, '*) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'Nat 'Nat -> 'Nat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(33) special(
    id-hook('NumberOpSymbol, '+) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_+_ : 'String 'String -> 'String [prec(33) gather('E 'e) special(
    id-hook('StringOpSymbol, '+) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char))] .
  op '_<<_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '<<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_<=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<=_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '<=) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '<) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_<_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '<) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_=/=_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'false.Bool) 
    term-hook('notEqualTerm, 'true.Bool))] .
  op '_==_ : 'Universal 'Universal -> 'Bool [prec(51) poly(1 2) special(
    id-hook('EqualitySymbol, nil) 
    term-hook('equalTerm, 'true.Bool) 
    term-hook('notEqualTerm, 'false.Bool))] .
  op '_>=_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>=) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>=_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '>=) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>>_ : 'Nat 'Nat -> 'Nat [prec(35) gather('E 'e) special(
    id-hook('NumberOpSymbol, '>>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_>_ : 'Nat 'Nat -> 'Bool [prec(37) special(
    id-hook('NumberOpSymbol, '>) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_>_ : 'String 'String -> 'Bool [prec(37) special(
    id-hook('StringOpSymbol, '>) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_^_ : 'Nat 'Nat -> 'Nat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_^_ : 'NzNat 'Nat -> 'NzNat [prec(29) gather('E 'e) special(
    id-hook('NumberOpSymbol, '^) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_and_ : 'Bool 'Bool -> 'Bool [assoc comm prec(55)] .
  op '_divides_ : 'NzNat 'Nat -> 'Bool [prec(51) special(
    id-hook('NumberOpSymbol, 'divides) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('trueTerm, 'true.Bool) 
    term-hook('falseTerm, 'false.Bool))] .
  op '_implies_ : 'Bool 'Bool -> 'Bool [prec(61) gather('e 'E)] .
  op '_or_ : 'Bool 'Bool -> 'Bool [assoc comm prec(59)] .
  op '_quo_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'quo) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_rem_ : 'Nat 'NzNat -> 'Nat [prec(31) gather('E 'e) special(
    id-hook('NumberOpSymbol, 'rem) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_xor_ : 'Bool 'Bool -> 'Bool [assoc comm prec(57)] .
  op '_xor_ : 'Nat 'Nat -> 'Nat [assoc comm prec(55) special(
    id-hook('NumberOpSymbol, 'xor) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_|_ : 'Nat 'Nat -> 'Nat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op '_|_ : 'NzNat 'Nat -> 'NzNat [assoc comm prec(57) special(
    id-hook('NumberOpSymbol, '|) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'ascii : 'Char -> 'Nat [special(
    id-hook('StringOpSymbol, 'ascii) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'char : '`[FindResult`] -> '`[String`] [special(
    id-hook('StringOpSymbol, 'char) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'false : nil -> 'Bool [ctor special(
    id-hook('SystemFalse, nil))] .
  op 'find : 'String 'String 'Nat -> 'FindResult [special(
    id-hook('StringOpSymbol, 'find) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('notFoundTerm, 'notFound.FindResult))] .
  op 'gcd : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'gcd : 'NzNat 'Nat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'gcd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'if_then_else_fi : 'Bool 'Universal 'Universal -> 'Universal [poly(2 3 0)
    special(
    id-hook('BranchSymbol, nil) 
    term-hook('1, 'true.Bool) 
    term-hook('2, 'false.Bool))] .
  op 'lcm : 'Nat 'Nat -> 'Nat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'lcm : 'NzNat 'NzNat -> 'NzNat [assoc comm special(
    id-hook('NumberOpSymbol, 'lcm) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'length : 'String -> 'Nat [special(
    id-hook('StringOpSymbol, 'length) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'modExp : '`[FindResult`] '`[FindResult`] '`[FindResult`] ->
    '`[FindResult`] [special(
    id-hook('NumberOpSymbol, 'modExp) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'notFound : nil -> 'FindResult [none] .
  op 'not_ : 'Bool -> 'Bool [prec(53)] .
  op 'rfind : 'String 'String 'Nat -> 'FindResult [special(
    id-hook('StringOpSymbol, 'rfind) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat) 
    term-hook('notFoundTerm, 'notFound.FindResult))] .
  op 's_ : 'Nat -> 'NzNat [iter ctor special(
    id-hook('SuccSymbol, nil) 
    term-hook('zeroTerm, '0.Zero))] .
  op 'sd : 'Nat 'Nat -> 'Nat [comm special(
    id-hook('NumberOpSymbol, 'sd) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'substr : 'String 'Nat 'Nat -> 'String [special(
    id-hook('StringOpSymbol, 'substr) 
    op-hook('stringSymbol, '<Strings>, nil, 'Char) 
    op-hook('succSymbol, 's_, 'Nat, 'NzNat))] .
  op 'true : nil -> 'Bool [ctor special(
    id-hook('SystemTrue, nil))] .
  none
  eq '_and_['A:Bool,'A:Bool] = 'A:Bool [none] .
  eq '_and_['A:Bool,'_xor_['B:Bool,'C:Bool]] = '_xor_['_and_['A:Bool,'B:Bool],
    '_and_['A:Bool,'C:Bool]] [none] .
  eq '_and_['false.Bool,'A:Bool] = 'false.Bool [none] .
  eq '_and_['true.Bool,'A:Bool] = 'A:Bool [none] .
  eq '_implies_['A:Bool,'B:Bool] = 'not_['_xor_['A:Bool,'_and_['A:Bool,
    'B:Bool]]] [none] .
  eq '_or_['A:Bool,'B:Bool] = '_xor_['_and_['A:Bool,'B:Bool],'_xor_['A:Bool,
    'B:Bool]] [none] .
  eq '_xor_['A:Bool,'A:Bool] = 'false.Bool [none] .
  eq '_xor_['false.Bool,'A:Bool] = 'A:Bool [none] .
  eq 'not_['A:Bool] = '_xor_['true.Bool,'A:Bool] [none] .
endfm
==========================================
reduce in META-LEVEL : metaReduce(upModule('STRING, true), '_+_[upTerm("a"),
    upTerm("b")]) .
rewrites: 5
result ResultPair: {'"ab".String,'String}
==========================================
reduce in META-LEVEL : metaReduce(upModule('META-LEVEL, true), 'modExp[upTerm(
    100),upTerm(66),upTerm(17)]) .
rewrites: 6
result ResultPair: {'s_^4['0.Zero],'NzNat}
==========================================
reduce in META-LEVEL : metaReduce(upModule('META-LEVEL, true), 'upModule[
    upTerm('META-LEVEL),upTerm(true)]) .
rewrites: 5
result ResultPair: {'fmod_is_sorts_.____endfm[''META-LEVEL.Sort,
    'nil.ImportList,'_;_[''Assignment.Sort,''Attr.Sort,''AttrSet.Sort,
    ''Bool.Sort,''Bound.Sort,''CTermList.Sort,''Char.Sort,''Condition.Sort,
    ''Constant.Sort,''Context.Sort,''EqCondition.Sort,''Equation.Sort,
    ''EquationSet.Sort,''FModule.Sort,''FindResult.Sort,''GTermList.Sort,
    ''GroundTerm.Sort,''GroundTermList.Sort,''Hook.Sort,''HookList.Sort,
    ''Import.Sort,''ImportList.Sort,''Kind.Sort,''KindSet.Sort,
    ''MatchPair.Sort,''MatchPair?.Sort,''MembAx.Sort,''MembAxSet.Sort,
    ''Module.Sort,''ModuleExpression.Sort,''Nat.Sort,''NatList.Sort,
    ''NzNat.Sort,''OpDecl.Sort,''OpDeclSet.Sort,''Qid.Sort,''QidList.Sort,
    ''Renaming.Sort,''RenamingSet.Sort,''Result4Tuple.Sort,
    ''Result4Tuple?.Sort,''ResultPair.Sort,''ResultPair?.Sort,
    ''ResultTriple.Sort,''ResultTriple?.Sort,''Rule.Sort,''RuleSet.Sort,
    ''Sort.Sort,''SortSet.Sort,''String.Sort,''SubsortDecl.Sort,
    ''SubsortDeclSet.Sort,''Substitution.Sort,''Substitution?.Sort,''Term.Sort,
    ''TermList.Sort,''Type.Sort,''Type?.Sort,''TypeList.Sort,''Variable.Sort,
    ''Zero.Sort],'__['subsort_<_.[''Assignment.Sort,''Substitution.Sort],
    'subsort_<_.[''Attr.Sort,''AttrSet.Sort],'subsort_<_.[''CTermList.Sort,
    ''GTermList.Sort],'subsort_<_.[''Char.Sort,''String.Sort],'subsort_<_.[
    ''Constant.Sort,''GroundTerm.Sort],'subsort_<_.[''Constant.Sort,
    ''Qid.Sort],'subsort_<_.[''Constant.Sort,''Term.Sort],'subsort_<_.[
    ''Context.Sort,''CTermList.Sort],'subsort_<_.[''EqCondition.Sort,
    ''Condition.Sort],'subsort_<_.[''Equation.Sort,''EquationSet.Sort],
    'subsort_<_.[''FModule.Sort,''Module.Sort],'subsort_<_.[''GroundTerm.Sort,
    ''GroundTermList.Sort],'subsort_<_.[''GroundTerm.Sort,''Term.Sort],
    'subsort_<_.[''GroundTermList.Sort,''TermList.Sort],'subsort_<_.[
    ''Hook.Sort,''HookList.Sort],'subsort_<_.[''Import.Sort,''ImportList.Sort],
    'subsort_<_.[''Kind.Sort,''KindSet.Sort],'subsort_<_.[''Kind.Sort,
    ''Type.Sort],'subsort_<_.[''MatchPair.Sort,''MatchPair?.Sort],'subsort_<_.[
    ''MembAx.Sort,''MembAxSet.Sort],'subsort_<_.[''Nat.Sort,''Bound.Sort],
    'subsort_<_.[''Nat.Sort,''FindResult.Sort],'subsort_<_.[''Nat.Sort,
    ''NatList.Sort],'subsort_<_.[''NzNat.Sort,''Nat.Sort],'subsort_<_.[
    ''OpDecl.Sort,''OpDeclSet.Sort],'subsort_<_.[''Qid.Sort,
    ''ModuleExpression.Sort],'subsort_<_.[''Qid.Sort,''QidList.Sort],
    'subsort_<_.[''Renaming.Sort,''RenamingSet.Sort],'subsort_<_.[
    ''Result4Tuple.Sort,''Result4Tuple?.Sort],'subsort_<_.[''ResultPair.Sort,
    ''ResultPair?.Sort],'subsort_<_.[''ResultTriple.Sort,''ResultTriple?.Sort],
    'subsort_<_.[''Rule.Sort,''RuleSet.Sort],'subsort_<_.[''Sort.Sort,
    ''SortSet.Sort],'subsort_<_.[''Sort.Sort,''Type.Sort],'subsort_<_.[
    ''SubsortDecl.Sort,''SubsortDeclSet.Sort],'subsort_<_.[''Substitution.Sort,
    ''Substitution?.Sort],'subsort_<_.[''Term.Sort,''TermList.Sort],
    'subsort_<_.[''TermList.Sort,''GTermList.Sort],'subsort_<_.[''Type.Sort,
    ''Qid.Sort],'subsort_<_.[''Type.Sort,''Type?.Sort],'subsort_<_.[
    ''Type.Sort,''TypeList.Sort],'subsort_<_.[''TypeList.Sort,''QidList.Sort],
    'subsort_<_.[''Variable.Sort,''Qid.Sort],'subsort_<_.[''Variable.Sort,
    ''Term.Sort],'subsort_<_.[''Zero.Sort,''Nat.Sort]],'__['op_:_->_`[_`].[
    ''0.Sort,'nil.TypeList,''Zero.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Constant.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''constantQid.Sort]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Kind.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''kindQid.Sort]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Qid.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,'nil.TypeList]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Sort.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''sortQid.Sort]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Variable.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''variableQid.Sort]]],'op_:_->_`[_`].[
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort,'special['id-hook[
    ''StringSymbol.Sort,'nil.TypeList]]],'op_:_->_`[_`].[''<Strings>.Sort,
    'nil.TypeList,''String.Sort,'special['id-hook[''StringSymbol.Sort,
    'nil.TypeList]]],'op_:_->_`[_`].[''_&_.Sort,'__[''KindSet.Sort,
    ''KindSet.Sort],''KindSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''empty.KindSet.Constant]]],'op_:_->_`[_`].[''_&_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^53['0.Zero]],
    'special['__['id-hook[''NumberOpSymbol.Sort,''&.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_*_.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['assoc.Attr,
    'comm.Attr,'prec['s_^31['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''*.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_*_.Sort,'__[''NzNat.Sort,
    ''NzNat.Sort],''NzNat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^31[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''*.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_*`(_`).Sort,'__[''ModuleExpression.Sort,''RenamingSet.Sort],
    ''ModuleExpression.Sort,'__['ctor.Attr,'format['__[''d.Sort,''d.Sort,
    ''s.Sort,''n++i.Sort,''n--i.Sort,''d.Sort]],'prec['s_^39['0.Zero]]]],
    'op_:_->_`[_`].[''_+_.Sort,'__[''ModuleExpression.Sort,
    ''ModuleExpression.Sort],''ModuleExpression.Sort,'__['assoc.Attr,
    'comm.Attr,'ctor.Attr]],'op_:_->_`[_`].[''_+_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^33['0.Zero]],
    'special['__['id-hook[''NumberOpSymbol.Sort,''+.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_+_.Sort,'__[''NzNat.Sort,''Nat.Sort],''NzNat.Sort,'__['assoc.Attr,
    'comm.Attr,'prec['s_^33['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''+.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_+_.Sort,'__[''String.Sort,
    ''String.Sort],''String.Sort,'__['gather['__[''E.Sort,''e.Sort]],'prec[
    's_^33['0.Zero]],'special['__['id-hook[''StringOpSymbol.Sort,''+.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort]]]]],'op_:_->_`[_`].[''_/\_.Sort,'__[''Condition.Sort,
    ''Condition.Sort],''Condition.Sort,'__['assoc.Attr,'ctor.Attr,'id[
    ''nil.EqCondition.Constant],'prec['s_^73['0.Zero]]]],'op_:_->_`[_`].[
    ''_/\_.Sort,'__[''EqCondition.Sort,''EqCondition.Sort],''EqCondition.Sort,
    '__['assoc.Attr,'ctor.Attr,'id[''nil.EqCondition.Constant],'prec['s_^73[
    '0.Zero]]]],'op_:_->_`[_`].[''_:=_.Variable,'__[''Term.Sort,''Term.Sort],
    ''EqCondition.Sort,'__['ctor.Attr,'prec['s_^71['0.Zero]]]],'op_:_->_`[_`].[
    ''_:_.Variable,'__[''Term.Sort,''Sort.Sort],''EqCondition.Sort,'__[
    'ctor.Attr,'prec['s_^71['0.Zero]]]],'op_:_->_`[_`].[''_;_.Sort,'__[
    ''SortSet.Sort,''SortSet.Sort],''SortSet.Sort,'__['assoc.Attr,'comm.Attr,
    'ctor.Attr,'id[''none.SortSet.Constant]]],'op_:_->_`[_`].[''_;_.Sort,'__[
    ''Substitution.Sort,''Substitution.Sort],''Substitution.Sort,'__[
    'assoc.Attr,'comm.Attr,'ctor.Attr,'id[''none.Substitution.Constant],'prec[
    's_^65['0.Zero]]]],'op_:_->_`[_`].[''_<-_.Sort,'__[''Variable.Sort,
    ''Term.Sort],''Assignment.Sort,'__['ctor.Attr,'format['__[''nt.Sort,
    ''d.Sort,''d.Sort,''d.Sort]],'prec['s_^63['0.Zero]]]],'op_:_->_`[_`].[
    ''_<<_.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['gather['__[''E.Sort,
    ''e.Sort]],'prec['s_^35['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''<<.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_<=_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''<=.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort],'term-hook[''trueTerm.Sort,''true.Bool.Constant],
    'term-hook[''falseTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[
    ''_<=_.Sort,'__[''String.Sort,''String.Sort],''Bool.Sort,'__['prec['s_^37[
    '0.Zero]],'special['__['id-hook[''StringOpSymbol.Sort,''<=.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_<_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''<.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort],'term-hook[''trueTerm.Sort,''true.Bool.Constant],
    'term-hook[''falseTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[
    ''_<_.Sort,'__[''String.Sort,''String.Sort],''Bool.Sort,'__['prec['s_^37[
    '0.Zero]],'special['__['id-hook[''StringOpSymbol.Sort,''<.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_=/=_.Sort,'__[
    ''Universal.Sort,''Universal.Sort],''Bool.Sort,'__['poly['__['s_['0.Zero],
    's_^2['0.Zero]]],'prec['s_^51['0.Zero]],'special['__['id-hook[
    ''EqualitySymbol.Sort,'nil.TypeList],'term-hook[''equalTerm.Sort,
    ''false.Bool.Constant],'term-hook[''notEqualTerm.Sort,
    ''true.Bool.Constant]]]]],'op_:_->_`[_`].[''_==_.Sort,'__[''Universal.Sort,
    ''Universal.Sort],''Bool.Sort,'__['poly['__['s_['0.Zero],'s_^2['0.Zero]]],
    'prec['s_^51['0.Zero]],'special['__['id-hook[''EqualitySymbol.Sort,
    'nil.TypeList],'term-hook[''equalTerm.Sort,''true.Bool.Constant],
    'term-hook[''notEqualTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[
    ''_=>_.Sort,'__[''Term.Sort,''Term.Sort],''Condition.Sort,'__['ctor.Attr,
    'prec['s_^71['0.Zero]]]],'op_:_->_`[_`].[''_=_.Sort,'__[''Term.Sort,
    ''Term.Sort],''EqCondition.Sort,'__['ctor.Attr,'prec['s_^71['0.Zero]]]],
    'op_:_->_`[_`].[''_>=_.Sort,'__[''Nat.Sort,''Nat.Sort],''Bool.Sort,'__[
    'prec['s_^37['0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,
    ''>=.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],
    'term-hook[''trueTerm.Sort,''true.Bool.Constant],'term-hook[
    ''falseTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_>=_.Sort,
    '__[''String.Sort,''String.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],
    'special['__['id-hook[''StringOpSymbol.Sort,''>=.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_>>_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['gather['__[''E.Sort,''e.Sort]],'prec['s_^35[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''>>.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_>_.Sort,'__[''Nat.Sort,''Nat.Sort],''Bool.Sort,'__['prec['s_^37[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''>.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_>_.Sort,'__[''String.Sort,
    ''String.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],'special['__[
    'id-hook[''StringOpSymbol.Sort,''>.Sort],'op-hook[''stringSymbol.Sort,
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[''trueTerm.Sort,
    ''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_^_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['gather['__[''E.Sort,''e.Sort]],'prec['s_^29[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''^.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_^_.Sort,'__[''NzNat.Sort,''Nat.Sort],''NzNat.Sort,'__['gather['__[
    ''E.Sort,''e.Sort]],'prec['s_^29['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''^.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''__.Sort,'__[''AttrSet.Sort,
    ''AttrSet.Sort],''AttrSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''none.AttrSet.Constant]]],'op_:_->_`[_`].[''__.Sort,'__[
    ''EquationSet.Sort,''EquationSet.Sort],''EquationSet.Sort,'__['assoc.Attr,
    'comm.Attr,'ctor.Attr,'format['__[''d.Sort,''ni.Sort,''d.Sort]],'id[
    ''none.EquationSet.Constant]]],'op_:_->_`[_`].[''__.Sort,'__[
    ''HookList.Sort,''HookList.Sort],''HookList.Sort,'__['assoc.Attr,
    'ctor.Attr]],'op_:_->_`[_`].[''__.Sort,'__[''ImportList.Sort,
    ''ImportList.Sort],''ImportList.Sort,'__['assoc.Attr,'ctor.Attr,'format[
    '__[''d.Sort,''ni.Sort,''d.Sort]],'id[''nil.ImportList.Constant]]],
    'op_:_->_`[_`].[''__.Sort,'__[''MembAxSet.Sort,''MembAxSet.Sort],
    ''MembAxSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'format['__[
    ''d.Sort,''ni.Sort,''d.Sort]],'id[''none.MembAxSet.Constant]]],
    'op_:_->_`[_`].[''__.Sort,'__[''NatList.Sort,''NatList.Sort],
    ''NatList.Sort,'__['assoc.Attr,'ctor.Attr]],'op_:_->_`[_`].[''__.Sort,'__[
    ''OpDeclSet.Sort,''OpDeclSet.Sort],''OpDeclSet.Sort,'__['assoc.Attr,
    'comm.Attr,'ctor.Attr,'format['__[''d.Sort,''ni.Sort,''d.Sort]],'id[
    ''none.OpDeclSet.Constant]]],'op_:_->_`[_`].[''__.Sort,'__[''QidList.Sort,
    ''QidList.Sort],''QidList.Sort,'__['assoc.Attr,'ctor.Attr,'id[
    ''nil.TypeList.Constant]]],'op_:_->_`[_`].[''__.Sort,'__[''RuleSet.Sort,
    ''RuleSet.Sort],''RuleSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,
    'format['__[''d.Sort,''ni.Sort,''d.Sort]],'id[''none.RuleSet.Constant]]],
    'op_:_->_`[_`].[''__.Sort,'__[''SubsortDeclSet.Sort,''SubsortDeclSet.Sort],
    ''SubsortDeclSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'format['__[
    ''d.Sort,''ni.Sort,''d.Sort]],'id[''none.SubsortDeclSet.Constant]]],
    'op_:_->_`[_`].[''__.Sort,'__[''TypeList.Sort,''TypeList.Sort],
    ''TypeList.Sort,'__['assoc.Attr,'id[''nil.TypeList.Constant]]],
    'op_:_->_`[_`].[''_`,_.Qid,'__[''CTermList.Sort,''TermList.Sort],
    ''CTermList.Sort,'__['assoc.Attr,'ctor.Attr,'gather['__[''e.Sort,
    ''E.Sort]],'prec['s_^120['0.Zero]]]],'op_:_->_`[_`].[''_`,_.Qid,'__[
    ''GroundTermList.Sort,''GroundTermList.Sort],''GroundTermList.Sort,'__[
    'assoc.Attr,'ctor.Attr,'gather['__[''e.Sort,''E.Sort]],'prec['s_^120[
    '0.Zero]]]],'op_:_->_`[_`].[''_`,_.Qid,'__[''RenamingSet.Sort,
    ''RenamingSet.Sort],''RenamingSet.Sort,'__['assoc.Attr,'comm.Attr,
    'ctor.Attr,'format['__[''d.Sort,''d.Sort,''ni.Sort,''d.Sort]],'prec['s_^43[
    '0.Zero]]]],'op_:_->_`[_`].[''_`,_.Qid,'__[''TermList.Sort,
    ''CTermList.Sort],''CTermList.Sort,'__['assoc.Attr,'ctor.Attr,'gather['__[
    ''e.Sort,''E.Sort]],'prec['s_^120['0.Zero]]]],'op_:_->_`[_`].[''_`,_.Qid,
    '__[''TermList.Sort,''TermList.Sort],''TermList.Sort,'__['assoc.Attr,
    'ctor.Attr,'gather['__[''e.Sort,''E.Sort]],'prec['s_^120['0.Zero]]]],
    'op_:_->_`[_`].[''_`[_`].Qid,'__[''Qid.Sort,''CTermList.Sort],
    ''Context.Sort,'ctor.Attr],'op_:_->_`[_`].[''_`[_`].Qid,'__[''Qid.Sort,
    ''GroundTermList.Sort],''GroundTerm.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''_`[_`].Qid,'__[''Qid.Sort,''TermList.Sort],''Term.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''_and_.Sort,'__[''Bool.Sort,''Bool.Sort],''Bool.Sort,'__[
    'assoc.Attr,'comm.Attr,'prec['s_^55['0.Zero]]]],'op_:_->_`[_`].[
    ''_divides_.Sort,'__[''NzNat.Sort,''Nat.Sort],''Bool.Sort,'__['prec['s_^51[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''divides.Sort],
    'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_implies_.Sort,'__[
    ''Bool.Sort,''Bool.Sort],''Bool.Sort,'__['gather['__[''e.Sort,''E.Sort]],
    'prec['s_^61['0.Zero]]]],'op_:_->_`[_`].[''_or_.Sort,'__[''Bool.Sort,
    ''Bool.Sort],''Bool.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^59[
    '0.Zero]]]],'op_:_->_`[_`].[''_quo_.Sort,'__[''Nat.Sort,''NzNat.Sort],
    ''Nat.Sort,'__['gather['__[''E.Sort,''e.Sort]],'prec['s_^31['0.Zero]],
    'special['__['id-hook[''NumberOpSymbol.Sort,''quo.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_rem_.Sort,'__[''Nat.Sort,''NzNat.Sort],''Nat.Sort,'__['gather['__[
    ''E.Sort,''e.Sort]],'prec['s_^31['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''rem.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_xor_.Sort,'__[''Bool.Sort,
    ''Bool.Sort],''Bool.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^57[
    '0.Zero]]]],'op_:_->_`[_`].[''_xor_.Sort,'__[''Nat.Sort,''Nat.Sort],
    ''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^55['0.Zero]],'special['__[
    'id-hook[''NumberOpSymbol.Sort,''xor.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_|_.Sort,'__[
    ''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^57[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''|.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_|_.Sort,'__[''NzNat.Sort,''Nat.Sort],''NzNat.Sort,'__['assoc.Attr,
    'comm.Attr,'prec['s_^57['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''|.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''`[_`].Kind,''Qid.Sort,
    ''Module.Sort,'none.AttrSet],'op_:_->_`[_`].[''`[`].Kind,'nil.TypeList,
    ''Context.Sort,'ctor.Attr],'op_:_->_`[_`].[''`{_`,_`,_`,_`}.Qid,'__[
    ''Term.Sort,''Type.Sort,''Substitution.Sort,''Context.Sort],
    ''Result4Tuple.Sort,'ctor.Attr],'op_:_->_`[_`].[''`{_`,_`,_`}.Qid,'__[
    ''Term.Sort,''Type.Sort,''Substitution.Sort],''ResultTriple.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''`{_`,_`}.Qid,'__[''Substitution.Sort,
    ''Context.Sort],''MatchPair.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''`{_`,_`}.Qid,'__[''Term.Sort,''Type.Sort],''ResultPair.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''ambiguity.Sort,'__[''ResultPair.Sort,''ResultPair.Sort],
    ''ResultPair?.Sort,'ctor.Attr],'op_:_->_`[_`].[''anyType.Sort,
    'nil.TypeList,''Type?.Sort,'ctor.Attr],'op_:_->_`[_`].[''ascii.Sort,
    ''Char.Sort,''Nat.Sort,'special['__['id-hook[''StringOpSymbol.Sort,
    ''ascii.Sort],'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,
    ''NzNat.Sort]]]],'op_:_->_`[_`].[''assoc.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''ceq_=_if_`[_`]..Qid,'__[''Term.Sort,
    ''Term.Sort,''EqCondition.Sort,''AttrSet.Sort],''Equation.Sort,'__[
    'ctor.Attr,'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,
    ''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[
    ''char.Sort,''`[FindResult`,NatList`,Bound`].Kind,''`[String`].Kind,
    'special['__['id-hook[''StringOpSymbol.Sort,''char.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]],'op_:_->_`[_`].[
    ''cmb_:_if_`[_`]..Qid,'__[''Term.Sort,''Sort.Sort,''EqCondition.Sort,
    ''AttrSet.Sort],''MembAx.Sort,'__['ctor.Attr,'format['__[''d.Sort,''d.Sort,
    ''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''comm.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''completeName.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaCompleteName.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''config.Sort,
    'nil.TypeList,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''crl_=>_if_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,''Condition.Sort,
    ''AttrSet.Sort],''Rule.Sort,'__['ctor.Attr,'format['__[''d.Sort,''d.Sort,
    ''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''ctor.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''downTerm.Sort,'__[''Term.Sort,
    ''Universal.Sort],''Universal.Sort,'__['poly['__['s_^2['0.Zero],'0.Zero]],
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaDownTerm.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]]],'op_:_->_`[_`].[''empty.Sort,
    'nil.TypeList,''KindSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''eq_=_`[_`]..Qid,
    '__[''Term.Sort,''Term.Sort,''AttrSet.Sort],''Equation.Sort,'__['ctor.Attr,
    'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[''extending_..Qid,
    ''ModuleExpression.Sort,''Import.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''failure.Sort,'nil.TypeList,''Result4Tuple?.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''failure.Sort,'nil.TypeList,''ResultTriple?.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''false.Sort,'nil.TypeList,''Bool.Sort,'__[
    'ctor.Attr,'special['id-hook[''SystemFalse.Sort,'nil.TypeList]]]],
    'op_:_->_`[_`].[''find.Sort,'__[''String.Sort,''String.Sort,''Nat.Sort],
    ''FindResult.Sort,'special['__['id-hook[''StringOpSymbol.Sort,''find.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],
    'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[
    ''notFoundTerm.Sort,''notFound.FindResult.Constant]]]],'op_:_->_`[_`].[
    ''fmod_is_sorts_.____endfm.Constant,'__[''Qid.Sort,''ImportList.Sort,
    ''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,''MembAxSet.Sort,
    ''EquationSet.Sort],''FModule.Sort,'__['ctor.Attr,'format['__[''d.Sort,
    ''d.Sort,''d.Sort,''n++i.Sort,''ni.Sort,''d.Sort,''d.Sort,''ni.Sort,
    ''ni.Sort,''ni.Sort,''ni.Sort,''n--i.Sort,''d.Sort]],'gather['__[''&.Sort,
    ''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort]]]],'op_:_->_`[_`].[
    ''format.Sort,''QidList.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''frozen.Sort,''NatList.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''gather.Sort,''QidList.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''gcd.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['assoc.Attr,
    'comm.Attr,'special['__['id-hook[''NumberOpSymbol.Sort,''gcd.Sort],
    'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],
    'op_:_->_`[_`].[''gcd.Sort,'__[''NzNat.Sort,''Nat.Sort],''NzNat.Sort,'__[
    'assoc.Attr,'comm.Attr,'special['__['id-hook[''NumberOpSymbol.Sort,
    ''gcd.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,
    ''NzNat.Sort]]]]],'op_:_->_`[_`].[''getContext.Sort,''MatchPair.Sort,
    ''Context.Sort,'none.AttrSet],'op_:_->_`[_`].[''getContext.Sort,
    ''Result4Tuple.Sort,''Context.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getEqs.Sort,''Module.Sort,''EquationSet.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getImports.Sort,''Module.Sort,''ImportList.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getKind.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaGetKind.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''getKinds.Sort,
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaGetKinds.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''getMbs.Sort,
    ''Module.Sort,''MembAxSet.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getName.Sort,''Constant.Sort,''Qid.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getName.Sort,''Module.Sort,''Qid.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getName.Sort,''Variable.Sort,''Qid.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getOps.Sort,''Module.Sort,''OpDeclSet.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getRls.Sort,''Module.Sort,''RuleSet.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getSorts.Sort,''Module.Sort,''SortSet.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getSubsorts.Sort,''Module.Sort,
    ''SubsortDeclSet.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getSubstitution.Sort,''MatchPair.Sort,''Substitution.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getSubstitution.Sort,''Result4Tuple.Sort,
    ''Substitution.Sort,'none.AttrSet],'op_:_->_`[_`].[''getSubstitution.Sort,
    ''ResultTriple.Sort,''Substitution.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getTerm.Sort,''Result4Tuple.Sort,''Term.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getTerm.Sort,''ResultPair.Sort,''Term.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getTerm.Sort,''ResultTriple.Sort,
    ''Term.Sort,'none.AttrSet],'op_:_->_`[_`].[''getType.Sort,''Constant.Sort,
    ''Type.Sort,'none.AttrSet],'op_:_->_`[_`].[''getType.Sort,
    ''Result4Tuple.Sort,''Type.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getType.Sort,''ResultPair.Sort,''Type.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getType.Sort,''ResultTriple.Sort,''Type.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getType.Sort,''Variable.Sort,''Type.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''glbSorts.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaGlbSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''id.Sort,
    ''Term.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''id-hook.Sort,'__[
    ''Qid.Sort,''QidList.Sort],''Hook.Sort,'__['ctor.Attr,'format['__[
    ''nssss.Sort,''d.Sort]]]],'op_:_->_`[_`].[''idem.Sort,'nil.TypeList,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''if_then_else_fi.Sort,'__[
    ''Bool.Sort,''Universal.Sort,''Universal.Sort],''Universal.Sort,'__['poly[
    '__['s_^2['0.Zero],'s_^3['0.Zero],'0.Zero]],'special['__['id-hook[
    ''BranchSymbol.Sort,'nil.TypeList],'term-hook[''1.Sort,
    ''true.Bool.Constant],'term-hook[''2.Sort,''false.Bool.Constant]]]]],
    'op_:_->_`[_`].[''including_..Qid,''ModuleExpression.Sort,''Import.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''iter.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''label.Sort,''Qid.Sort,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''label_to_.Sort,'__[''Qid.Sort,''Qid.Sort],
    ''Renaming.Sort,'ctor.Attr],'op_:_->_`[_`].[''lcm.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'special['__['id-hook[
    ''NumberOpSymbol.Sort,''lcm.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''lcm.Sort,'__[''NzNat.Sort,
    ''NzNat.Sort],''NzNat.Sort,'__['assoc.Attr,'comm.Attr,'special['__[
    'id-hook[''NumberOpSymbol.Sort,''lcm.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''leastSort.Sort,
    '__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaLeastSort.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''left-id.Sort,
    ''Term.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''length.Sort,
    ''String.Sort,''Nat.Sort,'special['__['id-hook[''StringOpSymbol.Sort,
    ''length.Sort],'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,
    ''NzNat.Sort]]]],'op_:_->_`[_`].[''lesserSorts.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaLesserSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''maximalSorts.Sort,
    '__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaMaximalSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''mb_:_`[_`]..Qid,
    '__[''Term.Sort,''Sort.Sort,''AttrSet.Sort],''MembAx.Sort,'__['ctor.Attr,
    'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[''memo.Sort,'nil.TypeList,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''metaApply.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Substitution?`].Kind,''`[FindResult`,NatList`,Bound`].Kind],
    ''`[ResultTriple?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaApply.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''metaFrewrite.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[ResultPair?`].Kind,'special['__[
    'id-hook[''MetaLevelOpSymbol.Sort,''metaFrewrite.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaMatch.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Condition`].Kind,''`[FindResult`,NatList`,Bound`].Kind],
    ''`[Substitution?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaMatch.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''metaParse.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[ResultPair?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaParse.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''metaPrettyPrint.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaPrettyPrint.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaReduce.Sort,
    '__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[ResultPair?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaReduce.Sort],'op-hook[''qidSymbol.Sort,''<Qids>.Sort,'nil.TypeList,
    ''Qid.Sort],'op-hook[''metaTermSymbol.Sort,''_`[_`].Qid,'__[''Qid.Sort,
    ''GroundTermList.Sort],''GroundTerm.Sort],'op-hook[''metaArgSymbol.Sort,
    ''_`,_.Qid,'__[''GroundTermList.Sort,''GroundTermList.Sort],
    ''GroundTermList.Sort],'op-hook[''assignmentSymbol.Sort,''_<-_.Sort,'__[
    ''Variable.Sort,''Term.Sort],''Assignment.Sort],'op-hook[
    ''emptySubstitutionSymbol.Sort,''none.Sort,'nil.TypeList,
    ''Substitution.Sort],'op-hook[''substitutionSymbol.Sort,''_;_.Sort,'__[
    ''Substitution.Sort,''Substitution.Sort],''Substitution.Sort],'op-hook[
    ''holeSymbol.Sort,''`[`].Kind,'nil.TypeList,''Context.Sort],'op-hook[
    ''protectingSymbol.Sort,''protecting_..Qid,''ModuleExpression.Sort,
    ''Import.Sort],'op-hook[''extendingSymbol.Sort,''extending_..Qid,
    ''ModuleExpression.Sort,''Import.Sort],'op-hook[''includingSymbol.Sort,
    ''including_..Qid,''ModuleExpression.Sort,''Import.Sort],'op-hook[
    ''nilImportListSymbol.Sort,''nil.Sort,'nil.TypeList,''ImportList.Sort],
    'op-hook[''importListSymbol.Sort,''__.Sort,'__[''ImportList.Sort,
    ''ImportList.Sort],''ImportList.Sort],'op-hook[''emptySortSetSymbol.Sort,
    ''none.Sort,'nil.TypeList,''SortSet.Sort],'op-hook[''sortSetSymbol.Sort,
    ''_;_.Sort,'__[''SortSet.Sort,''SortSet.Sort],''SortSet.Sort],'op-hook[
    ''subsortSymbol.Sort,''subsort_<_..Qid,'__[''Sort.Sort,''Sort.Sort],
    ''SubsortDecl.Sort],'op-hook[''emptySubsortDeclSetSymbol.Sort,''none.Sort,
    'nil.TypeList,''SubsortDeclSet.Sort],'op-hook[''subsortDeclSetSymbol.Sort,
    ''__.Sort,'__[''SubsortDeclSet.Sort,''SubsortDeclSet.Sort],
    ''SubsortDeclSet.Sort],'op-hook[''nilQidListSymbol.Sort,''nil.Sort,
    'nil.TypeList,''QidList.Sort],'op-hook[''qidListSymbol.Sort,''__.Sort,'__[
    ''QidList.Sort,''QidList.Sort],''QidList.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort],'op-hook[''natListSymbol.Sort,''__.Sort,
    '__[''NatList.Sort,''NatList.Sort],''NatList.Sort],'op-hook[
    ''unboundedSymbol.Sort,''unbounded.Sort,'nil.TypeList,''Bound.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],
    'op-hook[''sortRenamingSymbol.Sort,''sort_to_.Sort,'__[''Qid.Sort,
    ''Qid.Sort],''Renaming.Sort],'op-hook[''opRenamingSymbol.Sort,
    ''op_to_`[_`].Qid,'__[''Qid.Sort,''Qid.Sort,''AttrSet.Sort],
    ''Renaming.Sort],'op-hook[''opRenamingSymbol2.Sort,''op_:_->_to_`[_`].Qid,
    '__[''Qid.Sort,''TypeList.Sort,''Type.Sort,''Qid.Sort,''AttrSet.Sort],
    ''Renaming.Sort],'op-hook[''labelRenamingSymbol.Sort,''label_to_.Sort,'__[
    ''Qid.Sort,''Qid.Sort],''Renaming.Sort],'op-hook[''renamingSetSymbol.Sort,
    ''_`,_.Qid,'__[''RenamingSet.Sort,''RenamingSet.Sort],''RenamingSet.Sort],
    'op-hook[''sumSymbol.Sort,''_+_.Sort,'__[''ModuleExpression.Sort,
    ''ModuleExpression.Sort],''ModuleExpression.Sort],'op-hook[
    ''renamingSymbol.Sort,''_*`(_`).Sort,'__[''ModuleExpression.Sort,
    ''RenamingSet.Sort],''ModuleExpression.Sort],'op-hook[
    ''termHookSymbol.Sort,''term-hook.Sort,'__[''Qid.Sort,''Term.Sort],
    ''Hook.Sort],'op-hook[''hookListSymbol.Sort,''__.Sort,'__[''HookList.Sort,
    ''HookList.Sort],''HookList.Sort],'op-hook[''idHookSymbol.Sort,
    ''id-hook.Sort,'__[''Qid.Sort,''QidList.Sort],''Hook.Sort],'op-hook[
    ''opHookSymbol.Sort,''op-hook.Sort,'__[''Qid.Sort,''Qid.Sort,
    ''QidList.Sort,''Qid.Sort],''Hook.Sort],'op-hook[''assocSymbol.Sort,
    ''assoc.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''commSymbol.Sort,
    ''comm.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''idemSymbol.Sort,
    ''idem.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''iterSymbol.Sort,
    ''iter.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''idSymbol.Sort,''id.Sort,
    ''Term.Sort,''Attr.Sort],'op-hook[''leftIdSymbol.Sort,''left-id.Sort,
    ''Term.Sort,''Attr.Sort],'op-hook[''rightIdSymbol.Sort,''right-id.Sort,
    ''Term.Sort,''Attr.Sort],'op-hook[''stratSymbol.Sort,''strat.Sort,
    ''NatList.Sort,''Attr.Sort],'op-hook[''memoSymbol.Sort,''memo.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''precSymbol.Sort,''prec.Sort,
    ''Nat.Sort,''Attr.Sort],'op-hook[''gatherSymbol.Sort,''gather.Sort,
    ''QidList.Sort,''Attr.Sort],'op-hook[''formatSymbol.Sort,''format.Sort,
    ''QidList.Sort,''Attr.Sort],'op-hook[''ctorSymbol.Sort,''ctor.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''frozenSymbol.Sort,''frozen.Sort,
    ''NatList.Sort,''Attr.Sort],'op-hook[''polySymbol.Sort,''poly.Sort,
    ''NatList.Sort,''Attr.Sort],'op-hook[''configSymbol.Sort,''config.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''objectSymbol.Sort,''object.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''msgSymbol.Sort,''msg.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''specialSymbol.Sort,''special.Sort,
    ''HookList.Sort,''Attr.Sort],'op-hook[''labelSymbol.Sort,''label.Sort,
    ''Qid.Sort,''Attr.Sort],'op-hook[''metadataSymbol.Sort,''metadata.Sort,
    ''String.Sort,''Attr.Sort],'op-hook[''owiseSymbol.Sort,''owise.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''nonexecSymbol.Sort,''nonexec.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''emptyAttrSetSymbol.Sort,''none.Sort,
    'nil.TypeList,''AttrSet.Sort],'op-hook[''attrSetSymbol.Sort,''__.Sort,'__[
    ''AttrSet.Sort,''AttrSet.Sort],''AttrSet.Sort],'op-hook[
    ''opDeclSymbol.Sort,''op_:_->_`[_`]..Qid,'__[''Qid.Sort,''TypeList.Sort,
    ''Type.Sort,''AttrSet.Sort],''OpDecl.Sort],'op-hook[''opDeclSetSymbol.Sort,
    ''__.Sort,'__[''OpDeclSet.Sort,''OpDeclSet.Sort],''OpDeclSet.Sort],
    'op-hook[''emptyOpDeclSetSymbol.Sort,''none.Sort,'nil.TypeList,
    ''OpDeclSet.Sort],'op-hook[''noConditionSymbol.Sort,''nil.Sort,
    'nil.TypeList,''EqCondition.Sort],'op-hook[''equalityConditionSymbol.Sort,
    ''_=_.Sort,'__[''Term.Sort,''Term.Sort],''EqCondition.Sort],'op-hook[
    ''sortTestConditionSymbol.Sort,''_:_.Variable,'__[''Term.Sort,''Sort.Sort],
    ''EqCondition.Sort],'op-hook[''matchConditionSymbol.Sort,''_:=_.Variable,
    '__[''Term.Sort,''Term.Sort],''EqCondition.Sort],'op-hook[
    ''rewriteConditionSymbol.Sort,''_=>_.Sort,'__[''Term.Sort,''Term.Sort],
    ''Condition.Sort],'op-hook[''conjunctionSymbol.Sort,''_/\_.Sort,'__[
    ''EqCondition.Sort,''EqCondition.Sort],''EqCondition.Sort],'op-hook[
    ''mbSymbol.Sort,''mb_:_`[_`]..Qid,'__[''Term.Sort,''Sort.Sort,
    ''AttrSet.Sort],''MembAx.Sort],'op-hook[''cmbSymbol.Sort,
    ''cmb_:_if_`[_`]..Qid,'__[''Term.Sort,''Sort.Sort,''EqCondition.Sort,
    ''AttrSet.Sort],''MembAx.Sort],'op-hook[''emptyMembAxSetSymbol.Sort,
    ''none.Sort,'nil.TypeList,''MembAxSet.Sort],'op-hook[
    ''membAxSetSymbol.Sort,''__.Sort,'__[''MembAxSet.Sort,''MembAxSet.Sort],
    ''MembAxSet.Sort],'op-hook[''eqSymbol.Sort,''eq_=_`[_`]..Qid,'__[
    ''Term.Sort,''Term.Sort,''AttrSet.Sort],''Equation.Sort],'op-hook[
    ''ceqSymbol.Sort,''ceq_=_if_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,
    ''EqCondition.Sort,''AttrSet.Sort],''Equation.Sort],'op-hook[
    ''emptyEquationSetSymbol.Sort,''none.Sort,'nil.TypeList,
    ''EquationSet.Sort],'op-hook[''equationSetSymbol.Sort,''__.Sort,'__[
    ''EquationSet.Sort,''EquationSet.Sort],''EquationSet.Sort],'op-hook[
    ''rlSymbol.Sort,''rl_=>_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,
    ''AttrSet.Sort],''Rule.Sort],'op-hook[''crlSymbol.Sort,
    ''crl_=>_if_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,''Condition.Sort,
    ''AttrSet.Sort],''Rule.Sort],'op-hook[''emptyRuleSetSymbol.Sort,
    ''none.Sort,'nil.TypeList,''RuleSet.Sort],'op-hook[''ruleSetSymbol.Sort,
    ''__.Sort,'__[''RuleSet.Sort,''RuleSet.Sort],''RuleSet.Sort],'op-hook[
    ''fmodSymbol.Sort,''fmod_is_sorts_.____endfm.Constant,'__[''Qid.Sort,
    ''ImportList.Sort,''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,
    ''MembAxSet.Sort,''EquationSet.Sort],''FModule.Sort],'op-hook[
    ''modSymbol.Sort,''mod_is_sorts_._____endm.Constant,'__[''Qid.Sort,
    ''ImportList.Sort,''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,
    ''MembAxSet.Sort,''EquationSet.Sort,''RuleSet.Sort],''Module.Sort],
    'op-hook[''emptyKindSetSymbol.Sort,''empty.Sort,'nil.TypeList,
    ''KindSet.Sort],'op-hook[''kindSetSymbol.Sort,''_&_.Sort,'__[
    ''KindSet.Sort,''KindSet.Sort],''KindSet.Sort],'op-hook[
    ''anyTypeSymbol.Sort,''anyType.Sort,'nil.TypeList,''Type?.Sort],'op-hook[
    ''resultPairSymbol.Sort,''`{_`,_`}.Qid,'__[''Term.Sort,''Type.Sort],
    ''ResultPair.Sort],'op-hook[''resultTripleSymbol.Sort,''`{_`,_`,_`}.Qid,
    '__[''Term.Sort,''Type.Sort,''Substitution.Sort],''ResultTriple.Sort],
    'op-hook[''result4TupleSymbol.Sort,''`{_`,_`,_`,_`}.Qid,'__[''Term.Sort,
    ''Type.Sort,''Substitution.Sort,''Context.Sort],''Result4Tuple.Sort],
    'op-hook[''matchPairSymbol.Sort,''`{_`,_`}.Qid,'__[''Substitution.Sort,
    ''Context.Sort],''MatchPair.Sort],'op-hook[''noParseSymbol.Sort,
    ''noParse.Sort,''Nat.Sort,''ResultPair?.Sort],'op-hook[
    ''ambiguitySymbol.Sort,''ambiguity.Sort,'__[''ResultPair.Sort,
    ''ResultPair.Sort],''ResultPair?.Sort],'op-hook[''failure3Symbol.Sort,
    ''failure.Sort,'nil.TypeList,''ResultTriple?.Sort],'op-hook[
    ''failure4Symbol.Sort,''failure.Sort,'nil.TypeList,''Result4Tuple?.Sort],
    'op-hook[''noMatchSubstSymbol.Sort,''noMatch.Sort,'nil.TypeList,
    ''Substitution?.Sort],'op-hook[''noMatchPairSymbol.Sort,''noMatch.Sort,
    'nil.TypeList,''MatchPair?.Sort],'term-hook[''trueTerm.Sort,
    ''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]],'op_:_->_`[_`].[''metaRewrite.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[ResultPair?`].Kind,'special['__[
    'id-hook[''MetaLevelOpSymbol.Sort,''metaRewrite.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaSearch.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Condition`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[ResultTriple?`].Kind,'special[
    '__['id-hook[''MetaLevelOpSymbol.Sort,''metaSearch.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaXapply.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Substitution?`].Kind,''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[Result4Tuple?`].Kind,'special[
    '__['id-hook[''MetaLevelOpSymbol.Sort,''metaXapply.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaXmatch.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Condition`].Kind,''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[MatchPair?`].Kind,'special['__[
    'id-hook[''MetaLevelOpSymbol.Sort,''metaXmatch.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metadata.Sort,''String.Sort,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''minimalSorts.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaMinimalSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''modExp.Sort,'__[
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],
    ''`[FindResult`,NatList`,Bound`].Kind,'special['__['id-hook[
    ''NumberOpSymbol.Sort,''modExp.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]],'op_:_->_`[_`].[
    ''mod_is_sorts_._____endm.Constant,'__[''Qid.Sort,''ImportList.Sort,
    ''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,''MembAxSet.Sort,
    ''EquationSet.Sort,''RuleSet.Sort],''Module.Sort,'__['ctor.Attr,'format[
    '__[''d.Sort,''d.Sort,''d.Sort,''n++i.Sort,''ni.Sort,''d.Sort,''d.Sort,
    ''ni.Sort,''ni.Sort,''ni.Sort,''ni.Sort,''ni.Sort,''n--i.Sort,''d.Sort]],
    'gather['__[''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,
    ''&.Sort]]]],'op_:_->_`[_`].[''msg.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,''EqCondition.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,''ImportList.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,''QidList.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,''TypeList.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''noMatch.Sort,'nil.TypeList,''MatchPair?.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''noMatch.Sort,'nil.TypeList,
    ''Substitution?.Sort,'ctor.Attr],'op_:_->_`[_`].[''noParse.Sort,''Nat.Sort,
    ''ResultPair?.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''AttrSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''EquationSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''MembAxSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''OpDeclSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''RuleSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''SortSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''SubsortDeclSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,
    'nil.TypeList,''Substitution.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''nonexec.Sort,'nil.TypeList,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''notFound.Sort,'nil.TypeList,''FindResult.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''not_.Sort,''Bool.Sort,''Bool.Sort,'prec['s_^53[
    '0.Zero]]],'op_:_->_`[_`].[''object.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''op-hook.Sort,'__[''Qid.Sort,''Qid.Sort,
    ''QidList.Sort,''Qid.Sort],''Hook.Sort,'__['ctor.Attr,'format['__[
    ''nssss.Sort,''d.Sort]]]],'op_:_->_`[_`].[''op_:_->_`[_`]..Qid,'__[
    ''Qid.Sort,''TypeList.Sort,''Type.Sort,''AttrSet.Sort],''OpDecl.Sort,'__[
    'ctor.Attr,'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,
    ''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[
    ''op_:_->_to_`[_`].Qid,'__[''Qid.Sort,''TypeList.Sort,''Type.Sort,
    ''Qid.Sort,''AttrSet.Sort],''Renaming.Sort,'__['ctor.Attr,'format['__[
    ''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort,''d.Sort,''d.Sort]]]],'op_:_->_`[_`].[''op_to_`[_`].Qid,
    '__[''Qid.Sort,''Qid.Sort,''AttrSet.Sort],''Renaming.Sort,'__['ctor.Attr,
    'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''owise.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''poly.Sort,''NatList.Sort,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''prec.Sort,''Nat.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''protecting_..Qid,''ModuleExpression.Sort,''Import.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''qid.Sort,''`[String`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''QuotedIdentifierOpSymbol.Sort,''qid.Sort],'op-hook[
    ''quotedIdentifierSymbol.Sort,''<Qids>.Sort,'nil.TypeList,''Qid.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort]]]],'op_:_->_`[_`].[''rfind.Sort,'__[''String.Sort,
    ''String.Sort,''Nat.Sort],''FindResult.Sort,'special['__['id-hook[
    ''StringOpSymbol.Sort,''rfind.Sort],'op-hook[''stringSymbol.Sort,
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[''notFoundTerm.Sort,
    ''notFound.FindResult.Constant]]]],'op_:_->_`[_`].[''right-id.Sort,
    ''Term.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''rl_=>_`[_`]..Qid,'__[
    ''Term.Sort,''Term.Sort,''AttrSet.Sort],''Rule.Sort,'__['ctor.Attr,'format[
    '__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[''s_.Sort,''Nat.Sort,''NzNat.Sort,
    '__['ctor.Attr,'iter.Attr,'special['__['id-hook[''SuccSymbol.Sort,
    'nil.TypeList],'term-hook[''zeroTerm.Sort,''0.Zero.Constant]]]]],
    'op_:_->_`[_`].[''sameKind.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaSameKind.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''sd.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['comm.Attr,'special[
    '__['id-hook[''NumberOpSymbol.Sort,''sd.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''sortLeq.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaSortLeq.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''sort_to_.Sort,'__[''Qid.Sort,''Qid.Sort],''Renaming.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''special.Sort,''HookList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''strat.Sort,''NatList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''string.Sort,''Qid.Sort,''String.Sort,'special['__[
    'id-hook[''QuotedIdentifierOpSymbol.Sort,''string.Sort],'op-hook[
    ''quotedIdentifierSymbol.Sort,''<Qids>.Sort,'nil.TypeList,''Qid.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort]]]],'op_:_->_`[_`].[''subsort_<_..Qid,'__[''Sort.Sort,
    ''Sort.Sort],''SubsortDecl.Sort,'ctor.Attr],'op_:_->_`[_`].[''substr.Sort,
    '__[''String.Sort,''Nat.Sort,''Nat.Sort],''String.Sort,'special['__[
    'id-hook[''StringOpSymbol.Sort,''substr.Sort],'op-hook[''stringSymbol.Sort,
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]],'op_:_->_`[_`].[''term-hook.Sort,'__[
    ''Qid.Sort,''Term.Sort],''Hook.Sort,'__['ctor.Attr,'format['__[
    ''nssss.Sort,''d.Sort]]]],'op_:_->_`[_`].[''true.Sort,'nil.TypeList,
    ''Bool.Sort,'__['ctor.Attr,'special['id-hook[''SystemTrue.Sort,
    'nil.TypeList]]]],'op_:_->_`[_`].[''unbounded.Sort,'nil.TypeList,
    ''Bound.Sort,'none.AttrSet],'op_:_->_`[_`].[''upEqs.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[EquationSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpEqs.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upImports.Sort,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[ImportList`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaUpImports.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''upMbs.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[MembAxSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpMbs.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upModule.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[Module`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpModule.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upOpDecls.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[OpDeclSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpOpDecls.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upRls.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[RuleSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpRls.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upSorts.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaUpSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''upSubsortDecls.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[SubsortDeclSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpSubsortDecls.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''upTerm.Sort,''Universal.Sort,
    ''Term.Sort,'__['poly['s_['0.Zero]],'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpTerm.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]]],'op_:_->_`[_`].[''wellFormed.Sort,''Module.Sort,
    ''Bool.Sort,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaWellFormedModule.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,
    '__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''wellFormed.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaWellFormedTerm.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''wellFormed.Sort,'__[''`[Module`].Kind,''`[Substitution?`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaWellFormedSubstitution.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]]],'none.MembAxSet,'__['eq_=_`[_`].['_`[_`][
    ''_&_.Sort,'_`,_[''K:Kind.Variable,''K:Kind.Variable]],''K:Kind.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_;_.Sort,'_`,_[
    ''A:Assignment.Variable,''A:Assignment.Variable]],''A:Assignment.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_;_.Sort,'_`,_[''S:Sort.Variable,
    ''S:Sort.Variable]],''S:Sort.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''__.Sort,'_`,_[''A:Attr.Variable,''A:Attr.Variable]],''A:Attr.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''__.Sort,'_`,_[''E:Equation.Variable,
    ''E:Equation.Variable]],''E:Equation.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''__.Sort,'_`,_[''M:MembAx.Variable,''M:MembAx.Variable]],
    ''M:MembAx.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''__.Sort,'_`,_[
    ''O:OpDecl.Variable,''O:OpDecl.Variable]],''O:OpDecl.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''__.Sort,'_`,_[''R:Rule.Variable,
    ''R:Rule.Variable]],''R:Rule.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''__.Sort,'_`,_[''S:SubsortDecl.Variable,''S:SubsortDecl.Variable]],
    ''S:SubsortDecl.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,
    '_`,_[''A:Bool.Variable,''A:Bool.Variable]],''A:Bool.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    '_`[_`][''_xor_.Sort,'_`,_[''B:Bool.Variable,''C:Bool.Variable]]]],'_`[_`][
    ''_xor_.Sort,'_`,_['_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    ''B:Bool.Variable]],'_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    ''C:Bool.Variable]]]],'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,
    '_`,_[''false.Bool.Constant,''A:Bool.Variable]],''false.Bool.Constant,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,'_`,_[
    ''true.Bool.Constant,''A:Bool.Variable]],''A:Bool.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''_implies_.Sort,'_`,_[''A:Bool.Variable,
    ''B:Bool.Variable]],'_`[_`][''not_.Sort,'_`[_`][''_xor_.Sort,'_`,_[
    ''A:Bool.Variable,'_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    ''B:Bool.Variable]]]]],'none.AttrSet],'eq_=_`[_`].['_`[_`][''_or_.Sort,
    '_`,_[''A:Bool.Variable,''B:Bool.Variable]],'_`[_`][''_xor_.Sort,'_`,_[
    '_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,''B:Bool.Variable]],'_`[_`][
    ''_xor_.Sort,'_`,_[''A:Bool.Variable,''B:Bool.Variable]]]],'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''_xor_.Sort,'_`,_[''A:Bool.Variable,
    ''A:Bool.Variable]],''false.Bool.Constant,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''_xor_.Sort,'_`,_[''false.Bool.Constant,''A:Bool.Variable]],
    ''A:Bool.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''`[_`].Kind,
    ''Q:Qid.Variable],'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,'_`[_`][''protecting_..Qid,''Q:Qid.Variable],
    ''none.SortSet.Constant,''none.SubsortDeclSet.Constant,
    ''none.OpDeclSet.Constant,''none.MembAxSet.Constant,
    ''none.EquationSet.Constant,''none.RuleSet.Constant]],'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getContext.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,'_`,_[
    ''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable,
    ''C:Context.Variable]]],''C:Context.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getContext.Sort,'_`[_`][''`{_`,_`}.Qid,'_`,_[
    ''S:Substitution.Variable,''C:Context.Variable]]],''C:Context.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getEqs.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''EQS:EquationSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getEqs.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''EQS:EquationSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getImports.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''IL:ImportList.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getImports.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''IL:ImportList.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getMbs.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''MAS:MembAxSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getMbs.Sort,
    '_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''MAS:MembAxSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getName.Sort,''C:Constant.Variable],'_`[_`][
    ''qid.Sort,'_`[_`][''substr.Sort,'_`,_['_`[_`][''string.Sort,
    ''C:Constant.Variable],''0.Zero.Constant,'_`[_`][''rfind.Sort,'_`,_[
    '_`[_`][''string.Sort,''C:Constant.Variable],''".".Char.Constant,'_`[_`][
    ''length.Sort,'_`[_`][''string.Sort,''C:Constant.Variable]]]]]]],
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getName.Sort,''V:Variable.Variable],
    '_`[_`][''qid.Sort,'_`[_`][''substr.Sort,'_`,_['_`[_`][''string.Sort,
    ''V:Variable.Variable],''0.Zero.Constant,'_`[_`][''rfind.Sort,'_`,_[
    '_`[_`][''string.Sort,''V:Variable.Variable],''":".Char.Constant,'_`[_`][
    ''length.Sort,'_`[_`][''string.Sort,''V:Variable.Variable]]]]]]],
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getName.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],''Q:Qid.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getName.Sort,'_`[_`][
    ''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''Q:Qid.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getOps.Sort,'_`[_`][''fmod_is_sorts_.____endfm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''OPDS:OpDeclSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getOps.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''OPDS:OpDeclSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getRls.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''none.RuleSet.Constant,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getRls.Sort,
    '_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''RLS:RuleSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSorts.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''SS:SortSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getSorts.Sort,
    '_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''SS:SortSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSubsorts.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''SSDS:SubsortDeclSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getSubsorts.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''SSDS:SubsortDeclSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSubstitution.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,
    '_`,_[''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable,
    ''C:Context.Variable]]],''S:Substitution.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSubstitution.Sort,'_`[_`][''`{_`,_`,_`}.Qid,
    '_`,_[''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable]]],
    ''S:Substitution.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getSubstitution.Sort,'_`[_`][''`{_`,_`}.Qid,'_`,_[
    ''S:Substitution.Variable,''C:Context.Variable]]],
    ''S:Substitution.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getTerm.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,'_`,_[''T:Term.Variable,
    ''T:Type.Variable,''S:Substitution.Variable,''C:Context.Variable]]],
    ''T:Term.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getTerm.Sort,
    '_`[_`][''`{_`,_`,_`}.Qid,'_`,_[''T:Term.Variable,''T:Type.Variable,
    ''S:Substitution.Variable]]],''T:Term.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getTerm.Sort,'_`[_`][''`{_`,_`}.Qid,'_`,_[''T:Term.Variable,
    ''T:Type.Variable]]],''T:Term.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getType.Sort,''C:Constant.Variable],'_`[_`][''qid.Sort,'_`[_`][
    ''substr.Sort,'_`,_['_`[_`][''string.Sort,''C:Constant.Variable],'_`[_`][
    ''_+_.Sort,'_`,_['_`[_`][''s_.Sort,''0.Zero.Constant],'_`[_`][''rfind.Sort,
    '_`,_['_`[_`][''string.Sort,''C:Constant.Variable],''".".Char.Constant,
    '_`[_`][''length.Sort,'_`[_`][''string.Sort,''C:Constant.Variable]]]]]],
    '_`[_`][''length.Sort,'_`[_`][''string.Sort,''C:Constant.Variable]]]]],
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getType.Sort,''V:Variable.Variable],
    '_`[_`][''qid.Sort,'_`[_`][''substr.Sort,'_`,_['_`[_`][''string.Sort,
    ''V:Variable.Variable],'_`[_`][''_+_.Sort,'_`,_['_`[_`][''s_.Sort,
    ''0.Zero.Constant],'_`[_`][''rfind.Sort,'_`,_['_`[_`][''string.Sort,
    ''V:Variable.Variable],''":".Char.Constant,'_`[_`][''length.Sort,'_`[_`][
    ''string.Sort,''V:Variable.Variable]]]]]],'_`[_`][''length.Sort,'_`[_`][
    ''string.Sort,''V:Variable.Variable]]]]],'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getType.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,'_`,_[
    ''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable,
    ''C:Context.Variable]]],''T:Type.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getType.Sort,'_`[_`][''`{_`,_`,_`}.Qid,'_`,_[''T:Term.Variable,
    ''T:Type.Variable,''S:Substitution.Variable]]],''T:Type.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getType.Sort,'_`[_`][''`{_`,_`}.Qid,
    '_`,_[''T:Term.Variable,''T:Type.Variable]]],''T:Type.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''not_.Sort,''A:Bool.Variable],'_`[_`][
    ''_xor_.Sort,'_`,_[''true.Bool.Constant,''A:Bool.Variable]],
    'none.AttrSet]]],'FModule}
==========================================
reduce in META-LEVEL : upTerm(upModule('META-LEVEL, true)) .
rewrites: 2
result GroundTerm: 'fmod_is_sorts_.____endfm[''META-LEVEL.Sort,'nil.ImportList,
    '_;_[''Assignment.Sort,''Attr.Sort,''AttrSet.Sort,''Bool.Sort,''Bound.Sort,
    ''CTermList.Sort,''Char.Sort,''Condition.Sort,''Constant.Sort,
    ''Context.Sort,''EqCondition.Sort,''Equation.Sort,''EquationSet.Sort,
    ''FModule.Sort,''FindResult.Sort,''GTermList.Sort,''GroundTerm.Sort,
    ''GroundTermList.Sort,''Hook.Sort,''HookList.Sort,''Import.Sort,
    ''ImportList.Sort,''Kind.Sort,''KindSet.Sort,''MatchPair.Sort,
    ''MatchPair?.Sort,''MembAx.Sort,''MembAxSet.Sort,''Module.Sort,
    ''ModuleExpression.Sort,''Nat.Sort,''NatList.Sort,''NzNat.Sort,
    ''OpDecl.Sort,''OpDeclSet.Sort,''Qid.Sort,''QidList.Sort,''Renaming.Sort,
    ''RenamingSet.Sort,''Result4Tuple.Sort,''Result4Tuple?.Sort,
    ''ResultPair.Sort,''ResultPair?.Sort,''ResultTriple.Sort,
    ''ResultTriple?.Sort,''Rule.Sort,''RuleSet.Sort,''Sort.Sort,''SortSet.Sort,
    ''String.Sort,''SubsortDecl.Sort,''SubsortDeclSet.Sort,''Substitution.Sort,
    ''Substitution?.Sort,''Term.Sort,''TermList.Sort,''Type.Sort,''Type?.Sort,
    ''TypeList.Sort,''Variable.Sort,''Zero.Sort],'__['subsort_<_.[
    ''Assignment.Sort,''Substitution.Sort],'subsort_<_.[''Attr.Sort,
    ''AttrSet.Sort],'subsort_<_.[''CTermList.Sort,''GTermList.Sort],
    'subsort_<_.[''Char.Sort,''String.Sort],'subsort_<_.[''Constant.Sort,
    ''GroundTerm.Sort],'subsort_<_.[''Constant.Sort,''Qid.Sort],'subsort_<_.[
    ''Constant.Sort,''Term.Sort],'subsort_<_.[''Context.Sort,''CTermList.Sort],
    'subsort_<_.[''EqCondition.Sort,''Condition.Sort],'subsort_<_.[
    ''Equation.Sort,''EquationSet.Sort],'subsort_<_.[''FModule.Sort,
    ''Module.Sort],'subsort_<_.[''GroundTerm.Sort,''GroundTermList.Sort],
    'subsort_<_.[''GroundTerm.Sort,''Term.Sort],'subsort_<_.[
    ''GroundTermList.Sort,''TermList.Sort],'subsort_<_.[''Hook.Sort,
    ''HookList.Sort],'subsort_<_.[''Import.Sort,''ImportList.Sort],
    'subsort_<_.[''Kind.Sort,''KindSet.Sort],'subsort_<_.[''Kind.Sort,
    ''Type.Sort],'subsort_<_.[''MatchPair.Sort,''MatchPair?.Sort],'subsort_<_.[
    ''MembAx.Sort,''MembAxSet.Sort],'subsort_<_.[''Nat.Sort,''Bound.Sort],
    'subsort_<_.[''Nat.Sort,''FindResult.Sort],'subsort_<_.[''Nat.Sort,
    ''NatList.Sort],'subsort_<_.[''NzNat.Sort,''Nat.Sort],'subsort_<_.[
    ''OpDecl.Sort,''OpDeclSet.Sort],'subsort_<_.[''Qid.Sort,
    ''ModuleExpression.Sort],'subsort_<_.[''Qid.Sort,''QidList.Sort],
    'subsort_<_.[''Renaming.Sort,''RenamingSet.Sort],'subsort_<_.[
    ''Result4Tuple.Sort,''Result4Tuple?.Sort],'subsort_<_.[''ResultPair.Sort,
    ''ResultPair?.Sort],'subsort_<_.[''ResultTriple.Sort,''ResultTriple?.Sort],
    'subsort_<_.[''Rule.Sort,''RuleSet.Sort],'subsort_<_.[''Sort.Sort,
    ''SortSet.Sort],'subsort_<_.[''Sort.Sort,''Type.Sort],'subsort_<_.[
    ''SubsortDecl.Sort,''SubsortDeclSet.Sort],'subsort_<_.[''Substitution.Sort,
    ''Substitution?.Sort],'subsort_<_.[''Term.Sort,''TermList.Sort],
    'subsort_<_.[''TermList.Sort,''GTermList.Sort],'subsort_<_.[''Type.Sort,
    ''Qid.Sort],'subsort_<_.[''Type.Sort,''Type?.Sort],'subsort_<_.[
    ''Type.Sort,''TypeList.Sort],'subsort_<_.[''TypeList.Sort,''QidList.Sort],
    'subsort_<_.[''Variable.Sort,''Qid.Sort],'subsort_<_.[''Variable.Sort,
    ''Term.Sort],'subsort_<_.[''Zero.Sort,''Nat.Sort]],'__['op_:_->_`[_`].[
    ''0.Sort,'nil.TypeList,''Zero.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Constant.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''constantQid.Sort]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Kind.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''kindQid.Sort]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Qid.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,'nil.TypeList]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Sort.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''sortQid.Sort]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Variable.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''variableQid.Sort]]],'op_:_->_`[_`].[
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort,'special['id-hook[
    ''StringSymbol.Sort,'nil.TypeList]]],'op_:_->_`[_`].[''<Strings>.Sort,
    'nil.TypeList,''String.Sort,'special['id-hook[''StringSymbol.Sort,
    'nil.TypeList]]],'op_:_->_`[_`].[''_&_.Sort,'__[''KindSet.Sort,
    ''KindSet.Sort],''KindSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''empty.KindSet.Constant]]],'op_:_->_`[_`].[''_&_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^53['0.Zero]],
    'special['__['id-hook[''NumberOpSymbol.Sort,''&.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_*_.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['assoc.Attr,
    'comm.Attr,'prec['s_^31['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''*.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_*_.Sort,'__[''NzNat.Sort,
    ''NzNat.Sort],''NzNat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^31[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''*.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_*`(_`).Sort,'__[''ModuleExpression.Sort,''RenamingSet.Sort],
    ''ModuleExpression.Sort,'__['ctor.Attr,'prec['s_^39['0.Zero]],'format['__[
    ''d.Sort,''d.Sort,''s.Sort,''n++i.Sort,''n--i.Sort,''d.Sort]]]],
    'op_:_->_`[_`].[''_+_.Sort,'__[''ModuleExpression.Sort,
    ''ModuleExpression.Sort],''ModuleExpression.Sort,'__['assoc.Attr,
    'comm.Attr,'ctor.Attr]],'op_:_->_`[_`].[''_+_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^33['0.Zero]],
    'special['__['id-hook[''NumberOpSymbol.Sort,''+.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_+_.Sort,'__[''NzNat.Sort,''Nat.Sort],''NzNat.Sort,'__['assoc.Attr,
    'comm.Attr,'prec['s_^33['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''+.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_+_.Sort,'__[''String.Sort,
    ''String.Sort],''String.Sort,'__['prec['s_^33['0.Zero]],'gather['__[
    ''E.Sort,''e.Sort]],'special['__['id-hook[''StringOpSymbol.Sort,''+.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort]]]]],'op_:_->_`[_`].[''_/\_.Sort,'__[''Condition.Sort,
    ''Condition.Sort],''Condition.Sort,'__['assoc.Attr,'ctor.Attr,'id[
    ''nil.EqCondition.Constant],'prec['s_^73['0.Zero]]]],'op_:_->_`[_`].[
    ''_/\_.Sort,'__[''EqCondition.Sort,''EqCondition.Sort],''EqCondition.Sort,
    '__['assoc.Attr,'ctor.Attr,'id[''nil.EqCondition.Constant],'prec['s_^73[
    '0.Zero]]]],'op_:_->_`[_`].[''_:=_.Variable,'__[''Term.Sort,''Term.Sort],
    ''EqCondition.Sort,'__['ctor.Attr,'prec['s_^71['0.Zero]]]],'op_:_->_`[_`].[
    ''_:_.Variable,'__[''Term.Sort,''Sort.Sort],''EqCondition.Sort,'__[
    'ctor.Attr,'prec['s_^71['0.Zero]]]],'op_:_->_`[_`].[''_;_.Sort,'__[
    ''SortSet.Sort,''SortSet.Sort],''SortSet.Sort,'__['assoc.Attr,'comm.Attr,
    'ctor.Attr,'id[''none.SortSet.Constant]]],'op_:_->_`[_`].[''_;_.Sort,'__[
    ''Substitution.Sort,''Substitution.Sort],''Substitution.Sort,'__[
    'assoc.Attr,'comm.Attr,'ctor.Attr,'id[''none.Substitution.Constant],'prec[
    's_^65['0.Zero]]]],'op_:_->_`[_`].[''_<-_.Sort,'__[''Variable.Sort,
    ''Term.Sort],''Assignment.Sort,'__['ctor.Attr,'prec['s_^63['0.Zero]],
    'format['__[''nt.Sort,''d.Sort,''d.Sort,''d.Sort]]]],'op_:_->_`[_`].[
    ''_<<_.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['prec['s_^35[
    '0.Zero]],'gather['__[''E.Sort,''e.Sort]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''<<.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_<=_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''<=.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort],'term-hook[''trueTerm.Sort,''true.Bool.Constant],
    'term-hook[''falseTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[
    ''_<=_.Sort,'__[''String.Sort,''String.Sort],''Bool.Sort,'__['prec['s_^37[
    '0.Zero]],'special['__['id-hook[''StringOpSymbol.Sort,''<=.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_<_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''<.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort],'term-hook[''trueTerm.Sort,''true.Bool.Constant],
    'term-hook[''falseTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[
    ''_<_.Sort,'__[''String.Sort,''String.Sort],''Bool.Sort,'__['prec['s_^37[
    '0.Zero]],'special['__['id-hook[''StringOpSymbol.Sort,''<.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_=/=_.Sort,'__[
    ''Universal.Sort,''Universal.Sort],''Bool.Sort,'__['prec['s_^51['0.Zero]],
    'poly['__['s_['0.Zero],'s_^2['0.Zero]]],'special['__['id-hook[
    ''EqualitySymbol.Sort,'nil.TypeList],'term-hook[''equalTerm.Sort,
    ''false.Bool.Constant],'term-hook[''notEqualTerm.Sort,
    ''true.Bool.Constant]]]]],'op_:_->_`[_`].[''_==_.Sort,'__[''Universal.Sort,
    ''Universal.Sort],''Bool.Sort,'__['prec['s_^51['0.Zero]],'poly['__['s_[
    '0.Zero],'s_^2['0.Zero]]],'special['__['id-hook[''EqualitySymbol.Sort,
    'nil.TypeList],'term-hook[''equalTerm.Sort,''true.Bool.Constant],
    'term-hook[''notEqualTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[
    ''_=>_.Sort,'__[''Term.Sort,''Term.Sort],''Condition.Sort,'__['ctor.Attr,
    'prec['s_^71['0.Zero]]]],'op_:_->_`[_`].[''_=_.Sort,'__[''Term.Sort,
    ''Term.Sort],''EqCondition.Sort,'__['ctor.Attr,'prec['s_^71['0.Zero]]]],
    'op_:_->_`[_`].[''_>=_.Sort,'__[''Nat.Sort,''Nat.Sort],''Bool.Sort,'__[
    'prec['s_^37['0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,
    ''>=.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],
    'term-hook[''trueTerm.Sort,''true.Bool.Constant],'term-hook[
    ''falseTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_>=_.Sort,
    '__[''String.Sort,''String.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],
    'special['__['id-hook[''StringOpSymbol.Sort,''>=.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_>>_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['prec['s_^35['0.Zero]],'gather['__[''E.Sort,
    ''e.Sort]],'special['__['id-hook[''NumberOpSymbol.Sort,''>>.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_>_.Sort,'__[''Nat.Sort,''Nat.Sort],''Bool.Sort,'__['prec['s_^37[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''>.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_>_.Sort,'__[''String.Sort,
    ''String.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],'special['__[
    'id-hook[''StringOpSymbol.Sort,''>.Sort],'op-hook[''stringSymbol.Sort,
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[''trueTerm.Sort,
    ''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_^_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['prec['s_^29['0.Zero]],'gather['__[''E.Sort,
    ''e.Sort]],'special['__['id-hook[''NumberOpSymbol.Sort,''^.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_^_.Sort,'__[''NzNat.Sort,''Nat.Sort],''NzNat.Sort,'__['prec['s_^29[
    '0.Zero]],'gather['__[''E.Sort,''e.Sort]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''^.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''__.Sort,'__[''AttrSet.Sort,
    ''AttrSet.Sort],''AttrSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''none.AttrSet.Constant]]],'op_:_->_`[_`].[''__.Sort,'__[
    ''EquationSet.Sort,''EquationSet.Sort],''EquationSet.Sort,'__['assoc.Attr,
    'comm.Attr,'ctor.Attr,'id[''none.EquationSet.Constant],'format['__[
    ''d.Sort,''ni.Sort,''d.Sort]]]],'op_:_->_`[_`].[''__.Sort,'__[
    ''HookList.Sort,''HookList.Sort],''HookList.Sort,'__['assoc.Attr,
    'ctor.Attr]],'op_:_->_`[_`].[''__.Sort,'__[''ImportList.Sort,
    ''ImportList.Sort],''ImportList.Sort,'__['assoc.Attr,'ctor.Attr,'id[
    ''nil.ImportList.Constant],'format['__[''d.Sort,''ni.Sort,''d.Sort]]]],
    'op_:_->_`[_`].[''__.Sort,'__[''MembAxSet.Sort,''MembAxSet.Sort],
    ''MembAxSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''none.MembAxSet.Constant],'format['__[''d.Sort,''ni.Sort,''d.Sort]]]],
    'op_:_->_`[_`].[''__.Sort,'__[''NatList.Sort,''NatList.Sort],
    ''NatList.Sort,'__['assoc.Attr,'ctor.Attr]],'op_:_->_`[_`].[''__.Sort,'__[
    ''OpDeclSet.Sort,''OpDeclSet.Sort],''OpDeclSet.Sort,'__['assoc.Attr,
    'comm.Attr,'ctor.Attr,'id[''none.OpDeclSet.Constant],'format['__[''d.Sort,
    ''ni.Sort,''d.Sort]]]],'op_:_->_`[_`].[''__.Sort,'__[''QidList.Sort,
    ''QidList.Sort],''QidList.Sort,'__['assoc.Attr,'ctor.Attr,'id[
    ''nil.TypeList.Constant]]],'op_:_->_`[_`].[''__.Sort,'__[''RuleSet.Sort,
    ''RuleSet.Sort],''RuleSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''none.RuleSet.Constant],'format['__[''d.Sort,''ni.Sort,''d.Sort]]]],
    'op_:_->_`[_`].[''__.Sort,'__[''SubsortDeclSet.Sort,''SubsortDeclSet.Sort],
    ''SubsortDeclSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''none.SubsortDeclSet.Constant],'format['__[''d.Sort,''ni.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''__.Sort,'__[''TypeList.Sort,
    ''TypeList.Sort],''TypeList.Sort,'__['assoc.Attr,'id[
    ''nil.TypeList.Constant]]],'op_:_->_`[_`].[''_`,_.Qid,'__[''CTermList.Sort,
    ''TermList.Sort],''CTermList.Sort,'__['assoc.Attr,'ctor.Attr,'prec['s_^120[
    '0.Zero]],'gather['__[''e.Sort,''E.Sort]]]],'op_:_->_`[_`].[''_`,_.Qid,'__[
    ''GroundTermList.Sort,''GroundTermList.Sort],''GroundTermList.Sort,'__[
    'assoc.Attr,'ctor.Attr,'prec['s_^120['0.Zero]],'gather['__[''e.Sort,
    ''E.Sort]]]],'op_:_->_`[_`].[''_`,_.Qid,'__[''RenamingSet.Sort,
    ''RenamingSet.Sort],''RenamingSet.Sort,'__['assoc.Attr,'comm.Attr,
    'ctor.Attr,'prec['s_^43['0.Zero]],'format['__[''d.Sort,''d.Sort,''ni.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''_`,_.Qid,'__[''TermList.Sort,
    ''CTermList.Sort],''CTermList.Sort,'__['assoc.Attr,'ctor.Attr,'prec[
    's_^120['0.Zero]],'gather['__[''e.Sort,''E.Sort]]]],'op_:_->_`[_`].[
    ''_`,_.Qid,'__[''TermList.Sort,''TermList.Sort],''TermList.Sort,'__[
    'assoc.Attr,'ctor.Attr,'prec['s_^120['0.Zero]],'gather['__[''e.Sort,
    ''E.Sort]]]],'op_:_->_`[_`].[''_`[_`].Qid,'__[''Qid.Sort,''CTermList.Sort],
    ''Context.Sort,'ctor.Attr],'op_:_->_`[_`].[''_`[_`].Qid,'__[''Qid.Sort,
    ''GroundTermList.Sort],''GroundTerm.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''_`[_`].Qid,'__[''Qid.Sort,''TermList.Sort],''Term.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''_and_.Sort,'__[''Bool.Sort,''Bool.Sort],''Bool.Sort,'__[
    'assoc.Attr,'comm.Attr,'prec['s_^55['0.Zero]]]],'op_:_->_`[_`].[
    ''_divides_.Sort,'__[''NzNat.Sort,''Nat.Sort],''Bool.Sort,'__['prec['s_^51[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''divides.Sort],
    'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_implies_.Sort,'__[
    ''Bool.Sort,''Bool.Sort],''Bool.Sort,'__['prec['s_^61['0.Zero]],'gather[
    '__[''e.Sort,''E.Sort]]]],'op_:_->_`[_`].[''_or_.Sort,'__[''Bool.Sort,
    ''Bool.Sort],''Bool.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^59[
    '0.Zero]]]],'op_:_->_`[_`].[''_quo_.Sort,'__[''Nat.Sort,''NzNat.Sort],
    ''Nat.Sort,'__['prec['s_^31['0.Zero]],'gather['__[''E.Sort,''e.Sort]],
    'special['__['id-hook[''NumberOpSymbol.Sort,''quo.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_rem_.Sort,'__[''Nat.Sort,''NzNat.Sort],''Nat.Sort,'__['prec['s_^31[
    '0.Zero]],'gather['__[''E.Sort,''e.Sort]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''rem.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_xor_.Sort,'__[''Bool.Sort,
    ''Bool.Sort],''Bool.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^57[
    '0.Zero]]]],'op_:_->_`[_`].[''_xor_.Sort,'__[''Nat.Sort,''Nat.Sort],
    ''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^55['0.Zero]],'special['__[
    'id-hook[''NumberOpSymbol.Sort,''xor.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_|_.Sort,'__[
    ''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^57[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''|.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_|_.Sort,'__[''NzNat.Sort,''Nat.Sort],''NzNat.Sort,'__['assoc.Attr,
    'comm.Attr,'prec['s_^57['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''|.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''`[_`].Kind,''Qid.Sort,
    ''Module.Sort,'none.AttrSet],'op_:_->_`[_`].[''`[`].Kind,'nil.TypeList,
    ''Context.Sort,'ctor.Attr],'op_:_->_`[_`].[''`{_`,_`,_`,_`}.Qid,'__[
    ''Term.Sort,''Type.Sort,''Substitution.Sort,''Context.Sort],
    ''Result4Tuple.Sort,'ctor.Attr],'op_:_->_`[_`].[''`{_`,_`,_`}.Qid,'__[
    ''Term.Sort,''Type.Sort,''Substitution.Sort],''ResultTriple.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''`{_`,_`}.Qid,'__[''Substitution.Sort,
    ''Context.Sort],''MatchPair.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''`{_`,_`}.Qid,'__[''Term.Sort,''Type.Sort],''ResultPair.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''ambiguity.Sort,'__[''ResultPair.Sort,''ResultPair.Sort],
    ''ResultPair?.Sort,'ctor.Attr],'op_:_->_`[_`].[''anyType.Sort,
    'nil.TypeList,''Type?.Sort,'ctor.Attr],'op_:_->_`[_`].[''ascii.Sort,
    ''Char.Sort,''Nat.Sort,'special['__['id-hook[''StringOpSymbol.Sort,
    ''ascii.Sort],'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,
    ''NzNat.Sort]]]],'op_:_->_`[_`].[''assoc.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''ceq_=_if_`[_`]..Qid,'__[''Term.Sort,
    ''Term.Sort,''EqCondition.Sort,''AttrSet.Sort],''Equation.Sort,'__[
    'ctor.Attr,'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,
    ''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[
    ''char.Sort,''`[FindResult`,NatList`,Bound`].Kind,''`[String`].Kind,
    'special['__['id-hook[''StringOpSymbol.Sort,''char.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]],'op_:_->_`[_`].[
    ''cmb_:_if_`[_`]..Qid,'__[''Term.Sort,''Sort.Sort,''EqCondition.Sort,
    ''AttrSet.Sort],''MembAx.Sort,'__['ctor.Attr,'format['__[''d.Sort,''d.Sort,
    ''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''comm.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''completeName.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaCompleteName.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''config.Sort,
    'nil.TypeList,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''crl_=>_if_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,''Condition.Sort,
    ''AttrSet.Sort],''Rule.Sort,'__['ctor.Attr,'format['__[''d.Sort,''d.Sort,
    ''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''ctor.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''downTerm.Sort,'__[''Term.Sort,
    ''Universal.Sort],''Universal.Sort,'__['poly['__['s_^2['0.Zero],'0.Zero]],
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaDownTerm.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]]],'op_:_->_`[_`].[''empty.Sort,
    'nil.TypeList,''KindSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''eq_=_`[_`]..Qid,
    '__[''Term.Sort,''Term.Sort,''AttrSet.Sort],''Equation.Sort,'__['ctor.Attr,
    'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[''extending_..Qid,
    ''ModuleExpression.Sort,''Import.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''failure.Sort,'nil.TypeList,''Result4Tuple?.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''failure.Sort,'nil.TypeList,''ResultTriple?.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''false.Sort,'nil.TypeList,''Bool.Sort,'__[
    'ctor.Attr,'special['id-hook[''SystemFalse.Sort,'nil.TypeList]]]],
    'op_:_->_`[_`].[''find.Sort,'__[''String.Sort,''String.Sort,''Nat.Sort],
    ''FindResult.Sort,'special['__['id-hook[''StringOpSymbol.Sort,''find.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],
    'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[
    ''notFoundTerm.Sort,''notFound.FindResult.Constant]]]],'op_:_->_`[_`].[
    ''fmod_is_sorts_.____endfm.Constant,'__[''Qid.Sort,''ImportList.Sort,
    ''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,''MembAxSet.Sort,
    ''EquationSet.Sort],''FModule.Sort,'__['ctor.Attr,'gather['__[''&.Sort,
    ''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort]],'format['__[
    ''d.Sort,''d.Sort,''d.Sort,''n++i.Sort,''ni.Sort,''d.Sort,''d.Sort,
    ''ni.Sort,''ni.Sort,''ni.Sort,''ni.Sort,''n--i.Sort,''d.Sort]]]],
    'op_:_->_`[_`].[''format.Sort,''QidList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''frozen.Sort,''NatList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''gather.Sort,''QidList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''gcd.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__[
    'assoc.Attr,'comm.Attr,'special['__['id-hook[''NumberOpSymbol.Sort,
    ''gcd.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,
    ''NzNat.Sort]]]]],'op_:_->_`[_`].[''gcd.Sort,'__[''NzNat.Sort,''Nat.Sort],
    ''NzNat.Sort,'__['assoc.Attr,'comm.Attr,'special['__['id-hook[
    ''NumberOpSymbol.Sort,''gcd.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''getContext.Sort,
    ''MatchPair.Sort,''Context.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getContext.Sort,''Result4Tuple.Sort,''Context.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getEqs.Sort,''Module.Sort,''EquationSet.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getImports.Sort,''Module.Sort,
    ''ImportList.Sort,'none.AttrSet],'op_:_->_`[_`].[''getKind.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaGetKind.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''getKinds.Sort,
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaGetKinds.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''getMbs.Sort,
    ''Module.Sort,''MembAxSet.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getName.Sort,''Constant.Sort,''Qid.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getName.Sort,''Module.Sort,''Qid.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getName.Sort,''Variable.Sort,''Qid.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getOps.Sort,''Module.Sort,''OpDeclSet.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getRls.Sort,''Module.Sort,''RuleSet.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getSorts.Sort,''Module.Sort,''SortSet.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getSubsorts.Sort,''Module.Sort,
    ''SubsortDeclSet.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getSubstitution.Sort,''MatchPair.Sort,''Substitution.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getSubstitution.Sort,''Result4Tuple.Sort,
    ''Substitution.Sort,'none.AttrSet],'op_:_->_`[_`].[''getSubstitution.Sort,
    ''ResultTriple.Sort,''Substitution.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getTerm.Sort,''Result4Tuple.Sort,''Term.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getTerm.Sort,''ResultPair.Sort,''Term.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getTerm.Sort,''ResultTriple.Sort,
    ''Term.Sort,'none.AttrSet],'op_:_->_`[_`].[''getType.Sort,''Constant.Sort,
    ''Type.Sort,'none.AttrSet],'op_:_->_`[_`].[''getType.Sort,
    ''Result4Tuple.Sort,''Type.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getType.Sort,''ResultPair.Sort,''Type.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getType.Sort,''ResultTriple.Sort,''Type.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getType.Sort,''Variable.Sort,''Type.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''glbSorts.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaGlbSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''id.Sort,
    ''Term.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''id-hook.Sort,'__[
    ''Qid.Sort,''QidList.Sort],''Hook.Sort,'__['ctor.Attr,'format['__[
    ''nssss.Sort,''d.Sort]]]],'op_:_->_`[_`].[''idem.Sort,'nil.TypeList,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''if_then_else_fi.Sort,'__[
    ''Bool.Sort,''Universal.Sort,''Universal.Sort],''Universal.Sort,'__['poly[
    '__['s_^2['0.Zero],'s_^3['0.Zero],'0.Zero]],'special['__['id-hook[
    ''BranchSymbol.Sort,'nil.TypeList],'term-hook[''1.Sort,
    ''true.Bool.Constant],'term-hook[''2.Sort,''false.Bool.Constant]]]]],
    'op_:_->_`[_`].[''including_..Qid,''ModuleExpression.Sort,''Import.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''iter.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''label.Sort,''Qid.Sort,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''label_to_.Sort,'__[''Qid.Sort,''Qid.Sort],
    ''Renaming.Sort,'ctor.Attr],'op_:_->_`[_`].[''lcm.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'special['__['id-hook[
    ''NumberOpSymbol.Sort,''lcm.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''lcm.Sort,'__[''NzNat.Sort,
    ''NzNat.Sort],''NzNat.Sort,'__['assoc.Attr,'comm.Attr,'special['__[
    'id-hook[''NumberOpSymbol.Sort,''lcm.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''leastSort.Sort,
    '__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaLeastSort.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''left-id.Sort,
    ''Term.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''length.Sort,
    ''String.Sort,''Nat.Sort,'special['__['id-hook[''StringOpSymbol.Sort,
    ''length.Sort],'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,
    ''NzNat.Sort]]]],'op_:_->_`[_`].[''lesserSorts.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaLesserSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''maximalSorts.Sort,
    '__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaMaximalSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''mb_:_`[_`]..Qid,
    '__[''Term.Sort,''Sort.Sort,''AttrSet.Sort],''MembAx.Sort,'__['ctor.Attr,
    'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[''memo.Sort,'nil.TypeList,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''metaApply.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Substitution?`].Kind,''`[FindResult`,NatList`,Bound`].Kind],
    ''`[ResultTriple?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaApply.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''metaFrewrite.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[ResultPair?`].Kind,'special['__[
    'id-hook[''MetaLevelOpSymbol.Sort,''metaFrewrite.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaMatch.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Condition`].Kind,''`[FindResult`,NatList`,Bound`].Kind],
    ''`[Substitution?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaMatch.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''metaParse.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[ResultPair?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaParse.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''metaPrettyPrint.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaPrettyPrint.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaReduce.Sort,
    '__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[ResultPair?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaReduce.Sort],'op-hook[''qidSymbol.Sort,''<Qids>.Sort,'nil.TypeList,
    ''Qid.Sort],'op-hook[''metaTermSymbol.Sort,''_`[_`].Qid,'__[''Qid.Sort,
    ''GroundTermList.Sort],''GroundTerm.Sort],'op-hook[''metaArgSymbol.Sort,
    ''_`,_.Qid,'__[''GroundTermList.Sort,''GroundTermList.Sort],
    ''GroundTermList.Sort],'op-hook[''assignmentSymbol.Sort,''_<-_.Sort,'__[
    ''Variable.Sort,''Term.Sort],''Assignment.Sort],'op-hook[
    ''emptySubstitutionSymbol.Sort,''none.Sort,'nil.TypeList,
    ''Substitution.Sort],'op-hook[''substitutionSymbol.Sort,''_;_.Sort,'__[
    ''Substitution.Sort,''Substitution.Sort],''Substitution.Sort],'op-hook[
    ''holeSymbol.Sort,''`[`].Kind,'nil.TypeList,''Context.Sort],'op-hook[
    ''protectingSymbol.Sort,''protecting_..Qid,''ModuleExpression.Sort,
    ''Import.Sort],'op-hook[''extendingSymbol.Sort,''extending_..Qid,
    ''ModuleExpression.Sort,''Import.Sort],'op-hook[''includingSymbol.Sort,
    ''including_..Qid,''ModuleExpression.Sort,''Import.Sort],'op-hook[
    ''nilImportListSymbol.Sort,''nil.Sort,'nil.TypeList,''ImportList.Sort],
    'op-hook[''importListSymbol.Sort,''__.Sort,'__[''ImportList.Sort,
    ''ImportList.Sort],''ImportList.Sort],'op-hook[''emptySortSetSymbol.Sort,
    ''none.Sort,'nil.TypeList,''SortSet.Sort],'op-hook[''sortSetSymbol.Sort,
    ''_;_.Sort,'__[''SortSet.Sort,''SortSet.Sort],''SortSet.Sort],'op-hook[
    ''subsortSymbol.Sort,''subsort_<_..Qid,'__[''Sort.Sort,''Sort.Sort],
    ''SubsortDecl.Sort],'op-hook[''emptySubsortDeclSetSymbol.Sort,''none.Sort,
    'nil.TypeList,''SubsortDeclSet.Sort],'op-hook[''subsortDeclSetSymbol.Sort,
    ''__.Sort,'__[''SubsortDeclSet.Sort,''SubsortDeclSet.Sort],
    ''SubsortDeclSet.Sort],'op-hook[''nilQidListSymbol.Sort,''nil.Sort,
    'nil.TypeList,''QidList.Sort],'op-hook[''qidListSymbol.Sort,''__.Sort,'__[
    ''QidList.Sort,''QidList.Sort],''QidList.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort],'op-hook[''natListSymbol.Sort,''__.Sort,
    '__[''NatList.Sort,''NatList.Sort],''NatList.Sort],'op-hook[
    ''unboundedSymbol.Sort,''unbounded.Sort,'nil.TypeList,''Bound.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],
    'op-hook[''sortRenamingSymbol.Sort,''sort_to_.Sort,'__[''Qid.Sort,
    ''Qid.Sort],''Renaming.Sort],'op-hook[''opRenamingSymbol.Sort,
    ''op_to_`[_`].Qid,'__[''Qid.Sort,''Qid.Sort,''AttrSet.Sort],
    ''Renaming.Sort],'op-hook[''opRenamingSymbol2.Sort,''op_:_->_to_`[_`].Qid,
    '__[''Qid.Sort,''TypeList.Sort,''Type.Sort,''Qid.Sort,''AttrSet.Sort],
    ''Renaming.Sort],'op-hook[''labelRenamingSymbol.Sort,''label_to_.Sort,'__[
    ''Qid.Sort,''Qid.Sort],''Renaming.Sort],'op-hook[''renamingSetSymbol.Sort,
    ''_`,_.Qid,'__[''RenamingSet.Sort,''RenamingSet.Sort],''RenamingSet.Sort],
    'op-hook[''sumSymbol.Sort,''_+_.Sort,'__[''ModuleExpression.Sort,
    ''ModuleExpression.Sort],''ModuleExpression.Sort],'op-hook[
    ''renamingSymbol.Sort,''_*`(_`).Sort,'__[''ModuleExpression.Sort,
    ''RenamingSet.Sort],''ModuleExpression.Sort],'op-hook[
    ''termHookSymbol.Sort,''term-hook.Sort,'__[''Qid.Sort,''Term.Sort],
    ''Hook.Sort],'op-hook[''hookListSymbol.Sort,''__.Sort,'__[''HookList.Sort,
    ''HookList.Sort],''HookList.Sort],'op-hook[''idHookSymbol.Sort,
    ''id-hook.Sort,'__[''Qid.Sort,''QidList.Sort],''Hook.Sort],'op-hook[
    ''opHookSymbol.Sort,''op-hook.Sort,'__[''Qid.Sort,''Qid.Sort,
    ''QidList.Sort,''Qid.Sort],''Hook.Sort],'op-hook[''assocSymbol.Sort,
    ''assoc.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''commSymbol.Sort,
    ''comm.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''idemSymbol.Sort,
    ''idem.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''iterSymbol.Sort,
    ''iter.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''idSymbol.Sort,''id.Sort,
    ''Term.Sort,''Attr.Sort],'op-hook[''leftIdSymbol.Sort,''left-id.Sort,
    ''Term.Sort,''Attr.Sort],'op-hook[''rightIdSymbol.Sort,''right-id.Sort,
    ''Term.Sort,''Attr.Sort],'op-hook[''stratSymbol.Sort,''strat.Sort,
    ''NatList.Sort,''Attr.Sort],'op-hook[''memoSymbol.Sort,''memo.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''precSymbol.Sort,''prec.Sort,
    ''Nat.Sort,''Attr.Sort],'op-hook[''gatherSymbol.Sort,''gather.Sort,
    ''QidList.Sort,''Attr.Sort],'op-hook[''formatSymbol.Sort,''format.Sort,
    ''QidList.Sort,''Attr.Sort],'op-hook[''ctorSymbol.Sort,''ctor.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''frozenSymbol.Sort,''frozen.Sort,
    ''NatList.Sort,''Attr.Sort],'op-hook[''polySymbol.Sort,''poly.Sort,
    ''NatList.Sort,''Attr.Sort],'op-hook[''configSymbol.Sort,''config.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''objectSymbol.Sort,''object.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''msgSymbol.Sort,''msg.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''specialSymbol.Sort,''special.Sort,
    ''HookList.Sort,''Attr.Sort],'op-hook[''labelSymbol.Sort,''label.Sort,
    ''Qid.Sort,''Attr.Sort],'op-hook[''metadataSymbol.Sort,''metadata.Sort,
    ''String.Sort,''Attr.Sort],'op-hook[''owiseSymbol.Sort,''owise.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''nonexecSymbol.Sort,''nonexec.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''emptyAttrSetSymbol.Sort,''none.Sort,
    'nil.TypeList,''AttrSet.Sort],'op-hook[''attrSetSymbol.Sort,''__.Sort,'__[
    ''AttrSet.Sort,''AttrSet.Sort],''AttrSet.Sort],'op-hook[
    ''opDeclSymbol.Sort,''op_:_->_`[_`]..Qid,'__[''Qid.Sort,''TypeList.Sort,
    ''Type.Sort,''AttrSet.Sort],''OpDecl.Sort],'op-hook[''opDeclSetSymbol.Sort,
    ''__.Sort,'__[''OpDeclSet.Sort,''OpDeclSet.Sort],''OpDeclSet.Sort],
    'op-hook[''emptyOpDeclSetSymbol.Sort,''none.Sort,'nil.TypeList,
    ''OpDeclSet.Sort],'op-hook[''noConditionSymbol.Sort,''nil.Sort,
    'nil.TypeList,''EqCondition.Sort],'op-hook[''equalityConditionSymbol.Sort,
    ''_=_.Sort,'__[''Term.Sort,''Term.Sort],''EqCondition.Sort],'op-hook[
    ''sortTestConditionSymbol.Sort,''_:_.Variable,'__[''Term.Sort,''Sort.Sort],
    ''EqCondition.Sort],'op-hook[''matchConditionSymbol.Sort,''_:=_.Variable,
    '__[''Term.Sort,''Term.Sort],''EqCondition.Sort],'op-hook[
    ''rewriteConditionSymbol.Sort,''_=>_.Sort,'__[''Term.Sort,''Term.Sort],
    ''Condition.Sort],'op-hook[''conjunctionSymbol.Sort,''_/\_.Sort,'__[
    ''EqCondition.Sort,''EqCondition.Sort],''EqCondition.Sort],'op-hook[
    ''mbSymbol.Sort,''mb_:_`[_`]..Qid,'__[''Term.Sort,''Sort.Sort,
    ''AttrSet.Sort],''MembAx.Sort],'op-hook[''cmbSymbol.Sort,
    ''cmb_:_if_`[_`]..Qid,'__[''Term.Sort,''Sort.Sort,''EqCondition.Sort,
    ''AttrSet.Sort],''MembAx.Sort],'op-hook[''emptyMembAxSetSymbol.Sort,
    ''none.Sort,'nil.TypeList,''MembAxSet.Sort],'op-hook[
    ''membAxSetSymbol.Sort,''__.Sort,'__[''MembAxSet.Sort,''MembAxSet.Sort],
    ''MembAxSet.Sort],'op-hook[''eqSymbol.Sort,''eq_=_`[_`]..Qid,'__[
    ''Term.Sort,''Term.Sort,''AttrSet.Sort],''Equation.Sort],'op-hook[
    ''ceqSymbol.Sort,''ceq_=_if_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,
    ''EqCondition.Sort,''AttrSet.Sort],''Equation.Sort],'op-hook[
    ''emptyEquationSetSymbol.Sort,''none.Sort,'nil.TypeList,
    ''EquationSet.Sort],'op-hook[''equationSetSymbol.Sort,''__.Sort,'__[
    ''EquationSet.Sort,''EquationSet.Sort],''EquationSet.Sort],'op-hook[
    ''rlSymbol.Sort,''rl_=>_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,
    ''AttrSet.Sort],''Rule.Sort],'op-hook[''crlSymbol.Sort,
    ''crl_=>_if_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,''Condition.Sort,
    ''AttrSet.Sort],''Rule.Sort],'op-hook[''emptyRuleSetSymbol.Sort,
    ''none.Sort,'nil.TypeList,''RuleSet.Sort],'op-hook[''ruleSetSymbol.Sort,
    ''__.Sort,'__[''RuleSet.Sort,''RuleSet.Sort],''RuleSet.Sort],'op-hook[
    ''fmodSymbol.Sort,''fmod_is_sorts_.____endfm.Constant,'__[''Qid.Sort,
    ''ImportList.Sort,''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,
    ''MembAxSet.Sort,''EquationSet.Sort],''FModule.Sort],'op-hook[
    ''modSymbol.Sort,''mod_is_sorts_._____endm.Constant,'__[''Qid.Sort,
    ''ImportList.Sort,''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,
    ''MembAxSet.Sort,''EquationSet.Sort,''RuleSet.Sort],''Module.Sort],
    'op-hook[''emptyKindSetSymbol.Sort,''empty.Sort,'nil.TypeList,
    ''KindSet.Sort],'op-hook[''kindSetSymbol.Sort,''_&_.Sort,'__[
    ''KindSet.Sort,''KindSet.Sort],''KindSet.Sort],'op-hook[
    ''anyTypeSymbol.Sort,''anyType.Sort,'nil.TypeList,''Type?.Sort],'op-hook[
    ''resultPairSymbol.Sort,''`{_`,_`}.Qid,'__[''Term.Sort,''Type.Sort],
    ''ResultPair.Sort],'op-hook[''resultTripleSymbol.Sort,''`{_`,_`,_`}.Qid,
    '__[''Term.Sort,''Type.Sort,''Substitution.Sort],''ResultTriple.Sort],
    'op-hook[''result4TupleSymbol.Sort,''`{_`,_`,_`,_`}.Qid,'__[''Term.Sort,
    ''Type.Sort,''Substitution.Sort,''Context.Sort],''Result4Tuple.Sort],
    'op-hook[''matchPairSymbol.Sort,''`{_`,_`}.Qid,'__[''Substitution.Sort,
    ''Context.Sort],''MatchPair.Sort],'op-hook[''noParseSymbol.Sort,
    ''noParse.Sort,''Nat.Sort,''ResultPair?.Sort],'op-hook[
    ''ambiguitySymbol.Sort,''ambiguity.Sort,'__[''ResultPair.Sort,
    ''ResultPair.Sort],''ResultPair?.Sort],'op-hook[''failure3Symbol.Sort,
    ''failure.Sort,'nil.TypeList,''ResultTriple?.Sort],'op-hook[
    ''failure4Symbol.Sort,''failure.Sort,'nil.TypeList,''Result4Tuple?.Sort],
    'op-hook[''noMatchSubstSymbol.Sort,''noMatch.Sort,'nil.TypeList,
    ''Substitution?.Sort],'op-hook[''noMatchPairSymbol.Sort,''noMatch.Sort,
    'nil.TypeList,''MatchPair?.Sort],'term-hook[''trueTerm.Sort,
    ''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]],'op_:_->_`[_`].[''metaRewrite.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[ResultPair?`].Kind,'special['__[
    'id-hook[''MetaLevelOpSymbol.Sort,''metaRewrite.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaSearch.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Condition`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[ResultTriple?`].Kind,'special[
    '__['id-hook[''MetaLevelOpSymbol.Sort,''metaSearch.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaXapply.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Substitution?`].Kind,''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[Result4Tuple?`].Kind,'special[
    '__['id-hook[''MetaLevelOpSymbol.Sort,''metaXapply.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaXmatch.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Condition`].Kind,''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[MatchPair?`].Kind,'special['__[
    'id-hook[''MetaLevelOpSymbol.Sort,''metaXmatch.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metadata.Sort,''String.Sort,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''minimalSorts.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaMinimalSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''modExp.Sort,'__[
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],
    ''`[FindResult`,NatList`,Bound`].Kind,'special['__['id-hook[
    ''NumberOpSymbol.Sort,''modExp.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]],'op_:_->_`[_`].[
    ''mod_is_sorts_._____endm.Constant,'__[''Qid.Sort,''ImportList.Sort,
    ''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,''MembAxSet.Sort,
    ''EquationSet.Sort,''RuleSet.Sort],''Module.Sort,'__['ctor.Attr,'gather[
    '__[''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,
    ''&.Sort]],'format['__[''d.Sort,''d.Sort,''d.Sort,''n++i.Sort,''ni.Sort,
    ''d.Sort,''d.Sort,''ni.Sort,''ni.Sort,''ni.Sort,''ni.Sort,''ni.Sort,
    ''n--i.Sort,''d.Sort]]]],'op_:_->_`[_`].[''msg.Sort,'nil.TypeList,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,
    ''EqCondition.Sort,'none.AttrSet],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,
    ''ImportList.Sort,'ctor.Attr],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,
    ''QidList.Sort,'ctor.Attr],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,
    ''TypeList.Sort,'ctor.Attr],'op_:_->_`[_`].[''noMatch.Sort,'nil.TypeList,
    ''MatchPair?.Sort,'ctor.Attr],'op_:_->_`[_`].[''noMatch.Sort,'nil.TypeList,
    ''Substitution?.Sort,'ctor.Attr],'op_:_->_`[_`].[''noParse.Sort,''Nat.Sort,
    ''ResultPair?.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''AttrSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''EquationSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''MembAxSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''OpDeclSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''RuleSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''SortSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''SubsortDeclSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,
    'nil.TypeList,''Substitution.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''nonexec.Sort,'nil.TypeList,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''notFound.Sort,'nil.TypeList,''FindResult.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''not_.Sort,''Bool.Sort,''Bool.Sort,'prec['s_^53[
    '0.Zero]]],'op_:_->_`[_`].[''object.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''op-hook.Sort,'__[''Qid.Sort,''Qid.Sort,
    ''QidList.Sort,''Qid.Sort],''Hook.Sort,'__['ctor.Attr,'format['__[
    ''nssss.Sort,''d.Sort]]]],'op_:_->_`[_`].[''op_:_->_`[_`]..Qid,'__[
    ''Qid.Sort,''TypeList.Sort,''Type.Sort,''AttrSet.Sort],''OpDecl.Sort,'__[
    'ctor.Attr,'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,
    ''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[
    ''op_:_->_to_`[_`].Qid,'__[''Qid.Sort,''TypeList.Sort,''Type.Sort,
    ''Qid.Sort,''AttrSet.Sort],''Renaming.Sort,'__['ctor.Attr,'format['__[
    ''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort,''d.Sort,''d.Sort]]]],'op_:_->_`[_`].[''op_to_`[_`].Qid,
    '__[''Qid.Sort,''Qid.Sort,''AttrSet.Sort],''Renaming.Sort,'__['ctor.Attr,
    'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''owise.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''poly.Sort,''NatList.Sort,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''prec.Sort,''Nat.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''protecting_..Qid,''ModuleExpression.Sort,''Import.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''qid.Sort,''`[String`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''QuotedIdentifierOpSymbol.Sort,''qid.Sort],'op-hook[
    ''quotedIdentifierSymbol.Sort,''<Qids>.Sort,'nil.TypeList,''Qid.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort]]]],'op_:_->_`[_`].[''rfind.Sort,'__[''String.Sort,
    ''String.Sort,''Nat.Sort],''FindResult.Sort,'special['__['id-hook[
    ''StringOpSymbol.Sort,''rfind.Sort],'op-hook[''stringSymbol.Sort,
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[''notFoundTerm.Sort,
    ''notFound.FindResult.Constant]]]],'op_:_->_`[_`].[''right-id.Sort,
    ''Term.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''rl_=>_`[_`]..Qid,'__[
    ''Term.Sort,''Term.Sort,''AttrSet.Sort],''Rule.Sort,'__['ctor.Attr,'format[
    '__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[''s_.Sort,''Nat.Sort,''NzNat.Sort,
    '__['iter.Attr,'ctor.Attr,'special['__['id-hook[''SuccSymbol.Sort,
    'nil.TypeList],'term-hook[''zeroTerm.Sort,''0.Zero.Constant]]]]],
    'op_:_->_`[_`].[''sameKind.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaSameKind.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''sd.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['comm.Attr,'special[
    '__['id-hook[''NumberOpSymbol.Sort,''sd.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''sortLeq.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaSortLeq.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''sort_to_.Sort,'__[''Qid.Sort,''Qid.Sort],''Renaming.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''special.Sort,''HookList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''strat.Sort,''NatList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''string.Sort,''Qid.Sort,''String.Sort,'special['__[
    'id-hook[''QuotedIdentifierOpSymbol.Sort,''string.Sort],'op-hook[
    ''quotedIdentifierSymbol.Sort,''<Qids>.Sort,'nil.TypeList,''Qid.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort]]]],'op_:_->_`[_`].[''subsort_<_..Qid,'__[''Sort.Sort,
    ''Sort.Sort],''SubsortDecl.Sort,'ctor.Attr],'op_:_->_`[_`].[''substr.Sort,
    '__[''String.Sort,''Nat.Sort,''Nat.Sort],''String.Sort,'special['__[
    'id-hook[''StringOpSymbol.Sort,''substr.Sort],'op-hook[''stringSymbol.Sort,
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]],'op_:_->_`[_`].[''term-hook.Sort,'__[
    ''Qid.Sort,''Term.Sort],''Hook.Sort,'__['ctor.Attr,'format['__[
    ''nssss.Sort,''d.Sort]]]],'op_:_->_`[_`].[''true.Sort,'nil.TypeList,
    ''Bool.Sort,'__['ctor.Attr,'special['id-hook[''SystemTrue.Sort,
    'nil.TypeList]]]],'op_:_->_`[_`].[''unbounded.Sort,'nil.TypeList,
    ''Bound.Sort,'none.AttrSet],'op_:_->_`[_`].[''upEqs.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[EquationSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpEqs.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upImports.Sort,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[ImportList`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaUpImports.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''upMbs.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[MembAxSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpMbs.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upModule.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[Module`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpModule.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upOpDecls.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[OpDeclSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpOpDecls.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upRls.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[RuleSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpRls.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upSorts.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaUpSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''upSubsortDecls.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[SubsortDeclSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpSubsortDecls.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''upTerm.Sort,''Universal.Sort,
    ''Term.Sort,'__['poly['s_['0.Zero]],'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpTerm.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]]],'op_:_->_`[_`].[''wellFormed.Sort,''Module.Sort,
    ''Bool.Sort,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaWellFormedModule.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,
    '__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''wellFormed.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaWellFormedTerm.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''wellFormed.Sort,'__[''`[Module`].Kind,''`[Substitution?`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaWellFormedSubstitution.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]]],'none.MembAxSet,'__['eq_=_`[_`].['_`[_`][
    ''_&_.Sort,'_`,_[''K:Kind.Variable,''K:Kind.Variable]],''K:Kind.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_;_.Sort,'_`,_[
    ''A:Assignment.Variable,''A:Assignment.Variable]],''A:Assignment.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_;_.Sort,'_`,_[''S:Sort.Variable,
    ''S:Sort.Variable]],''S:Sort.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''__.Sort,'_`,_[''A:Attr.Variable,''A:Attr.Variable]],''A:Attr.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''__.Sort,'_`,_[''E:Equation.Variable,
    ''E:Equation.Variable]],''E:Equation.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''__.Sort,'_`,_[''M:MembAx.Variable,''M:MembAx.Variable]],
    ''M:MembAx.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''__.Sort,'_`,_[
    ''O:OpDecl.Variable,''O:OpDecl.Variable]],''O:OpDecl.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''__.Sort,'_`,_[''R:Rule.Variable,
    ''R:Rule.Variable]],''R:Rule.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''__.Sort,'_`,_[''S:SubsortDecl.Variable,''S:SubsortDecl.Variable]],
    ''S:SubsortDecl.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,
    '_`,_[''A:Bool.Variable,''A:Bool.Variable]],''A:Bool.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    '_`[_`][''_xor_.Sort,'_`,_[''B:Bool.Variable,''C:Bool.Variable]]]],'_`[_`][
    ''_xor_.Sort,'_`,_['_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    ''B:Bool.Variable]],'_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    ''C:Bool.Variable]]]],'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,
    '_`,_[''false.Bool.Constant,''A:Bool.Variable]],''false.Bool.Constant,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,'_`,_[
    ''true.Bool.Constant,''A:Bool.Variable]],''A:Bool.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''_implies_.Sort,'_`,_[''A:Bool.Variable,
    ''B:Bool.Variable]],'_`[_`][''not_.Sort,'_`[_`][''_xor_.Sort,'_`,_[
    ''A:Bool.Variable,'_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    ''B:Bool.Variable]]]]],'none.AttrSet],'eq_=_`[_`].['_`[_`][''_or_.Sort,
    '_`,_[''A:Bool.Variable,''B:Bool.Variable]],'_`[_`][''_xor_.Sort,'_`,_[
    '_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,''B:Bool.Variable]],'_`[_`][
    ''_xor_.Sort,'_`,_[''A:Bool.Variable,''B:Bool.Variable]]]],'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''_xor_.Sort,'_`,_[''A:Bool.Variable,
    ''A:Bool.Variable]],''false.Bool.Constant,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''_xor_.Sort,'_`,_[''false.Bool.Constant,''A:Bool.Variable]],
    ''A:Bool.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''`[_`].Kind,
    ''Q:Qid.Variable],'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,'_`[_`][''protecting_..Qid,''Q:Qid.Variable],
    ''none.SortSet.Constant,''none.SubsortDeclSet.Constant,
    ''none.OpDeclSet.Constant,''none.MembAxSet.Constant,
    ''none.EquationSet.Constant,''none.RuleSet.Constant]],'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getContext.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,'_`,_[
    ''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable,
    ''C:Context.Variable]]],''C:Context.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getContext.Sort,'_`[_`][''`{_`,_`}.Qid,'_`,_[
    ''S:Substitution.Variable,''C:Context.Variable]]],''C:Context.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getEqs.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''EQS:EquationSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getEqs.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''EQS:EquationSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getImports.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''IL:ImportList.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getImports.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''IL:ImportList.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getMbs.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''MAS:MembAxSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getMbs.Sort,
    '_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''MAS:MembAxSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getName.Sort,''C:Constant.Variable],'_`[_`][
    ''qid.Sort,'_`[_`][''substr.Sort,'_`,_['_`[_`][''string.Sort,
    ''C:Constant.Variable],''0.Zero.Constant,'_`[_`][''rfind.Sort,'_`,_[
    '_`[_`][''string.Sort,''C:Constant.Variable],''".".Char.Constant,'_`[_`][
    ''length.Sort,'_`[_`][''string.Sort,''C:Constant.Variable]]]]]]],
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getName.Sort,''V:Variable.Variable],
    '_`[_`][''qid.Sort,'_`[_`][''substr.Sort,'_`,_['_`[_`][''string.Sort,
    ''V:Variable.Variable],''0.Zero.Constant,'_`[_`][''rfind.Sort,'_`,_[
    '_`[_`][''string.Sort,''V:Variable.Variable],''":".Char.Constant,'_`[_`][
    ''length.Sort,'_`[_`][''string.Sort,''V:Variable.Variable]]]]]]],
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getName.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],''Q:Qid.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getName.Sort,'_`[_`][
    ''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''Q:Qid.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getOps.Sort,'_`[_`][''fmod_is_sorts_.____endfm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''OPDS:OpDeclSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getOps.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''OPDS:OpDeclSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getRls.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''none.RuleSet.Constant,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getRls.Sort,
    '_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''RLS:RuleSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSorts.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''SS:SortSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getSorts.Sort,
    '_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''SS:SortSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSubsorts.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''SSDS:SubsortDeclSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getSubsorts.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''SSDS:SubsortDeclSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSubstitution.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,
    '_`,_[''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable,
    ''C:Context.Variable]]],''S:Substitution.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSubstitution.Sort,'_`[_`][''`{_`,_`,_`}.Qid,
    '_`,_[''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable]]],
    ''S:Substitution.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getSubstitution.Sort,'_`[_`][''`{_`,_`}.Qid,'_`,_[
    ''S:Substitution.Variable,''C:Context.Variable]]],
    ''S:Substitution.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getTerm.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,'_`,_[''T:Term.Variable,
    ''T:Type.Variable,''S:Substitution.Variable,''C:Context.Variable]]],
    ''T:Term.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getTerm.Sort,
    '_`[_`][''`{_`,_`,_`}.Qid,'_`,_[''T:Term.Variable,''T:Type.Variable,
    ''S:Substitution.Variable]]],''T:Term.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getTerm.Sort,'_`[_`][''`{_`,_`}.Qid,'_`,_[''T:Term.Variable,
    ''T:Type.Variable]]],''T:Term.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getType.Sort,''C:Constant.Variable],'_`[_`][''qid.Sort,'_`[_`][
    ''substr.Sort,'_`,_['_`[_`][''string.Sort,''C:Constant.Variable],'_`[_`][
    ''_+_.Sort,'_`,_['_`[_`][''s_.Sort,''0.Zero.Constant],'_`[_`][''rfind.Sort,
    '_`,_['_`[_`][''string.Sort,''C:Constant.Variable],''".".Char.Constant,
    '_`[_`][''length.Sort,'_`[_`][''string.Sort,''C:Constant.Variable]]]]]],
    '_`[_`][''length.Sort,'_`[_`][''string.Sort,''C:Constant.Variable]]]]],
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getType.Sort,''V:Variable.Variable],
    '_`[_`][''qid.Sort,'_`[_`][''substr.Sort,'_`,_['_`[_`][''string.Sort,
    ''V:Variable.Variable],'_`[_`][''_+_.Sort,'_`,_['_`[_`][''s_.Sort,
    ''0.Zero.Constant],'_`[_`][''rfind.Sort,'_`,_['_`[_`][''string.Sort,
    ''V:Variable.Variable],''":".Char.Constant,'_`[_`][''length.Sort,'_`[_`][
    ''string.Sort,''V:Variable.Variable]]]]]],'_`[_`][''length.Sort,'_`[_`][
    ''string.Sort,''V:Variable.Variable]]]]],'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getType.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,'_`,_[
    ''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable,
    ''C:Context.Variable]]],''T:Type.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getType.Sort,'_`[_`][''`{_`,_`,_`}.Qid,'_`,_[''T:Term.Variable,
    ''T:Type.Variable,''S:Substitution.Variable]]],''T:Type.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getType.Sort,'_`[_`][''`{_`,_`}.Qid,
    '_`,_[''T:Term.Variable,''T:Type.Variable]]],''T:Type.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''not_.Sort,''A:Bool.Variable],'_`[_`][
    ''_xor_.Sort,'_`,_[''true.Bool.Constant,''A:Bool.Variable]],
    'none.AttrSet]]]
==========================================
reduce in META-LEVEL : {upTerm(upModule('META-LEVEL, true)),'FModule} .
rewrites: 2
result ResultPair: {'fmod_is_sorts_.____endfm[''META-LEVEL.Sort,
    'nil.ImportList,'_;_[''Assignment.Sort,''Attr.Sort,''AttrSet.Sort,
    ''Bool.Sort,''Bound.Sort,''CTermList.Sort,''Char.Sort,''Condition.Sort,
    ''Constant.Sort,''Context.Sort,''EqCondition.Sort,''Equation.Sort,
    ''EquationSet.Sort,''FModule.Sort,''FindResult.Sort,''GTermList.Sort,
    ''GroundTerm.Sort,''GroundTermList.Sort,''Hook.Sort,''HookList.Sort,
    ''Import.Sort,''ImportList.Sort,''Kind.Sort,''KindSet.Sort,
    ''MatchPair.Sort,''MatchPair?.Sort,''MembAx.Sort,''MembAxSet.Sort,
    ''Module.Sort,''ModuleExpression.Sort,''Nat.Sort,''NatList.Sort,
    ''NzNat.Sort,''OpDecl.Sort,''OpDeclSet.Sort,''Qid.Sort,''QidList.Sort,
    ''Renaming.Sort,''RenamingSet.Sort,''Result4Tuple.Sort,
    ''Result4Tuple?.Sort,''ResultPair.Sort,''ResultPair?.Sort,
    ''ResultTriple.Sort,''ResultTriple?.Sort,''Rule.Sort,''RuleSet.Sort,
    ''Sort.Sort,''SortSet.Sort,''String.Sort,''SubsortDecl.Sort,
    ''SubsortDeclSet.Sort,''Substitution.Sort,''Substitution?.Sort,''Term.Sort,
    ''TermList.Sort,''Type.Sort,''Type?.Sort,''TypeList.Sort,''Variable.Sort,
    ''Zero.Sort],'__['subsort_<_.[''Assignment.Sort,''Substitution.Sort],
    'subsort_<_.[''Attr.Sort,''AttrSet.Sort],'subsort_<_.[''CTermList.Sort,
    ''GTermList.Sort],'subsort_<_.[''Char.Sort,''String.Sort],'subsort_<_.[
    ''Constant.Sort,''GroundTerm.Sort],'subsort_<_.[''Constant.Sort,
    ''Qid.Sort],'subsort_<_.[''Constant.Sort,''Term.Sort],'subsort_<_.[
    ''Context.Sort,''CTermList.Sort],'subsort_<_.[''EqCondition.Sort,
    ''Condition.Sort],'subsort_<_.[''Equation.Sort,''EquationSet.Sort],
    'subsort_<_.[''FModule.Sort,''Module.Sort],'subsort_<_.[''GroundTerm.Sort,
    ''GroundTermList.Sort],'subsort_<_.[''GroundTerm.Sort,''Term.Sort],
    'subsort_<_.[''GroundTermList.Sort,''TermList.Sort],'subsort_<_.[
    ''Hook.Sort,''HookList.Sort],'subsort_<_.[''Import.Sort,''ImportList.Sort],
    'subsort_<_.[''Kind.Sort,''KindSet.Sort],'subsort_<_.[''Kind.Sort,
    ''Type.Sort],'subsort_<_.[''MatchPair.Sort,''MatchPair?.Sort],'subsort_<_.[
    ''MembAx.Sort,''MembAxSet.Sort],'subsort_<_.[''Nat.Sort,''Bound.Sort],
    'subsort_<_.[''Nat.Sort,''FindResult.Sort],'subsort_<_.[''Nat.Sort,
    ''NatList.Sort],'subsort_<_.[''NzNat.Sort,''Nat.Sort],'subsort_<_.[
    ''OpDecl.Sort,''OpDeclSet.Sort],'subsort_<_.[''Qid.Sort,
    ''ModuleExpression.Sort],'subsort_<_.[''Qid.Sort,''QidList.Sort],
    'subsort_<_.[''Renaming.Sort,''RenamingSet.Sort],'subsort_<_.[
    ''Result4Tuple.Sort,''Result4Tuple?.Sort],'subsort_<_.[''ResultPair.Sort,
    ''ResultPair?.Sort],'subsort_<_.[''ResultTriple.Sort,''ResultTriple?.Sort],
    'subsort_<_.[''Rule.Sort,''RuleSet.Sort],'subsort_<_.[''Sort.Sort,
    ''SortSet.Sort],'subsort_<_.[''Sort.Sort,''Type.Sort],'subsort_<_.[
    ''SubsortDecl.Sort,''SubsortDeclSet.Sort],'subsort_<_.[''Substitution.Sort,
    ''Substitution?.Sort],'subsort_<_.[''Term.Sort,''TermList.Sort],
    'subsort_<_.[''TermList.Sort,''GTermList.Sort],'subsort_<_.[''Type.Sort,
    ''Qid.Sort],'subsort_<_.[''Type.Sort,''Type?.Sort],'subsort_<_.[
    ''Type.Sort,''TypeList.Sort],'subsort_<_.[''TypeList.Sort,''QidList.Sort],
    'subsort_<_.[''Variable.Sort,''Qid.Sort],'subsort_<_.[''Variable.Sort,
    ''Term.Sort],'subsort_<_.[''Zero.Sort,''Nat.Sort]],'__['op_:_->_`[_`].[
    ''0.Sort,'nil.TypeList,''Zero.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Constant.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''constantQid.Sort]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Kind.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''kindQid.Sort]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Qid.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,'nil.TypeList]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Sort.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''sortQid.Sort]]],'op_:_->_`[_`].[
    ''<Qids>.Sort,'nil.TypeList,''Variable.Sort,'special['id-hook[
    ''QuotedIdentifierSymbol.Sort,''variableQid.Sort]]],'op_:_->_`[_`].[
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort,'special['id-hook[
    ''StringSymbol.Sort,'nil.TypeList]]],'op_:_->_`[_`].[''<Strings>.Sort,
    'nil.TypeList,''String.Sort,'special['id-hook[''StringSymbol.Sort,
    'nil.TypeList]]],'op_:_->_`[_`].[''_&_.Sort,'__[''KindSet.Sort,
    ''KindSet.Sort],''KindSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''empty.KindSet.Constant]]],'op_:_->_`[_`].[''_&_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^53['0.Zero]],
    'special['__['id-hook[''NumberOpSymbol.Sort,''&.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_*_.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['assoc.Attr,
    'comm.Attr,'prec['s_^31['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''*.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_*_.Sort,'__[''NzNat.Sort,
    ''NzNat.Sort],''NzNat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^31[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''*.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_*`(_`).Sort,'__[''ModuleExpression.Sort,''RenamingSet.Sort],
    ''ModuleExpression.Sort,'__['ctor.Attr,'prec['s_^39['0.Zero]],'format['__[
    ''d.Sort,''d.Sort,''s.Sort,''n++i.Sort,''n--i.Sort,''d.Sort]]]],
    'op_:_->_`[_`].[''_+_.Sort,'__[''ModuleExpression.Sort,
    ''ModuleExpression.Sort],''ModuleExpression.Sort,'__['assoc.Attr,
    'comm.Attr,'ctor.Attr]],'op_:_->_`[_`].[''_+_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^33['0.Zero]],
    'special['__['id-hook[''NumberOpSymbol.Sort,''+.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_+_.Sort,'__[''NzNat.Sort,''Nat.Sort],''NzNat.Sort,'__['assoc.Attr,
    'comm.Attr,'prec['s_^33['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''+.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_+_.Sort,'__[''String.Sort,
    ''String.Sort],''String.Sort,'__['prec['s_^33['0.Zero]],'gather['__[
    ''E.Sort,''e.Sort]],'special['__['id-hook[''StringOpSymbol.Sort,''+.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort]]]]],'op_:_->_`[_`].[''_/\_.Sort,'__[''Condition.Sort,
    ''Condition.Sort],''Condition.Sort,'__['assoc.Attr,'ctor.Attr,'id[
    ''nil.EqCondition.Constant],'prec['s_^73['0.Zero]]]],'op_:_->_`[_`].[
    ''_/\_.Sort,'__[''EqCondition.Sort,''EqCondition.Sort],''EqCondition.Sort,
    '__['assoc.Attr,'ctor.Attr,'id[''nil.EqCondition.Constant],'prec['s_^73[
    '0.Zero]]]],'op_:_->_`[_`].[''_:=_.Variable,'__[''Term.Sort,''Term.Sort],
    ''EqCondition.Sort,'__['ctor.Attr,'prec['s_^71['0.Zero]]]],'op_:_->_`[_`].[
    ''_:_.Variable,'__[''Term.Sort,''Sort.Sort],''EqCondition.Sort,'__[
    'ctor.Attr,'prec['s_^71['0.Zero]]]],'op_:_->_`[_`].[''_;_.Sort,'__[
    ''SortSet.Sort,''SortSet.Sort],''SortSet.Sort,'__['assoc.Attr,'comm.Attr,
    'ctor.Attr,'id[''none.SortSet.Constant]]],'op_:_->_`[_`].[''_;_.Sort,'__[
    ''Substitution.Sort,''Substitution.Sort],''Substitution.Sort,'__[
    'assoc.Attr,'comm.Attr,'ctor.Attr,'id[''none.Substitution.Constant],'prec[
    's_^65['0.Zero]]]],'op_:_->_`[_`].[''_<-_.Sort,'__[''Variable.Sort,
    ''Term.Sort],''Assignment.Sort,'__['ctor.Attr,'prec['s_^63['0.Zero]],
    'format['__[''nt.Sort,''d.Sort,''d.Sort,''d.Sort]]]],'op_:_->_`[_`].[
    ''_<<_.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['prec['s_^35[
    '0.Zero]],'gather['__[''E.Sort,''e.Sort]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''<<.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_<=_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''<=.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort],'term-hook[''trueTerm.Sort,''true.Bool.Constant],
    'term-hook[''falseTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[
    ''_<=_.Sort,'__[''String.Sort,''String.Sort],''Bool.Sort,'__['prec['s_^37[
    '0.Zero]],'special['__['id-hook[''StringOpSymbol.Sort,''<=.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_<_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''<.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort],'term-hook[''trueTerm.Sort,''true.Bool.Constant],
    'term-hook[''falseTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[
    ''_<_.Sort,'__[''String.Sort,''String.Sort],''Bool.Sort,'__['prec['s_^37[
    '0.Zero]],'special['__['id-hook[''StringOpSymbol.Sort,''<.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_=/=_.Sort,'__[
    ''Universal.Sort,''Universal.Sort],''Bool.Sort,'__['prec['s_^51['0.Zero]],
    'poly['__['s_['0.Zero],'s_^2['0.Zero]]],'special['__['id-hook[
    ''EqualitySymbol.Sort,'nil.TypeList],'term-hook[''equalTerm.Sort,
    ''false.Bool.Constant],'term-hook[''notEqualTerm.Sort,
    ''true.Bool.Constant]]]]],'op_:_->_`[_`].[''_==_.Sort,'__[''Universal.Sort,
    ''Universal.Sort],''Bool.Sort,'__['prec['s_^51['0.Zero]],'poly['__['s_[
    '0.Zero],'s_^2['0.Zero]]],'special['__['id-hook[''EqualitySymbol.Sort,
    'nil.TypeList],'term-hook[''equalTerm.Sort,''true.Bool.Constant],
    'term-hook[''notEqualTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[
    ''_=>_.Sort,'__[''Term.Sort,''Term.Sort],''Condition.Sort,'__['ctor.Attr,
    'prec['s_^71['0.Zero]]]],'op_:_->_`[_`].[''_=_.Sort,'__[''Term.Sort,
    ''Term.Sort],''EqCondition.Sort,'__['ctor.Attr,'prec['s_^71['0.Zero]]]],
    'op_:_->_`[_`].[''_>=_.Sort,'__[''Nat.Sort,''Nat.Sort],''Bool.Sort,'__[
    'prec['s_^37['0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,
    ''>=.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],
    'term-hook[''trueTerm.Sort,''true.Bool.Constant],'term-hook[
    ''falseTerm.Sort,''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_>=_.Sort,
    '__[''String.Sort,''String.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],
    'special['__['id-hook[''StringOpSymbol.Sort,''>=.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_>>_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['prec['s_^35['0.Zero]],'gather['__[''E.Sort,
    ''e.Sort]],'special['__['id-hook[''NumberOpSymbol.Sort,''>>.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_>_.Sort,'__[''Nat.Sort,''Nat.Sort],''Bool.Sort,'__['prec['s_^37[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''>.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_>_.Sort,'__[''String.Sort,
    ''String.Sort],''Bool.Sort,'__['prec['s_^37['0.Zero]],'special['__[
    'id-hook[''StringOpSymbol.Sort,''>.Sort],'op-hook[''stringSymbol.Sort,
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort],'term-hook[''trueTerm.Sort,
    ''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_^_.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['prec['s_^29['0.Zero]],'gather['__[''E.Sort,
    ''e.Sort]],'special['__['id-hook[''NumberOpSymbol.Sort,''^.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_^_.Sort,'__[''NzNat.Sort,''Nat.Sort],''NzNat.Sort,'__['prec['s_^29[
    '0.Zero]],'gather['__[''E.Sort,''e.Sort]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''^.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''__.Sort,'__[''AttrSet.Sort,
    ''AttrSet.Sort],''AttrSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''none.AttrSet.Constant]]],'op_:_->_`[_`].[''__.Sort,'__[
    ''EquationSet.Sort,''EquationSet.Sort],''EquationSet.Sort,'__['assoc.Attr,
    'comm.Attr,'ctor.Attr,'id[''none.EquationSet.Constant],'format['__[
    ''d.Sort,''ni.Sort,''d.Sort]]]],'op_:_->_`[_`].[''__.Sort,'__[
    ''HookList.Sort,''HookList.Sort],''HookList.Sort,'__['assoc.Attr,
    'ctor.Attr]],'op_:_->_`[_`].[''__.Sort,'__[''ImportList.Sort,
    ''ImportList.Sort],''ImportList.Sort,'__['assoc.Attr,'ctor.Attr,'id[
    ''nil.ImportList.Constant],'format['__[''d.Sort,''ni.Sort,''d.Sort]]]],
    'op_:_->_`[_`].[''__.Sort,'__[''MembAxSet.Sort,''MembAxSet.Sort],
    ''MembAxSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''none.MembAxSet.Constant],'format['__[''d.Sort,''ni.Sort,''d.Sort]]]],
    'op_:_->_`[_`].[''__.Sort,'__[''NatList.Sort,''NatList.Sort],
    ''NatList.Sort,'__['assoc.Attr,'ctor.Attr]],'op_:_->_`[_`].[''__.Sort,'__[
    ''OpDeclSet.Sort,''OpDeclSet.Sort],''OpDeclSet.Sort,'__['assoc.Attr,
    'comm.Attr,'ctor.Attr,'id[''none.OpDeclSet.Constant],'format['__[''d.Sort,
    ''ni.Sort,''d.Sort]]]],'op_:_->_`[_`].[''__.Sort,'__[''QidList.Sort,
    ''QidList.Sort],''QidList.Sort,'__['assoc.Attr,'ctor.Attr,'id[
    ''nil.TypeList.Constant]]],'op_:_->_`[_`].[''__.Sort,'__[''RuleSet.Sort,
    ''RuleSet.Sort],''RuleSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''none.RuleSet.Constant],'format['__[''d.Sort,''ni.Sort,''d.Sort]]]],
    'op_:_->_`[_`].[''__.Sort,'__[''SubsortDeclSet.Sort,''SubsortDeclSet.Sort],
    ''SubsortDeclSet.Sort,'__['assoc.Attr,'comm.Attr,'ctor.Attr,'id[
    ''none.SubsortDeclSet.Constant],'format['__[''d.Sort,''ni.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''__.Sort,'__[''TypeList.Sort,
    ''TypeList.Sort],''TypeList.Sort,'__['assoc.Attr,'id[
    ''nil.TypeList.Constant]]],'op_:_->_`[_`].[''_`,_.Qid,'__[''CTermList.Sort,
    ''TermList.Sort],''CTermList.Sort,'__['assoc.Attr,'ctor.Attr,'prec['s_^120[
    '0.Zero]],'gather['__[''e.Sort,''E.Sort]]]],'op_:_->_`[_`].[''_`,_.Qid,'__[
    ''GroundTermList.Sort,''GroundTermList.Sort],''GroundTermList.Sort,'__[
    'assoc.Attr,'ctor.Attr,'prec['s_^120['0.Zero]],'gather['__[''e.Sort,
    ''E.Sort]]]],'op_:_->_`[_`].[''_`,_.Qid,'__[''RenamingSet.Sort,
    ''RenamingSet.Sort],''RenamingSet.Sort,'__['assoc.Attr,'comm.Attr,
    'ctor.Attr,'prec['s_^43['0.Zero]],'format['__[''d.Sort,''d.Sort,''ni.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''_`,_.Qid,'__[''TermList.Sort,
    ''CTermList.Sort],''CTermList.Sort,'__['assoc.Attr,'ctor.Attr,'prec[
    's_^120['0.Zero]],'gather['__[''e.Sort,''E.Sort]]]],'op_:_->_`[_`].[
    ''_`,_.Qid,'__[''TermList.Sort,''TermList.Sort],''TermList.Sort,'__[
    'assoc.Attr,'ctor.Attr,'prec['s_^120['0.Zero]],'gather['__[''e.Sort,
    ''E.Sort]]]],'op_:_->_`[_`].[''_`[_`].Qid,'__[''Qid.Sort,''CTermList.Sort],
    ''Context.Sort,'ctor.Attr],'op_:_->_`[_`].[''_`[_`].Qid,'__[''Qid.Sort,
    ''GroundTermList.Sort],''GroundTerm.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''_`[_`].Qid,'__[''Qid.Sort,''TermList.Sort],''Term.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''_and_.Sort,'__[''Bool.Sort,''Bool.Sort],''Bool.Sort,'__[
    'assoc.Attr,'comm.Attr,'prec['s_^55['0.Zero]]]],'op_:_->_`[_`].[
    ''_divides_.Sort,'__[''NzNat.Sort,''Nat.Sort],''Bool.Sort,'__['prec['s_^51[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''divides.Sort],
    'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[
    ''trueTerm.Sort,''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]]],'op_:_->_`[_`].[''_implies_.Sort,'__[
    ''Bool.Sort,''Bool.Sort],''Bool.Sort,'__['prec['s_^61['0.Zero]],'gather[
    '__[''e.Sort,''E.Sort]]]],'op_:_->_`[_`].[''_or_.Sort,'__[''Bool.Sort,
    ''Bool.Sort],''Bool.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^59[
    '0.Zero]]]],'op_:_->_`[_`].[''_quo_.Sort,'__[''Nat.Sort,''NzNat.Sort],
    ''Nat.Sort,'__['prec['s_^31['0.Zero]],'gather['__[''E.Sort,''e.Sort]],
    'special['__['id-hook[''NumberOpSymbol.Sort,''quo.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_rem_.Sort,'__[''Nat.Sort,''NzNat.Sort],''Nat.Sort,'__['prec['s_^31[
    '0.Zero]],'gather['__[''E.Sort,''e.Sort]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''rem.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_xor_.Sort,'__[''Bool.Sort,
    ''Bool.Sort],''Bool.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^57[
    '0.Zero]]]],'op_:_->_`[_`].[''_xor_.Sort,'__[''Nat.Sort,''Nat.Sort],
    ''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^55['0.Zero]],'special['__[
    'id-hook[''NumberOpSymbol.Sort,''xor.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''_|_.Sort,'__[
    ''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'prec['s_^57[
    '0.Zero]],'special['__['id-hook[''NumberOpSymbol.Sort,''|.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[
    ''_|_.Sort,'__[''NzNat.Sort,''Nat.Sort],''NzNat.Sort,'__['assoc.Attr,
    'comm.Attr,'prec['s_^57['0.Zero]],'special['__['id-hook[
    ''NumberOpSymbol.Sort,''|.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''`[_`].Kind,''Qid.Sort,
    ''Module.Sort,'none.AttrSet],'op_:_->_`[_`].[''`[`].Kind,'nil.TypeList,
    ''Context.Sort,'ctor.Attr],'op_:_->_`[_`].[''`{_`,_`,_`,_`}.Qid,'__[
    ''Term.Sort,''Type.Sort,''Substitution.Sort,''Context.Sort],
    ''Result4Tuple.Sort,'ctor.Attr],'op_:_->_`[_`].[''`{_`,_`,_`}.Qid,'__[
    ''Term.Sort,''Type.Sort,''Substitution.Sort],''ResultTriple.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''`{_`,_`}.Qid,'__[''Substitution.Sort,
    ''Context.Sort],''MatchPair.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''`{_`,_`}.Qid,'__[''Term.Sort,''Type.Sort],''ResultPair.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''ambiguity.Sort,'__[''ResultPair.Sort,''ResultPair.Sort],
    ''ResultPair?.Sort,'ctor.Attr],'op_:_->_`[_`].[''anyType.Sort,
    'nil.TypeList,''Type?.Sort,'ctor.Attr],'op_:_->_`[_`].[''ascii.Sort,
    ''Char.Sort,''Nat.Sort,'special['__['id-hook[''StringOpSymbol.Sort,
    ''ascii.Sort],'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,
    ''NzNat.Sort]]]],'op_:_->_`[_`].[''assoc.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''ceq_=_if_`[_`]..Qid,'__[''Term.Sort,
    ''Term.Sort,''EqCondition.Sort,''AttrSet.Sort],''Equation.Sort,'__[
    'ctor.Attr,'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,
    ''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[
    ''char.Sort,''`[FindResult`,NatList`,Bound`].Kind,''`[String`].Kind,
    'special['__['id-hook[''StringOpSymbol.Sort,''char.Sort],'op-hook[
    ''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],'op-hook[
    ''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort]]]],'op_:_->_`[_`].[
    ''cmb_:_if_`[_`]..Qid,'__[''Term.Sort,''Sort.Sort,''EqCondition.Sort,
    ''AttrSet.Sort],''MembAx.Sort,'__['ctor.Attr,'format['__[''d.Sort,''d.Sort,
    ''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''comm.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''completeName.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaCompleteName.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''config.Sort,
    'nil.TypeList,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''crl_=>_if_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,''Condition.Sort,
    ''AttrSet.Sort],''Rule.Sort,'__['ctor.Attr,'format['__[''d.Sort,''d.Sort,
    ''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''ctor.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''downTerm.Sort,'__[''Term.Sort,
    ''Universal.Sort],''Universal.Sort,'__['poly['__['s_^2['0.Zero],'0.Zero]],
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaDownTerm.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]]],'op_:_->_`[_`].[''empty.Sort,
    'nil.TypeList,''KindSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''eq_=_`[_`]..Qid,
    '__[''Term.Sort,''Term.Sort,''AttrSet.Sort],''Equation.Sort,'__['ctor.Attr,
    'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[''extending_..Qid,
    ''ModuleExpression.Sort,''Import.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''failure.Sort,'nil.TypeList,''Result4Tuple?.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''failure.Sort,'nil.TypeList,''ResultTriple?.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''false.Sort,'nil.TypeList,''Bool.Sort,'__[
    'ctor.Attr,'special['id-hook[''SystemFalse.Sort,'nil.TypeList]]]],
    'op_:_->_`[_`].[''find.Sort,'__[''String.Sort,''String.Sort,''Nat.Sort],
    ''FindResult.Sort,'special['__['id-hook[''StringOpSymbol.Sort,''find.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],
    'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[
    ''notFoundTerm.Sort,''notFound.FindResult.Constant]]]],'op_:_->_`[_`].[
    ''fmod_is_sorts_.____endfm.Constant,'__[''Qid.Sort,''ImportList.Sort,
    ''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,''MembAxSet.Sort,
    ''EquationSet.Sort],''FModule.Sort,'__['ctor.Attr,'gather['__[''&.Sort,
    ''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort]],'format['__[
    ''d.Sort,''d.Sort,''d.Sort,''n++i.Sort,''ni.Sort,''d.Sort,''d.Sort,
    ''ni.Sort,''ni.Sort,''ni.Sort,''ni.Sort,''n--i.Sort,''d.Sort]]]],
    'op_:_->_`[_`].[''format.Sort,''QidList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''frozen.Sort,''NatList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''gather.Sort,''QidList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''gcd.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__[
    'assoc.Attr,'comm.Attr,'special['__['id-hook[''NumberOpSymbol.Sort,
    ''gcd.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,
    ''NzNat.Sort]]]]],'op_:_->_`[_`].[''gcd.Sort,'__[''NzNat.Sort,''Nat.Sort],
    ''NzNat.Sort,'__['assoc.Attr,'comm.Attr,'special['__['id-hook[
    ''NumberOpSymbol.Sort,''gcd.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''getContext.Sort,
    ''MatchPair.Sort,''Context.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getContext.Sort,''Result4Tuple.Sort,''Context.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getEqs.Sort,''Module.Sort,''EquationSet.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getImports.Sort,''Module.Sort,
    ''ImportList.Sort,'none.AttrSet],'op_:_->_`[_`].[''getKind.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaGetKind.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''getKinds.Sort,
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaGetKinds.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''getMbs.Sort,
    ''Module.Sort,''MembAxSet.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getName.Sort,''Constant.Sort,''Qid.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getName.Sort,''Module.Sort,''Qid.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getName.Sort,''Variable.Sort,''Qid.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getOps.Sort,''Module.Sort,''OpDeclSet.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getRls.Sort,''Module.Sort,''RuleSet.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getSorts.Sort,''Module.Sort,''SortSet.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getSubsorts.Sort,''Module.Sort,
    ''SubsortDeclSet.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getSubstitution.Sort,''MatchPair.Sort,''Substitution.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getSubstitution.Sort,''Result4Tuple.Sort,
    ''Substitution.Sort,'none.AttrSet],'op_:_->_`[_`].[''getSubstitution.Sort,
    ''ResultTriple.Sort,''Substitution.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getTerm.Sort,''Result4Tuple.Sort,''Term.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getTerm.Sort,''ResultPair.Sort,''Term.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getTerm.Sort,''ResultTriple.Sort,
    ''Term.Sort,'none.AttrSet],'op_:_->_`[_`].[''getType.Sort,''Constant.Sort,
    ''Type.Sort,'none.AttrSet],'op_:_->_`[_`].[''getType.Sort,
    ''Result4Tuple.Sort,''Type.Sort,'none.AttrSet],'op_:_->_`[_`].[
    ''getType.Sort,''ResultPair.Sort,''Type.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''getType.Sort,''ResultTriple.Sort,''Type.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''getType.Sort,''Variable.Sort,''Type.Sort,
    'none.AttrSet],'op_:_->_`[_`].[''glbSorts.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaGlbSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''id.Sort,
    ''Term.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''id-hook.Sort,'__[
    ''Qid.Sort,''QidList.Sort],''Hook.Sort,'__['ctor.Attr,'format['__[
    ''nssss.Sort,''d.Sort]]]],'op_:_->_`[_`].[''idem.Sort,'nil.TypeList,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''if_then_else_fi.Sort,'__[
    ''Bool.Sort,''Universal.Sort,''Universal.Sort],''Universal.Sort,'__['poly[
    '__['s_^2['0.Zero],'s_^3['0.Zero],'0.Zero]],'special['__['id-hook[
    ''BranchSymbol.Sort,'nil.TypeList],'term-hook[''1.Sort,
    ''true.Bool.Constant],'term-hook[''2.Sort,''false.Bool.Constant]]]]],
    'op_:_->_`[_`].[''including_..Qid,''ModuleExpression.Sort,''Import.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''iter.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''label.Sort,''Qid.Sort,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''label_to_.Sort,'__[''Qid.Sort,''Qid.Sort],
    ''Renaming.Sort,'ctor.Attr],'op_:_->_`[_`].[''lcm.Sort,'__[''Nat.Sort,
    ''Nat.Sort],''Nat.Sort,'__['assoc.Attr,'comm.Attr,'special['__['id-hook[
    ''NumberOpSymbol.Sort,''lcm.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''lcm.Sort,'__[''NzNat.Sort,
    ''NzNat.Sort],''NzNat.Sort,'__['assoc.Attr,'comm.Attr,'special['__[
    'id-hook[''NumberOpSymbol.Sort,''lcm.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''leastSort.Sort,
    '__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaLeastSort.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''left-id.Sort,
    ''Term.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''length.Sort,
    ''String.Sort,''Nat.Sort,'special['__['id-hook[''StringOpSymbol.Sort,
    ''length.Sort],'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,''Nat.Sort,
    ''NzNat.Sort]]]],'op_:_->_`[_`].[''lesserSorts.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaLesserSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''maximalSorts.Sort,
    '__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaMaximalSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''mb_:_`[_`]..Qid,
    '__[''Term.Sort,''Sort.Sort,''AttrSet.Sort],''MembAx.Sort,'__['ctor.Attr,
    'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[''memo.Sort,'nil.TypeList,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''metaApply.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Substitution?`].Kind,''`[FindResult`,NatList`,Bound`].Kind],
    ''`[ResultTriple?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaApply.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''metaFrewrite.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[ResultPair?`].Kind,'special['__[
    'id-hook[''MetaLevelOpSymbol.Sort,''metaFrewrite.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaMatch.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Condition`].Kind,''`[FindResult`,NatList`,Bound`].Kind],
    ''`[Substitution?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaMatch.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''metaParse.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[ResultPair?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaParse.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''metaPrettyPrint.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaPrettyPrint.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaReduce.Sort,
    '__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[ResultPair?`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaReduce.Sort],'op-hook[''qidSymbol.Sort,''<Qids>.Sort,'nil.TypeList,
    ''Qid.Sort],'op-hook[''metaTermSymbol.Sort,''_`[_`].Qid,'__[''Qid.Sort,
    ''GroundTermList.Sort],''GroundTerm.Sort],'op-hook[''metaArgSymbol.Sort,
    ''_`,_.Qid,'__[''GroundTermList.Sort,''GroundTermList.Sort],
    ''GroundTermList.Sort],'op-hook[''assignmentSymbol.Sort,''_<-_.Sort,'__[
    ''Variable.Sort,''Term.Sort],''Assignment.Sort],'op-hook[
    ''emptySubstitutionSymbol.Sort,''none.Sort,'nil.TypeList,
    ''Substitution.Sort],'op-hook[''substitutionSymbol.Sort,''_;_.Sort,'__[
    ''Substitution.Sort,''Substitution.Sort],''Substitution.Sort],'op-hook[
    ''holeSymbol.Sort,''`[`].Kind,'nil.TypeList,''Context.Sort],'op-hook[
    ''protectingSymbol.Sort,''protecting_..Qid,''ModuleExpression.Sort,
    ''Import.Sort],'op-hook[''extendingSymbol.Sort,''extending_..Qid,
    ''ModuleExpression.Sort,''Import.Sort],'op-hook[''includingSymbol.Sort,
    ''including_..Qid,''ModuleExpression.Sort,''Import.Sort],'op-hook[
    ''nilImportListSymbol.Sort,''nil.Sort,'nil.TypeList,''ImportList.Sort],
    'op-hook[''importListSymbol.Sort,''__.Sort,'__[''ImportList.Sort,
    ''ImportList.Sort],''ImportList.Sort],'op-hook[''emptySortSetSymbol.Sort,
    ''none.Sort,'nil.TypeList,''SortSet.Sort],'op-hook[''sortSetSymbol.Sort,
    ''_;_.Sort,'__[''SortSet.Sort,''SortSet.Sort],''SortSet.Sort],'op-hook[
    ''subsortSymbol.Sort,''subsort_<_..Qid,'__[''Sort.Sort,''Sort.Sort],
    ''SubsortDecl.Sort],'op-hook[''emptySubsortDeclSetSymbol.Sort,''none.Sort,
    'nil.TypeList,''SubsortDeclSet.Sort],'op-hook[''subsortDeclSetSymbol.Sort,
    ''__.Sort,'__[''SubsortDeclSet.Sort,''SubsortDeclSet.Sort],
    ''SubsortDeclSet.Sort],'op-hook[''nilQidListSymbol.Sort,''nil.Sort,
    'nil.TypeList,''QidList.Sort],'op-hook[''qidListSymbol.Sort,''__.Sort,'__[
    ''QidList.Sort,''QidList.Sort],''QidList.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort],'op-hook[''natListSymbol.Sort,''__.Sort,
    '__[''NatList.Sort,''NatList.Sort],''NatList.Sort],'op-hook[
    ''unboundedSymbol.Sort,''unbounded.Sort,'nil.TypeList,''Bound.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,''Char.Sort],
    'op-hook[''sortRenamingSymbol.Sort,''sort_to_.Sort,'__[''Qid.Sort,
    ''Qid.Sort],''Renaming.Sort],'op-hook[''opRenamingSymbol.Sort,
    ''op_to_`[_`].Qid,'__[''Qid.Sort,''Qid.Sort,''AttrSet.Sort],
    ''Renaming.Sort],'op-hook[''opRenamingSymbol2.Sort,''op_:_->_to_`[_`].Qid,
    '__[''Qid.Sort,''TypeList.Sort,''Type.Sort,''Qid.Sort,''AttrSet.Sort],
    ''Renaming.Sort],'op-hook[''labelRenamingSymbol.Sort,''label_to_.Sort,'__[
    ''Qid.Sort,''Qid.Sort],''Renaming.Sort],'op-hook[''renamingSetSymbol.Sort,
    ''_`,_.Qid,'__[''RenamingSet.Sort,''RenamingSet.Sort],''RenamingSet.Sort],
    'op-hook[''sumSymbol.Sort,''_+_.Sort,'__[''ModuleExpression.Sort,
    ''ModuleExpression.Sort],''ModuleExpression.Sort],'op-hook[
    ''renamingSymbol.Sort,''_*`(_`).Sort,'__[''ModuleExpression.Sort,
    ''RenamingSet.Sort],''ModuleExpression.Sort],'op-hook[
    ''termHookSymbol.Sort,''term-hook.Sort,'__[''Qid.Sort,''Term.Sort],
    ''Hook.Sort],'op-hook[''hookListSymbol.Sort,''__.Sort,'__[''HookList.Sort,
    ''HookList.Sort],''HookList.Sort],'op-hook[''idHookSymbol.Sort,
    ''id-hook.Sort,'__[''Qid.Sort,''QidList.Sort],''Hook.Sort],'op-hook[
    ''opHookSymbol.Sort,''op-hook.Sort,'__[''Qid.Sort,''Qid.Sort,
    ''QidList.Sort,''Qid.Sort],''Hook.Sort],'op-hook[''assocSymbol.Sort,
    ''assoc.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''commSymbol.Sort,
    ''comm.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''idemSymbol.Sort,
    ''idem.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''iterSymbol.Sort,
    ''iter.Sort,'nil.TypeList,''Attr.Sort],'op-hook[''idSymbol.Sort,''id.Sort,
    ''Term.Sort,''Attr.Sort],'op-hook[''leftIdSymbol.Sort,''left-id.Sort,
    ''Term.Sort,''Attr.Sort],'op-hook[''rightIdSymbol.Sort,''right-id.Sort,
    ''Term.Sort,''Attr.Sort],'op-hook[''stratSymbol.Sort,''strat.Sort,
    ''NatList.Sort,''Attr.Sort],'op-hook[''memoSymbol.Sort,''memo.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''precSymbol.Sort,''prec.Sort,
    ''Nat.Sort,''Attr.Sort],'op-hook[''gatherSymbol.Sort,''gather.Sort,
    ''QidList.Sort,''Attr.Sort],'op-hook[''formatSymbol.Sort,''format.Sort,
    ''QidList.Sort,''Attr.Sort],'op-hook[''ctorSymbol.Sort,''ctor.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''frozenSymbol.Sort,''frozen.Sort,
    ''NatList.Sort,''Attr.Sort],'op-hook[''polySymbol.Sort,''poly.Sort,
    ''NatList.Sort,''Attr.Sort],'op-hook[''configSymbol.Sort,''config.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''objectSymbol.Sort,''object.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''msgSymbol.Sort,''msg.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''specialSymbol.Sort,''special.Sort,
    ''HookList.Sort,''Attr.Sort],'op-hook[''labelSymbol.Sort,''label.Sort,
    ''Qid.Sort,''Attr.Sort],'op-hook[''metadataSymbol.Sort,''metadata.Sort,
    ''String.Sort,''Attr.Sort],'op-hook[''owiseSymbol.Sort,''owise.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''nonexecSymbol.Sort,''nonexec.Sort,
    'nil.TypeList,''Attr.Sort],'op-hook[''emptyAttrSetSymbol.Sort,''none.Sort,
    'nil.TypeList,''AttrSet.Sort],'op-hook[''attrSetSymbol.Sort,''__.Sort,'__[
    ''AttrSet.Sort,''AttrSet.Sort],''AttrSet.Sort],'op-hook[
    ''opDeclSymbol.Sort,''op_:_->_`[_`]..Qid,'__[''Qid.Sort,''TypeList.Sort,
    ''Type.Sort,''AttrSet.Sort],''OpDecl.Sort],'op-hook[''opDeclSetSymbol.Sort,
    ''__.Sort,'__[''OpDeclSet.Sort,''OpDeclSet.Sort],''OpDeclSet.Sort],
    'op-hook[''emptyOpDeclSetSymbol.Sort,''none.Sort,'nil.TypeList,
    ''OpDeclSet.Sort],'op-hook[''noConditionSymbol.Sort,''nil.Sort,
    'nil.TypeList,''EqCondition.Sort],'op-hook[''equalityConditionSymbol.Sort,
    ''_=_.Sort,'__[''Term.Sort,''Term.Sort],''EqCondition.Sort],'op-hook[
    ''sortTestConditionSymbol.Sort,''_:_.Variable,'__[''Term.Sort,''Sort.Sort],
    ''EqCondition.Sort],'op-hook[''matchConditionSymbol.Sort,''_:=_.Variable,
    '__[''Term.Sort,''Term.Sort],''EqCondition.Sort],'op-hook[
    ''rewriteConditionSymbol.Sort,''_=>_.Sort,'__[''Term.Sort,''Term.Sort],
    ''Condition.Sort],'op-hook[''conjunctionSymbol.Sort,''_/\_.Sort,'__[
    ''EqCondition.Sort,''EqCondition.Sort],''EqCondition.Sort],'op-hook[
    ''mbSymbol.Sort,''mb_:_`[_`]..Qid,'__[''Term.Sort,''Sort.Sort,
    ''AttrSet.Sort],''MembAx.Sort],'op-hook[''cmbSymbol.Sort,
    ''cmb_:_if_`[_`]..Qid,'__[''Term.Sort,''Sort.Sort,''EqCondition.Sort,
    ''AttrSet.Sort],''MembAx.Sort],'op-hook[''emptyMembAxSetSymbol.Sort,
    ''none.Sort,'nil.TypeList,''MembAxSet.Sort],'op-hook[
    ''membAxSetSymbol.Sort,''__.Sort,'__[''MembAxSet.Sort,''MembAxSet.Sort],
    ''MembAxSet.Sort],'op-hook[''eqSymbol.Sort,''eq_=_`[_`]..Qid,'__[
    ''Term.Sort,''Term.Sort,''AttrSet.Sort],''Equation.Sort],'op-hook[
    ''ceqSymbol.Sort,''ceq_=_if_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,
    ''EqCondition.Sort,''AttrSet.Sort],''Equation.Sort],'op-hook[
    ''emptyEquationSetSymbol.Sort,''none.Sort,'nil.TypeList,
    ''EquationSet.Sort],'op-hook[''equationSetSymbol.Sort,''__.Sort,'__[
    ''EquationSet.Sort,''EquationSet.Sort],''EquationSet.Sort],'op-hook[
    ''rlSymbol.Sort,''rl_=>_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,
    ''AttrSet.Sort],''Rule.Sort],'op-hook[''crlSymbol.Sort,
    ''crl_=>_if_`[_`]..Qid,'__[''Term.Sort,''Term.Sort,''Condition.Sort,
    ''AttrSet.Sort],''Rule.Sort],'op-hook[''emptyRuleSetSymbol.Sort,
    ''none.Sort,'nil.TypeList,''RuleSet.Sort],'op-hook[''ruleSetSymbol.Sort,
    ''__.Sort,'__[''RuleSet.Sort,''RuleSet.Sort],''RuleSet.Sort],'op-hook[
    ''fmodSymbol.Sort,''fmod_is_sorts_.____endfm.Constant,'__[''Qid.Sort,
    ''ImportList.Sort,''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,
    ''MembAxSet.Sort,''EquationSet.Sort],''FModule.Sort],'op-hook[
    ''modSymbol.Sort,''mod_is_sorts_._____endm.Constant,'__[''Qid.Sort,
    ''ImportList.Sort,''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,
    ''MembAxSet.Sort,''EquationSet.Sort,''RuleSet.Sort],''Module.Sort],
    'op-hook[''emptyKindSetSymbol.Sort,''empty.Sort,'nil.TypeList,
    ''KindSet.Sort],'op-hook[''kindSetSymbol.Sort,''_&_.Sort,'__[
    ''KindSet.Sort,''KindSet.Sort],''KindSet.Sort],'op-hook[
    ''anyTypeSymbol.Sort,''anyType.Sort,'nil.TypeList,''Type?.Sort],'op-hook[
    ''resultPairSymbol.Sort,''`{_`,_`}.Qid,'__[''Term.Sort,''Type.Sort],
    ''ResultPair.Sort],'op-hook[''resultTripleSymbol.Sort,''`{_`,_`,_`}.Qid,
    '__[''Term.Sort,''Type.Sort,''Substitution.Sort],''ResultTriple.Sort],
    'op-hook[''result4TupleSymbol.Sort,''`{_`,_`,_`,_`}.Qid,'__[''Term.Sort,
    ''Type.Sort,''Substitution.Sort,''Context.Sort],''Result4Tuple.Sort],
    'op-hook[''matchPairSymbol.Sort,''`{_`,_`}.Qid,'__[''Substitution.Sort,
    ''Context.Sort],''MatchPair.Sort],'op-hook[''noParseSymbol.Sort,
    ''noParse.Sort,''Nat.Sort,''ResultPair?.Sort],'op-hook[
    ''ambiguitySymbol.Sort,''ambiguity.Sort,'__[''ResultPair.Sort,
    ''ResultPair.Sort],''ResultPair?.Sort],'op-hook[''failure3Symbol.Sort,
    ''failure.Sort,'nil.TypeList,''ResultTriple?.Sort],'op-hook[
    ''failure4Symbol.Sort,''failure.Sort,'nil.TypeList,''Result4Tuple?.Sort],
    'op-hook[''noMatchSubstSymbol.Sort,''noMatch.Sort,'nil.TypeList,
    ''Substitution?.Sort],'op-hook[''noMatchPairSymbol.Sort,''noMatch.Sort,
    'nil.TypeList,''MatchPair?.Sort],'term-hook[''trueTerm.Sort,
    ''true.Bool.Constant],'term-hook[''falseTerm.Sort,
    ''false.Bool.Constant]]]],'op_:_->_`[_`].[''metaRewrite.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[ResultPair?`].Kind,'special['__[
    'id-hook[''MetaLevelOpSymbol.Sort,''metaRewrite.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaSearch.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Condition`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[ResultTriple?`].Kind,'special[
    '__['id-hook[''MetaLevelOpSymbol.Sort,''metaSearch.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaXapply.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Substitution?`].Kind,''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[Result4Tuple?`].Kind,'special[
    '__['id-hook[''MetaLevelOpSymbol.Sort,''metaXapply.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metaXmatch.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Condition`].Kind,''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],''`[MatchPair?`].Kind,'special['__[
    'id-hook[''MetaLevelOpSymbol.Sort,''metaXmatch.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''metadata.Sort,''String.Sort,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''minimalSorts.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaMinimalSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[''modExp.Sort,'__[
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind,
    ''`[FindResult`,NatList`,Bound`].Kind],
    ''`[FindResult`,NatList`,Bound`].Kind,'special['__['id-hook[
    ''NumberOpSymbol.Sort,''modExp.Sort],'op-hook[''succSymbol.Sort,''s_.Sort,
    ''Nat.Sort,''NzNat.Sort]]]],'op_:_->_`[_`].[
    ''mod_is_sorts_._____endm.Constant,'__[''Qid.Sort,''ImportList.Sort,
    ''SortSet.Sort,''SubsortDeclSet.Sort,''OpDeclSet.Sort,''MembAxSet.Sort,
    ''EquationSet.Sort,''RuleSet.Sort],''Module.Sort,'__['ctor.Attr,'gather[
    '__[''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,''&.Sort,
    ''&.Sort]],'format['__[''d.Sort,''d.Sort,''d.Sort,''n++i.Sort,''ni.Sort,
    ''d.Sort,''d.Sort,''ni.Sort,''ni.Sort,''ni.Sort,''ni.Sort,''ni.Sort,
    ''n--i.Sort,''d.Sort]]]],'op_:_->_`[_`].[''msg.Sort,'nil.TypeList,
    ''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,
    ''EqCondition.Sort,'none.AttrSet],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,
    ''ImportList.Sort,'ctor.Attr],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,
    ''QidList.Sort,'ctor.Attr],'op_:_->_`[_`].[''nil.Sort,'nil.TypeList,
    ''TypeList.Sort,'ctor.Attr],'op_:_->_`[_`].[''noMatch.Sort,'nil.TypeList,
    ''MatchPair?.Sort,'ctor.Attr],'op_:_->_`[_`].[''noMatch.Sort,'nil.TypeList,
    ''Substitution?.Sort,'ctor.Attr],'op_:_->_`[_`].[''noParse.Sort,''Nat.Sort,
    ''ResultPair?.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''AttrSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''EquationSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''MembAxSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''OpDeclSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''RuleSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''SortSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,'nil.TypeList,
    ''SubsortDeclSet.Sort,'ctor.Attr],'op_:_->_`[_`].[''none.Sort,
    'nil.TypeList,''Substitution.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''nonexec.Sort,'nil.TypeList,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[
    ''notFound.Sort,'nil.TypeList,''FindResult.Sort,'none.AttrSet],
    'op_:_->_`[_`].[''not_.Sort,''Bool.Sort,''Bool.Sort,'prec['s_^53[
    '0.Zero]]],'op_:_->_`[_`].[''object.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''op-hook.Sort,'__[''Qid.Sort,''Qid.Sort,
    ''QidList.Sort,''Qid.Sort],''Hook.Sort,'__['ctor.Attr,'format['__[
    ''nssss.Sort,''d.Sort]]]],'op_:_->_`[_`].[''op_:_->_`[_`]..Qid,'__[
    ''Qid.Sort,''TypeList.Sort,''Type.Sort,''AttrSet.Sort],''OpDecl.Sort,'__[
    'ctor.Attr,'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,
    ''d.Sort,''s.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[
    ''op_:_->_to_`[_`].Qid,'__[''Qid.Sort,''TypeList.Sort,''Type.Sort,
    ''Qid.Sort,''AttrSet.Sort],''Renaming.Sort,'__['ctor.Attr,'format['__[
    ''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort,''d.Sort,''d.Sort]]]],'op_:_->_`[_`].[''op_to_`[_`].Qid,
    '__[''Qid.Sort,''Qid.Sort,''AttrSet.Sort],''Renaming.Sort,'__['ctor.Attr,
    'format['__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''d.Sort]]]],'op_:_->_`[_`].[''owise.Sort,'nil.TypeList,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''poly.Sort,''NatList.Sort,''Attr.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''prec.Sort,''Nat.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''protecting_..Qid,''ModuleExpression.Sort,''Import.Sort,
    'ctor.Attr],'op_:_->_`[_`].[''qid.Sort,''`[String`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''QuotedIdentifierOpSymbol.Sort,''qid.Sort],'op-hook[
    ''quotedIdentifierSymbol.Sort,''<Qids>.Sort,'nil.TypeList,''Qid.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort]]]],'op_:_->_`[_`].[''rfind.Sort,'__[''String.Sort,
    ''String.Sort,''Nat.Sort],''FindResult.Sort,'special['__['id-hook[
    ''StringOpSymbol.Sort,''rfind.Sort],'op-hook[''stringSymbol.Sort,
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort],'term-hook[''notFoundTerm.Sort,
    ''notFound.FindResult.Constant]]]],'op_:_->_`[_`].[''right-id.Sort,
    ''Term.Sort,''Attr.Sort,'ctor.Attr],'op_:_->_`[_`].[''rl_=>_`[_`]..Qid,'__[
    ''Term.Sort,''Term.Sort,''AttrSet.Sort],''Rule.Sort,'__['ctor.Attr,'format[
    '__[''d.Sort,''d.Sort,''d.Sort,''d.Sort,''s.Sort,''d.Sort,''d.Sort,
    ''s.Sort,''d.Sort]]]],'op_:_->_`[_`].[''s_.Sort,''Nat.Sort,''NzNat.Sort,
    '__['iter.Attr,'ctor.Attr,'special['__['id-hook[''SuccSymbol.Sort,
    'nil.TypeList],'term-hook[''zeroTerm.Sort,''0.Zero.Constant]]]]],
    'op_:_->_`[_`].[''sameKind.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaSameKind.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''sd.Sort,'__[''Nat.Sort,''Nat.Sort],''Nat.Sort,'__['comm.Attr,'special[
    '__['id-hook[''NumberOpSymbol.Sort,''sd.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]]],'op_:_->_`[_`].[''sortLeq.Sort,'__[
    ''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaSortLeq.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''sort_to_.Sort,'__[''Qid.Sort,''Qid.Sort],''Renaming.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''special.Sort,''HookList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''strat.Sort,''NatList.Sort,''Attr.Sort,'ctor.Attr],
    'op_:_->_`[_`].[''string.Sort,''Qid.Sort,''String.Sort,'special['__[
    'id-hook[''QuotedIdentifierOpSymbol.Sort,''string.Sort],'op-hook[
    ''quotedIdentifierSymbol.Sort,''<Qids>.Sort,'nil.TypeList,''Qid.Sort],
    'op-hook[''stringSymbol.Sort,''<Strings>.Sort,'nil.TypeList,
    ''Char.Sort]]]],'op_:_->_`[_`].[''subsort_<_..Qid,'__[''Sort.Sort,
    ''Sort.Sort],''SubsortDecl.Sort,'ctor.Attr],'op_:_->_`[_`].[''substr.Sort,
    '__[''String.Sort,''Nat.Sort,''Nat.Sort],''String.Sort,'special['__[
    'id-hook[''StringOpSymbol.Sort,''substr.Sort],'op-hook[''stringSymbol.Sort,
    ''<Strings>.Sort,'nil.TypeList,''Char.Sort],'op-hook[''succSymbol.Sort,
    ''s_.Sort,''Nat.Sort,''NzNat.Sort]]]],'op_:_->_`[_`].[''term-hook.Sort,'__[
    ''Qid.Sort,''Term.Sort],''Hook.Sort,'__['ctor.Attr,'format['__[
    ''nssss.Sort,''d.Sort]]]],'op_:_->_`[_`].[''true.Sort,'nil.TypeList,
    ''Bool.Sort,'__['ctor.Attr,'special['id-hook[''SystemTrue.Sort,
    'nil.TypeList]]]],'op_:_->_`[_`].[''unbounded.Sort,'nil.TypeList,
    ''Bound.Sort,'none.AttrSet],'op_:_->_`[_`].[''upEqs.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[EquationSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpEqs.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upImports.Sort,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[ImportList`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaUpImports.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''upMbs.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[MembAxSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpMbs.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upModule.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[Module`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpModule.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upOpDecls.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[OpDeclSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpOpDecls.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upRls.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[RuleSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpRls.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],
    'op_:_->_`[_`].[''upSorts.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    'special['__['id-hook[''MetaLevelOpSymbol.Sort,''metaUpSorts.Sort],
    'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,
    ''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''upSubsortDecls.Sort,'__[
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind,
    ''`[Bool`].Kind],''`[SubsortDeclSet`].Kind,'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpSubsortDecls.Sort],'op-hook[
    ''shareWith.Sort,''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]],'op_:_->_`[_`].[''upTerm.Sort,''Universal.Sort,
    ''Term.Sort,'__['poly['s_['0.Zero]],'special['__['id-hook[
    ''MetaLevelOpSymbol.Sort,''metaUpTerm.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]]],'op_:_->_`[_`].[''wellFormed.Sort,''Module.Sort,
    ''Bool.Sort,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaWellFormedModule.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,
    '__[''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''wellFormed.Sort,'__[''`[Module`].Kind,
    ''`[SortSet`,KindSet`,QidList`,Type?`,GTermList`,ModuleExpression`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaWellFormedTerm.Sort],'op-hook[''shareWith.Sort,''metaReduce.Sort,'__[
    ''Module.Sort,''SortSet.Sort],''ResultPair?.Sort]]]],'op_:_->_`[_`].[
    ''wellFormed.Sort,'__[''`[Module`].Kind,''`[Substitution?`].Kind],
    ''`[Bool`].Kind,'special['__['id-hook[''MetaLevelOpSymbol.Sort,
    ''metaWellFormedSubstitution.Sort],'op-hook[''shareWith.Sort,
    ''metaReduce.Sort,'__[''Module.Sort,''SortSet.Sort],
    ''ResultPair?.Sort]]]]],'none.MembAxSet,'__['eq_=_`[_`].['_`[_`][
    ''_&_.Sort,'_`,_[''K:Kind.Variable,''K:Kind.Variable]],''K:Kind.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_;_.Sort,'_`,_[
    ''A:Assignment.Variable,''A:Assignment.Variable]],''A:Assignment.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_;_.Sort,'_`,_[''S:Sort.Variable,
    ''S:Sort.Variable]],''S:Sort.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''__.Sort,'_`,_[''A:Attr.Variable,''A:Attr.Variable]],''A:Attr.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''__.Sort,'_`,_[''E:Equation.Variable,
    ''E:Equation.Variable]],''E:Equation.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''__.Sort,'_`,_[''M:MembAx.Variable,''M:MembAx.Variable]],
    ''M:MembAx.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''__.Sort,'_`,_[
    ''O:OpDecl.Variable,''O:OpDecl.Variable]],''O:OpDecl.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''__.Sort,'_`,_[''R:Rule.Variable,
    ''R:Rule.Variable]],''R:Rule.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''__.Sort,'_`,_[''S:SubsortDecl.Variable,''S:SubsortDecl.Variable]],
    ''S:SubsortDecl.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,
    '_`,_[''A:Bool.Variable,''A:Bool.Variable]],''A:Bool.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    '_`[_`][''_xor_.Sort,'_`,_[''B:Bool.Variable,''C:Bool.Variable]]]],'_`[_`][
    ''_xor_.Sort,'_`,_['_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    ''B:Bool.Variable]],'_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    ''C:Bool.Variable]]]],'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,
    '_`,_[''false.Bool.Constant,''A:Bool.Variable]],''false.Bool.Constant,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''_and_.Sort,'_`,_[
    ''true.Bool.Constant,''A:Bool.Variable]],''A:Bool.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''_implies_.Sort,'_`,_[''A:Bool.Variable,
    ''B:Bool.Variable]],'_`[_`][''not_.Sort,'_`[_`][''_xor_.Sort,'_`,_[
    ''A:Bool.Variable,'_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,
    ''B:Bool.Variable]]]]],'none.AttrSet],'eq_=_`[_`].['_`[_`][''_or_.Sort,
    '_`,_[''A:Bool.Variable,''B:Bool.Variable]],'_`[_`][''_xor_.Sort,'_`,_[
    '_`[_`][''_and_.Sort,'_`,_[''A:Bool.Variable,''B:Bool.Variable]],'_`[_`][
    ''_xor_.Sort,'_`,_[''A:Bool.Variable,''B:Bool.Variable]]]],'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''_xor_.Sort,'_`,_[''A:Bool.Variable,
    ''A:Bool.Variable]],''false.Bool.Constant,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''_xor_.Sort,'_`,_[''false.Bool.Constant,''A:Bool.Variable]],
    ''A:Bool.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''`[_`].Kind,
    ''Q:Qid.Variable],'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,'_`[_`][''protecting_..Qid,''Q:Qid.Variable],
    ''none.SortSet.Constant,''none.SubsortDeclSet.Constant,
    ''none.OpDeclSet.Constant,''none.MembAxSet.Constant,
    ''none.EquationSet.Constant,''none.RuleSet.Constant]],'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getContext.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,'_`,_[
    ''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable,
    ''C:Context.Variable]]],''C:Context.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getContext.Sort,'_`[_`][''`{_`,_`}.Qid,'_`,_[
    ''S:Substitution.Variable,''C:Context.Variable]]],''C:Context.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getEqs.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''EQS:EquationSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getEqs.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''EQS:EquationSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getImports.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''IL:ImportList.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getImports.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''IL:ImportList.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getMbs.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''MAS:MembAxSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getMbs.Sort,
    '_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''MAS:MembAxSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getName.Sort,''C:Constant.Variable],'_`[_`][
    ''qid.Sort,'_`[_`][''substr.Sort,'_`,_['_`[_`][''string.Sort,
    ''C:Constant.Variable],''0.Zero.Constant,'_`[_`][''rfind.Sort,'_`,_[
    '_`[_`][''string.Sort,''C:Constant.Variable],''".".Char.Constant,'_`[_`][
    ''length.Sort,'_`[_`][''string.Sort,''C:Constant.Variable]]]]]]],
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getName.Sort,''V:Variable.Variable],
    '_`[_`][''qid.Sort,'_`[_`][''substr.Sort,'_`,_['_`[_`][''string.Sort,
    ''V:Variable.Variable],''0.Zero.Constant,'_`[_`][''rfind.Sort,'_`,_[
    '_`[_`][''string.Sort,''V:Variable.Variable],''":".Char.Constant,'_`[_`][
    ''length.Sort,'_`[_`][''string.Sort,''V:Variable.Variable]]]]]]],
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getName.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],''Q:Qid.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getName.Sort,'_`[_`][
    ''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''Q:Qid.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getOps.Sort,'_`[_`][''fmod_is_sorts_.____endfm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''OPDS:OpDeclSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getOps.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''OPDS:OpDeclSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getRls.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''none.RuleSet.Constant,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getRls.Sort,
    '_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''RLS:RuleSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSorts.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''SS:SortSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getSorts.Sort,
    '_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''SS:SortSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSubsorts.Sort,'_`[_`][
    ''fmod_is_sorts_.____endfm.Constant,'_`,_[''Q:Qid.Variable,
    ''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable]]],
    ''SSDS:SubsortDeclSet.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getSubsorts.Sort,'_`[_`][''mod_is_sorts_._____endm.Constant,'_`,_[
    ''Q:Qid.Variable,''IL:ImportList.Variable,''SS:SortSet.Variable,
    ''SSDS:SubsortDeclSet.Variable,''OPDS:OpDeclSet.Variable,
    ''MAS:MembAxSet.Variable,''EQS:EquationSet.Variable,
    ''RLS:RuleSet.Variable]]],''SSDS:SubsortDeclSet.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSubstitution.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,
    '_`,_[''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable,
    ''C:Context.Variable]]],''S:Substitution.Variable,'none.AttrSet],
    'eq_=_`[_`].['_`[_`][''getSubstitution.Sort,'_`[_`][''`{_`,_`,_`}.Qid,
    '_`,_[''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable]]],
    ''S:Substitution.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getSubstitution.Sort,'_`[_`][''`{_`,_`}.Qid,'_`,_[
    ''S:Substitution.Variable,''C:Context.Variable]]],
    ''S:Substitution.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getTerm.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,'_`,_[''T:Term.Variable,
    ''T:Type.Variable,''S:Substitution.Variable,''C:Context.Variable]]],
    ''T:Term.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][''getTerm.Sort,
    '_`[_`][''`{_`,_`,_`}.Qid,'_`,_[''T:Term.Variable,''T:Type.Variable,
    ''S:Substitution.Variable]]],''T:Term.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getTerm.Sort,'_`[_`][''`{_`,_`}.Qid,'_`,_[''T:Term.Variable,
    ''T:Type.Variable]]],''T:Term.Variable,'none.AttrSet],'eq_=_`[_`].['_`[_`][
    ''getType.Sort,''C:Constant.Variable],'_`[_`][''qid.Sort,'_`[_`][
    ''substr.Sort,'_`,_['_`[_`][''string.Sort,''C:Constant.Variable],'_`[_`][
    ''_+_.Sort,'_`,_['_`[_`][''s_.Sort,''0.Zero.Constant],'_`[_`][''rfind.Sort,
    '_`,_['_`[_`][''string.Sort,''C:Constant.Variable],''".".Char.Constant,
    '_`[_`][''length.Sort,'_`[_`][''string.Sort,''C:Constant.Variable]]]]]],
    '_`[_`][''length.Sort,'_`[_`][''string.Sort,''C:Constant.Variable]]]]],
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getType.Sort,''V:Variable.Variable],
    '_`[_`][''qid.Sort,'_`[_`][''substr.Sort,'_`,_['_`[_`][''string.Sort,
    ''V:Variable.Variable],'_`[_`][''_+_.Sort,'_`,_['_`[_`][''s_.Sort,
    ''0.Zero.Constant],'_`[_`][''rfind.Sort,'_`,_['_`[_`][''string.Sort,
    ''V:Variable.Variable],''":".Char.Constant,'_`[_`][''length.Sort,'_`[_`][
    ''string.Sort,''V:Variable.Variable]]]]]],'_`[_`][''length.Sort,'_`[_`][
    ''string.Sort,''V:Variable.Variable]]]]],'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getType.Sort,'_`[_`][''`{_`,_`,_`,_`}.Qid,'_`,_[
    ''T:Term.Variable,''T:Type.Variable,''S:Substitution.Variable,
    ''C:Context.Variable]]],''T:Type.Variable,'none.AttrSet],'eq_=_`[_`].[
    '_`[_`][''getType.Sort,'_`[_`][''`{_`,_`,_`}.Qid,'_`,_[''T:Term.Variable,
    ''T:Type.Variable,''S:Substitution.Variable]]],''T:Type.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''getType.Sort,'_`[_`][''`{_`,_`}.Qid,
    '_`,_[''T:Term.Variable,''T:Type.Variable]]],''T:Type.Variable,
    'none.AttrSet],'eq_=_`[_`].['_`[_`][''not_.Sort,''A:Bool.Variable],'_`[_`][
    ''_xor_.Sort,'_`,_[''true.Bool.Constant,''A:Bool.Variable]],
    'none.AttrSet]]],'FModule}
==========================================
reduce in META-LEVEL : metaReduce(upModule('META-LEVEL, true), 'upModule[
    upTerm('META-LEVEL),upTerm(true)]) == {upTerm(upModule('META-LEVEL, true)),
    'FModule} .
rewrites: 7
result Bool: false
Maude> Bye.
